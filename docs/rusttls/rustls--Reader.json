{
  "title": "Struct rustls::Reader",
  "sections": [
    {
      "name": "implementations",
      "methods": []
    },
    {
      "name": "derefMethods",
      "methods": []
    },
    {
      "name": "traitImpl",
      "traits": [
        {
          "title": "impl<'a> Read for Reader<'a>",
          "methods": [
            {
              "code": "fn read(&mut self, buf: &mut [u8]) -> Result<usize>",
              "text": "Obtain plaintext data received from the peer over this TLS connection."
            },
            {
              "code": "fn read_buf(&mut self, buf: &mut ReadBuf<'_>) -> Result<()>",
              "text": "Obtain plaintext data received from the peer over this TLS connection."
            },
            {
              "code": "fn read_vectored(&mut self, bufs: &mut [IoSliceMut<'_>]) -> Result<usize, Error>",
              "text": "Like read, except that it reads into a slice of buffers."
            },
            {
              "code": "fn is_read_vectored(&self) -> bool",
              "text": "Determines if this Reader has an efficient read_vectored implementation."
            },
            {
              "code": "fn read_to_end(&mut self, buf: &mut Vec<u8, Global>) -> Result<usize, Error>",
              "text": "Read all bytes until EOF in this source, placing them into buf."
            },
            {
              "code": "fn read_to_string(&mut self, buf: &mut String) -> Result<usize, Error>",
              "text": "Read all bytes until EOF in this source, appending them to buf."
            },
            {
              "code": "fn read_exact(&mut self, buf: &mut [u8]) -> Result<(), Error>",
              "text": "Read the exact number of bytes required to fill buf."
            },
            {
              "code": "fn read_buf_exact(&mut self, buf: &mut ReadBuf<'_>) -> Result<(), Error>",
              "text": "Read the exact number of bytes required to fill buf."
            },
            {
              "code": "fn by_ref(&mut self) -> &mut Self",
              "text": "Creates a “by reference” adaptor for this instance of Read."
            },
            {
              "code": "fn bytes(self) -> Bytes<Self>",
              "text": "Transforms this Read instance to an Iterator over its bytes."
            },
            {
              "code": "fn chain<R>(self, next: R) -> Chain<Self, R> where R: Read,",
              "text": "Creates an adapter which will chain this stream with another."
            },
            {
              "code": "fn take(self, limit: u64) -> Take<Self>",
              "text": "Creates an adapter which will read at most limit bytes from it."
            }
          ]
        }
      ]
    }
  ]
}