{
  "title": "Struct rustls::ConnectionCommon",
  "sections": [
    {
      "name": "implementations",
      "methods": [
        {
          "code": "pub fn reader(&mut self) -> Reader<'_>ⓘNotable traits for Reader<'a>impl<'a> Read for Reader<'a>",
          "text": "Returns an object that allows reading plaintext."
        },
        {
          "code": "pub fn writer(&mut self) -> Writer<'_>ⓘNotable traits for Writer<'a>impl<'a> Write for Writer<'a>",
          "text": "Returns an object that allows writing plaintext."
        },
        {
          "code": "pub fn complete_io<T>(&mut self, io: &mut T) -> Result<(usize, usize), Error> where Self: Sized, T: Read + Write,",
          "text": "This function uses io to complete any outstanding IO for this connection."
        },
        {
          "code": "pub fn process_new_packets(&mut self) -> Result<IoState, Error>",
          "text": "Processes any new packets read by a previous call to Connection::read_tls."
        },
        {
          "code": "pub fn read_tls(&mut self, rd: &mut dyn Read) -> Result<usize, Error>",
          "text": "Read TLS content from rd. This method does internal buffering, so rd can supply TLS messages in arbitrary- sized chunks (like a socket or pipe might)."
        },
        {
          "code": "pub fn export_keying_material( &self, output: &mut [u8], label: &[u8], context: Option<&[u8]>) -> Result<(), Error>",
          "text": "Derives key material from the agreed connection secrets."
        }
      ]
    },
    {
      "name": "derefMethods",
      "methods": []
    },
    {
      "name": "traitImpl",
      "traits": [
        {
          "title": "impl<T> Deref for ConnectionCommon<T>",
          "methods": [
            {
              "code": "type Target = CommonState",
              "text": "The resulting type after dereferencing."
            },
            {
              "code": "fn deref(&self) -> &Self::Target",
              "text": "Dereferences the value."
            }
          ]
        },
        {
          "title": "impl<T> DerefMut for ConnectionCommon<T>",
          "methods": [
            {
              "code": "fn deref_mut(&mut self) -> &mut Self::Target",
              "text": "Mutably dereferences the value."
            }
          ]
        }
      ]
    }
  ]
}