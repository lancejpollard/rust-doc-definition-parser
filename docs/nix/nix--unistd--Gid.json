{
  "title": "Struct nix::unistd::Gid",
  "sections": [
    {
      "name": "implementations",
      "methods": [
        {
          "code": "pub const fn from_raw(gid: gid_t) -> Self",
          "text": "Creates Gid from raw gid_t."
        },
        {
          "code": "pub fn current() -> Self",
          "text": "Returns Gid of calling process. This is practically a more Rusty alias for getgid."
        },
        {
          "code": "pub fn effective() -> Self",
          "text": "Returns effective Gid of calling process. This is practically a more Rusty alias for getegid."
        },
        {
          "code": "pub const fn as_raw(self) -> gid_t",
          "text": "Get the raw gid_t wrapped by self."
        }
      ]
    },
    {
      "name": "derefMethods",
      "methods": []
    },
    {
      "name": "traitImpl",
      "traits": [
        {
          "title": "impl Clone for Gid",
          "methods": [
            {
              "code": "fn clone(&self) -> Gid",
              "text": "Returns a copy of the value."
            },
            {
              "code": "fn clone_from(&mut self, source: &Self)",
              "text": "Performs copy-assignment from source."
            }
          ]
        },
        {
          "title": "impl Debug for Gid",
          "methods": [
            {
              "code": "fn fmt(&self, f: &mut Formatter<'_>) -> Result",
              "text": "Formats the value using the given formatter."
            }
          ]
        },
        {
          "title": "impl Display for Gid",
          "methods": [
            {
              "code": "fn fmt(&self, f: &mut Formatter<'_>) -> Result",
              "text": "Formats the value using the given formatter."
            }
          ]
        },
        {
          "title": "impl From<Gid> for gid_t",
          "methods": [
            {
              "code": "fn from(gid: Gid) -> Self",
              "text": "Performs the conversion."
            }
          ]
        },
        {
          "title": "impl Hash for Gid",
          "methods": [
            {
              "code": "fn hash<__H: Hasher>(&self, state: &mut __H)",
              "text": "Feeds this value into the given Hasher."
            },
            {
              "code": "fn hash_slice<H>(data: &[Self], state: &mut H) where H: Hasher,",
              "text": "Feeds a slice of this type into the given Hasher."
            }
          ]
        },
        {
          "title": "impl PartialEq<Gid> for Gid",
          "methods": [
            {
              "code": "fn eq(&self, other: &Gid) -> bool",
              "text": "This method tests for self and other values to be equal, and is used by ==."
            },
            {
              "code": "fn ne(&self, other: &Gid) -> bool",
              "text": "This method tests for !=."
            }
          ]
        }
      ]
    }
  ]
}