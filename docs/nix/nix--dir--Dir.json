{
  "title": "Struct nix::dir::Dir",
  "sections": [
    {
      "name": "implementations",
      "methods": [
        {
          "code": "pub fn open<P: ?Sized + NixPath>( path: &P, oflag: OFlag, mode: Mode) -> Result<Self>",
          "text": "Opens the given path as with fcntl::open."
        },
        {
          "code": "pub fn openat<P: ?Sized + NixPath>( dirfd: RawFd, path: &P, oflag: OFlag, mode: Mode) -> Result<Self>",
          "text": "Opens the given path as with fcntl::openat."
        },
        {
          "code": "pub fn from<F: IntoRawFd>(fd: F) -> Result<Self>",
          "text": "Converts from a descriptor-based object, closing the descriptor on success or failure."
        },
        {
          "code": "pub fn from_fd(fd: RawFd) -> Result<Self>",
          "text": "Converts from a file descriptor, closing it on success or failure."
        },
        {
          "code": "pub fn iter(&mut self) -> Iter<'_>â“˜Notable traits for Iter<'d>impl<'d> Iterator for Iter<'d> type Item = Result<Entry>;",
          "text": "Returns an iterator of Result<Entry> which rewinds when finished."
        }
      ]
    },
    {
      "name": "derefMethods",
      "methods": []
    },
    {
      "name": "traitImpl",
      "traits": [
        {
          "title": "impl AsRawFd for Dir",
          "methods": [
            {
              "code": "fn as_raw_fd(&self) -> RawFd",
              "text": "Extracts the raw file descriptor."
            }
          ]
        },
        {
          "title": "impl Debug for Dir",
          "methods": [
            {
              "code": "fn fmt(&self, f: &mut Formatter<'_>) -> Result",
              "text": "Formats the value using the given formatter."
            }
          ]
        },
        {
          "title": "impl Drop for Dir",
          "methods": [
            {
              "code": "fn drop(&mut self)",
              "text": "Executes the destructor for this type."
            }
          ]
        },
        {
          "title": "impl Hash for Dir",
          "methods": [
            {
              "code": "fn hash<__H: Hasher>(&self, state: &mut __H)",
              "text": "Feeds this value into the given Hasher."
            },
            {
              "code": "fn hash_slice<H>(data: &[Self], state: &mut H) where H: Hasher,",
              "text": "Feeds a slice of this type into the given Hasher."
            }
          ]
        },
        {
          "title": "impl IntoIterator for Dir",
          "methods": [
            {
              "code": "fn into_iter(self) -> Self::IntoIter",
              "text": "Creates a owning iterator, that is, one that takes ownership of the Dir. The Dir cannot be used after calling this. This can be useful when you have a function that both creates a Dir instance and returns an Iterator."
            },
            {
              "code": "type Item = Result<Entry>",
              "text": "The type of the elements being iterated over."
            },
            {
              "code": "type IntoIter = OwningIter",
              "text": "Which kind of iterator are we turning this into?"
            }
          ]
        },
        {
          "title": "impl PartialEq<Dir> for Dir",
          "methods": [
            {
              "code": "fn eq(&self, other: &Dir) -> bool",
              "text": "This method tests for self and other values to be equal, and is used by ==."
            },
            {
              "code": "fn ne(&self, other: &Dir) -> bool",
              "text": "This method tests for !=."
            }
          ]
        }
      ]
    }
  ]
}