{
  "title": "Struct hyper::ext::Protocol",
  "sections": [
    {
      "name": "implementations",
      "methods": []
    },
    {
      "name": "derefMethods",
      "methods": []
    },
    {
      "name": "traitImpl",
      "traits": [
        {
          "title": "impl AsRef<[u8]> for Protocol",
          "methods": [
            {
              "code": "fn as_ref(&self) -> &[u8]â“˜Notable traits for &'_ [u8]impl<'_> Read for &'_ [u8]impl<'_> Write for &'_ mut [u8]",
              "text": "Converts this type into a shared reference of the (usually inferred) input type."
            }
          ]
        },
        {
          "title": "impl Clone for Protocol",
          "methods": [
            {
              "code": "fn clone(&self) -> Protocol",
              "text": "Returns a copy of the value."
            },
            {
              "code": "fn clone_from(&mut self, source: &Self)",
              "text": "Performs copy-assignment from source."
            }
          ]
        },
        {
          "title": "impl Debug for Protocol",
          "methods": [
            {
              "code": "fn fmt(&self, f: &mut Formatter<'_>) -> Result",
              "text": "Formats the value using the given formatter."
            }
          ]
        },
        {
          "title": "impl<'a> From<&'a str> for Protocol",
          "methods": [
            {
              "code": "fn from(value: &'a str) -> Self",
              "text": "Converts to this type from the input type."
            }
          ]
        },
        {
          "title": "impl PartialEq<Protocol> for Protocol",
          "methods": [
            {
              "code": "fn eq(&self, other: &Protocol) -> bool",
              "text": "This method tests for self and other values to be equal, and is used by ==."
            },
            {
              "code": "fn ne(&self, other: &Protocol) -> bool",
              "text": "This method tests for !=."
            }
          ]
        }
      ]
    }
  ]
}