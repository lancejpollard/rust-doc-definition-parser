{
  "title": "Primitive Type isize",
  "sections": [
    {
      "name": "implementations",
      "methods": [
        {
          "code": "pub const MIN: isize",
          "text": "The smallest value that can be represented by this integer type, -263."
        },
        {
          "code": "pub const MAX: isize",
          "text": "The largest value that can be represented by this integer type, 263 - 1."
        },
        {
          "code": "pub const BITS: u32",
          "text": "The size of this integer type in bits."
        },
        {
          "code": "pub fn from_str_radix(src: &str, radix: u32) -> Result<isize, ParseIntError>",
          "text": "Converts a string slice in a given base to an integer."
        },
        {
          "code": "pub const fn count_ones(self) -> u32",
          "text": "Returns the number of ones in the binary representation of self."
        },
        {
          "code": "pub const fn count_zeros(self) -> u32",
          "text": "Returns the number of zeros in the binary representation of self."
        },
        {
          "code": "pub const fn leading_zeros(self) -> u32",
          "text": "Returns the number of leading zeros in the binary representation of self."
        },
        {
          "code": "pub const fn trailing_zeros(self) -> u32",
          "text": "Returns the number of trailing zeros in the binary representation of self."
        },
        {
          "code": "pub const fn leading_ones(self) -> u32",
          "text": "Returns the number of leading ones in the binary representation of self."
        },
        {
          "code": "pub const fn trailing_ones(self) -> u32",
          "text": "Returns the number of trailing ones in the binary representation of self."
        },
        {
          "code": "pub const fn rotate_left(self, n: u32) -> isize",
          "text": "Shifts the bits to the left by a specified amount, n, wrapping the truncated bits to the end of the resulting integer."
        },
        {
          "code": "pub const fn rotate_right(self, n: u32) -> isize",
          "text": "Shifts the bits to the right by a specified amount, n, wrapping the truncated bits to the beginning of the resulting integer."
        },
        {
          "code": "pub const fn swap_bytes(self) -> isize",
          "text": "Reverses the byte order of the integer."
        },
        {
          "code": "pub const fn reverse_bits(self) -> isize",
          "text": "Reverses the order of bits in the integer. The least significant bit becomes the most significant bit, second least-significant bit becomes second most-significant bit, etc."
        },
        {
          "code": "pub const fn from_be(x: isize) -> isize",
          "text": "Converts an integer from big endian to the target’s endianness."
        },
        {
          "code": "pub const fn from_le(x: isize) -> isize",
          "text": "Converts an integer from little endian to the target’s endianness."
        },
        {
          "code": "pub const fn to_be(self) -> isize",
          "text": "Converts self to big endian from the target’s endianness."
        },
        {
          "code": "pub const fn to_le(self) -> isize",
          "text": "Converts self to little endian from the target’s endianness."
        },
        {
          "code": "pub const fn checked_add(self, rhs: isize) -> Option<isize>",
          "text": "Checked integer addition. Computes self + rhs, returning None if overflow occurred."
        },
        {
          "code": "pub unsafe fn unchecked_add(self, rhs: isize) -> isize",
          "text": "Unchecked integer addition. Computes self + rhs, assuming overflow cannot occur."
        },
        {
          "code": "pub fn checked_add_unsigned(self, rhs: usize) -> Option<isize>",
          "text": "Checked addition with an unsigned integer. Computes self + rhs, returning None if overflow occurred."
        },
        {
          "code": "pub const fn checked_sub(self, rhs: isize) -> Option<isize>",
          "text": "Checked integer subtraction. Computes self - rhs, returning None if overflow occurred."
        },
        {
          "code": "pub unsafe fn unchecked_sub(self, rhs: isize) -> isize",
          "text": "Unchecked integer subtraction. Computes self - rhs, assuming overflow cannot occur."
        },
        {
          "code": "pub fn checked_sub_unsigned(self, rhs: usize) -> Option<isize>",
          "text": "Checked subtraction with an unsigned integer. Computes self - rhs, returning None if overflow occurred."
        },
        {
          "code": "pub const fn checked_mul(self, rhs: isize) -> Option<isize>",
          "text": "Checked integer multiplication. Computes self * rhs, returning None if overflow occurred."
        },
        {
          "code": "pub unsafe fn unchecked_mul(self, rhs: isize) -> isize",
          "text": "Unchecked integer multiplication. Computes self * rhs, assuming overflow cannot occur."
        },
        {
          "code": "pub const fn checked_div(self, rhs: isize) -> Option<isize>",
          "text": "Checked integer division. Computes self / rhs, returning None if rhs == 0 or the division results in overflow."
        },
        {
          "code": "pub const fn checked_div_euclid(self, rhs: isize) -> Option<isize>",
          "text": "Checked Euclidean division. Computes self.div_euclid(rhs), returning None if rhs == 0 or the division results in overflow."
        },
        {
          "code": "pub const fn checked_rem(self, rhs: isize) -> Option<isize>",
          "text": "Checked integer remainder. Computes self % rhs, returning None if rhs == 0 or the division results in overflow."
        },
        {
          "code": "pub const fn checked_rem_euclid(self, rhs: isize) -> Option<isize>",
          "text": "Checked Euclidean remainder. Computes self.rem_euclid(rhs), returning None if rhs == 0 or the division results in overflow."
        },
        {
          "code": "pub const fn checked_neg(self) -> Option<isize>",
          "text": "Checked negation. Computes -self, returning None if self == MIN."
        },
        {
          "code": "pub const fn checked_shl(self, rhs: u32) -> Option<isize>",
          "text": "Checked shift left. Computes self << rhs, returning None if rhs is larger than or equal to the number of bits in self."
        },
        {
          "code": "pub unsafe fn unchecked_shl(self, rhs: isize) -> isize",
          "text": "Unchecked shift left. Computes self << rhs, assuming that rhs is less than the number of bits in self."
        },
        {
          "code": "pub const fn checked_shr(self, rhs: u32) -> Option<isize>",
          "text": "Checked shift right. Computes self >> rhs, returning None if rhs is larger than or equal to the number of bits in self."
        },
        {
          "code": "pub unsafe fn unchecked_shr(self, rhs: isize) -> isize",
          "text": "Unchecked shift right. Computes self >> rhs, assuming that rhs is less than the number of bits in self."
        },
        {
          "code": "pub const fn checked_abs(self) -> Option<isize>",
          "text": "Checked absolute value. Computes self.abs(), returning None if self == MIN."
        },
        {
          "code": "pub const fn checked_pow(self, exp: u32) -> Option<isize>",
          "text": "Checked exponentiation. Computes self.pow(exp), returning None if overflow occurred."
        },
        {
          "code": "pub const fn saturating_add(self, rhs: isize) -> isize",
          "text": "Saturating integer addition. Computes self + rhs, saturating at the numeric bounds instead of overflowing."
        },
        {
          "code": "pub fn saturating_add_unsigned(self, rhs: usize) -> isize",
          "text": "Saturating addition with an unsigned integer. Computes self + rhs, saturating at the numeric bounds instead of overflowing."
        },
        {
          "code": "pub const fn saturating_sub(self, rhs: isize) -> isize",
          "text": "Saturating integer subtraction. Computes self - rhs, saturating at the numeric bounds instead of overflowing."
        },
        {
          "code": "pub fn saturating_sub_unsigned(self, rhs: usize) -> isize",
          "text": "Saturating subtraction with an unsigned integer. Computes self - rhs, saturating at the numeric bounds instead of overflowing."
        },
        {
          "code": "pub const fn saturating_neg(self) -> isize",
          "text": "Saturating integer negation. Computes -self, returning MAX if self == MIN instead of overflowing."
        },
        {
          "code": "pub const fn saturating_abs(self) -> isize",
          "text": "Saturating absolute value. Computes self.abs(), returning MAX if self == MIN instead of overflowing."
        },
        {
          "code": "pub const fn saturating_mul(self, rhs: isize) -> isize",
          "text": "Saturating integer multiplication. Computes self * rhs, saturating at the numeric bounds instead of overflowing."
        },
        {
          "code": "pub const fn saturating_div(self, rhs: isize) -> isize",
          "text": "Saturating integer division. Computes self / rhs, saturating at the numeric bounds instead of overflowing."
        },
        {
          "code": "pub const fn saturating_pow(self, exp: u32) -> isize",
          "text": "Saturating integer exponentiation. Computes self.pow(exp), saturating at the numeric bounds instead of overflowing."
        },
        {
          "code": "pub const fn wrapping_add(self, rhs: isize) -> isize",
          "text": "Wrapping (modular) addition. Computes self + rhs, wrapping around at the boundary of the type."
        },
        {
          "code": "pub fn wrapping_add_unsigned(self, rhs: usize) -> isize",
          "text": "Wrapping (modular) addition with an unsigned integer. Computes self + rhs, wrapping around at the boundary of the type."
        },
        {
          "code": "pub const fn wrapping_sub(self, rhs: isize) -> isize",
          "text": "Wrapping (modular) subtraction. Computes self - rhs, wrapping around at the boundary of the type."
        },
        {
          "code": "pub fn wrapping_sub_unsigned(self, rhs: usize) -> isize",
          "text": "Wrapping (modular) subtraction with an unsigned integer. Computes self - rhs, wrapping around at the boundary of the type."
        },
        {
          "code": "pub const fn wrapping_mul(self, rhs: isize) -> isize",
          "text": "Wrapping (modular) multiplication. Computes self * rhs, wrapping around at the boundary of the type."
        },
        {
          "code": "pub const fn wrapping_div(self, rhs: isize) -> isize",
          "text": "Wrapping (modular) division. Computes self / rhs, wrapping around at the boundary of the type."
        },
        {
          "code": "pub const fn wrapping_div_euclid(self, rhs: isize) -> isize",
          "text": "Wrapping Euclidean division. Computes self.div_euclid(rhs), wrapping around at the boundary of the type."
        },
        {
          "code": "pub const fn wrapping_rem(self, rhs: isize) -> isize",
          "text": "Wrapping (modular) remainder. Computes self % rhs, wrapping around at the boundary of the type."
        },
        {
          "code": "pub const fn wrapping_rem_euclid(self, rhs: isize) -> isize",
          "text": "Wrapping Euclidean remainder. Computes self.rem_euclid(rhs), wrapping around at the boundary of the type."
        },
        {
          "code": "pub const fn wrapping_neg(self) -> isize",
          "text": "Wrapping (modular) negation. Computes -self, wrapping around at the boundary of the type."
        },
        {
          "code": "pub const fn wrapping_shl(self, rhs: u32) -> isize",
          "text": "Panic-free bitwise shift-left; yields self << mask(rhs), where mask removes any high-order bits of rhs that would cause the shift to exceed the bitwidth of the type."
        },
        {
          "code": "pub const fn wrapping_shr(self, rhs: u32) -> isize",
          "text": "Panic-free bitwise shift-right; yields self >> mask(rhs), where mask removes any high-order bits of rhs that would cause the shift to exceed the bitwidth of the type."
        },
        {
          "code": "pub const fn wrapping_abs(self) -> isize",
          "text": "Wrapping (modular) absolute value. Computes self.abs(), wrapping around at the boundary of the type."
        },
        {
          "code": "pub const fn unsigned_abs(self) -> usize",
          "text": "Computes the absolute value of self without any wrapping or panicking."
        },
        {
          "code": "pub const fn wrapping_pow(self, exp: u32) -> isize",
          "text": "Wrapping (modular) exponentiation. Computes self.pow(exp), wrapping around at the boundary of the type."
        },
        {
          "code": "pub const fn overflowing_add(self, rhs: isize) -> (isize, bool)",
          "text": "Calculates self + rhs"
        },
        {
          "code": "pub fn overflowing_add_unsigned(self, rhs: usize) -> (isize, bool)",
          "text": "Calculates self + rhs with an unsigned rhs"
        },
        {
          "code": "pub const fn overflowing_sub(self, rhs: isize) -> (isize, bool)",
          "text": "Calculates self - rhs"
        },
        {
          "code": "pub fn overflowing_sub_unsigned(self, rhs: usize) -> (isize, bool)",
          "text": "Calculates self - rhs with an unsigned rhs"
        },
        {
          "code": "pub const fn overflowing_mul(self, rhs: isize) -> (isize, bool)",
          "text": "Calculates the multiplication of self and rhs."
        },
        {
          "code": "pub const fn overflowing_div(self, rhs: isize) -> (isize, bool)",
          "text": "Calculates the divisor when self is divided by rhs."
        },
        {
          "code": "pub const fn overflowing_div_euclid(self, rhs: isize) -> (isize, bool)",
          "text": "Calculates the quotient of Euclidean division self.div_euclid(rhs)."
        },
        {
          "code": "pub const fn overflowing_rem(self, rhs: isize) -> (isize, bool)",
          "text": "Calculates the remainder when self is divided by rhs."
        },
        {
          "code": "pub const fn overflowing_rem_euclid(self, rhs: isize) -> (isize, bool)",
          "text": "Overflowing Euclidean remainder. Calculates self.rem_euclid(rhs)."
        },
        {
          "code": "pub const fn overflowing_neg(self) -> (isize, bool)",
          "text": "Negates self, overflowing if this is equal to the minimum value."
        },
        {
          "code": "pub const fn overflowing_shl(self, rhs: u32) -> (isize, bool)",
          "text": "Shifts self left by rhs bits."
        },
        {
          "code": "pub const fn overflowing_shr(self, rhs: u32) -> (isize, bool)",
          "text": "Shifts self right by rhs bits."
        },
        {
          "code": "pub const fn overflowing_abs(self) -> (isize, bool)",
          "text": "Computes the absolute value of self."
        },
        {
          "code": "pub const fn overflowing_pow(self, exp: u32) -> (isize, bool)",
          "text": "Raises self to the power of exp, using exponentiation by squaring."
        },
        {
          "code": "pub const fn pow(self, exp: u32) -> isize",
          "text": "Raises self to the power of exp, using exponentiation by squaring."
        },
        {
          "code": "pub const fn div_euclid(self, rhs: isize) -> isize",
          "text": "Calculates the quotient of Euclidean division of self by rhs."
        },
        {
          "code": "pub const fn rem_euclid(self, rhs: isize) -> isize",
          "text": "Calculates the least nonnegative remainder of self (mod rhs)."
        },
        {
          "code": "pub const fn div_floor(self, rhs: isize) -> isize",
          "text": "Calculates the quotient of self and rhs, rounding the result towards negative infinity."
        },
        {
          "code": "pub const fn div_ceil(self, rhs: isize) -> isize",
          "text": "Calculates the quotient of self and rhs, rounding the result towards positive infinity."
        },
        {
          "code": "pub const fn next_multiple_of(self, rhs: isize) -> isize",
          "text": "If rhs is positive, calculates the smallest value greater than or equal to self that is a multiple of rhs. If rhs is negative, calculates the largest value less than or equal to self that is a multiple of rhs."
        },
        {
          "code": "pub const fn checked_next_multiple_of(self, rhs: isize) -> Option<isize>",
          "text": "If rhs is positive, calculates the smallest value greater than or equal to self that is a multiple of rhs. If rhs is negative, calculates the largest value less than or equal to self that is a multiple of rhs. Returns None if rhs is zero or the operation would result in overflow."
        },
        {
          "code": "pub const fn log(self, base: isize) -> u32",
          "text": "Returns the logarithm of the number with respect to an arbitrary base, rounded down."
        },
        {
          "code": "pub const fn log2(self) -> u32",
          "text": "Returns the base 2 logarithm of the number, rounded down."
        },
        {
          "code": "pub const fn log10(self) -> u32",
          "text": "Returns the base 10 logarithm of the number, rounded down."
        },
        {
          "code": "pub const fn checked_log(self, base: isize) -> Option<u32>",
          "text": "Returns the logarithm of the number with respect to an arbitrary base, rounded down."
        },
        {
          "code": "pub const fn checked_log2(self) -> Option<u32>",
          "text": "Returns the base 2 logarithm of the number, rounded down."
        },
        {
          "code": "pub const fn checked_log10(self) -> Option<u32>",
          "text": "Returns the base 10 logarithm of the number, rounded down."
        },
        {
          "code": "pub const fn abs(self) -> isize",
          "text": "Computes the absolute value of self."
        },
        {
          "code": "pub const fn abs_diff(self, other: isize) -> usize",
          "text": "Computes the absolute difference between self and other."
        },
        {
          "code": "pub const fn signum(self) -> isize",
          "text": "Returns a number representing sign of self."
        },
        {
          "code": "pub const fn is_positive(self) -> bool",
          "text": "Returns true if self is positive and false if the number is zero or negative."
        },
        {
          "code": "pub const fn is_negative(self) -> bool",
          "text": "Returns true if self is negative and false if the number is zero or positive."
        },
        {
          "code": "pub const fn to_be_bytes(self) -> [u8; 8]",
          "text": "Return the memory representation of this integer as a byte array in big-endian (network) byte order."
        },
        {
          "code": "pub const fn to_le_bytes(self) -> [u8; 8]",
          "text": "Return the memory representation of this integer as a byte array in little-endian byte order."
        },
        {
          "code": "pub const fn to_ne_bytes(self) -> [u8; 8]",
          "text": "Return the memory representation of this integer as a byte array in native byte order."
        },
        {
          "code": "pub const fn from_be_bytes(bytes: [u8; 8]) -> isize",
          "text": "Create an integer value from its representation as a byte array in big endian."
        },
        {
          "code": "pub const fn from_le_bytes(bytes: [u8; 8]) -> isize",
          "text": "Create an integer value from its representation as a byte array in little endian."
        },
        {
          "code": "pub const fn from_ne_bytes(bytes: [u8; 8]) -> isize",
          "text": "Create an integer value from its memory representation as a byte array in native endianness."
        }
      ]
    },
    {
      "name": "derefMethods",
      "methods": []
    },
    {
      "name": "traitImpl",
      "traits": [
        {
          "title": "impl<'_> Add<&'_ isize> for isize",
          "methods": [
            {
              "code": "type Output = <isize as Add<isize>>::Output",
              "text": "The resulting type after applying the + operator."
            },
            {
              "code": "pub fn add(self, other: &isize) -> <isize as Add<isize>>::Output",
              "text": "Performs the + operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Add<&'_ isize> for &'_ isize",
          "methods": [
            {
              "code": "type Output = <isize as Add<isize>>::Output",
              "text": "The resulting type after applying the + operator."
            },
            {
              "code": "pub fn add(self, other: &isize) -> <isize as Add<isize>>::Output",
              "text": "Performs the + operation."
            }
          ]
        },
        {
          "title": "impl Add<isize> for isize",
          "methods": [
            {
              "code": "type Output = isize",
              "text": "The resulting type after applying the + operator."
            },
            {
              "code": "pub fn add(self, other: isize) -> isize",
              "text": "Performs the + operation."
            }
          ]
        },
        {
          "title": "impl<'a> Add<isize> for &'a isize",
          "methods": [
            {
              "code": "type Output = <isize as Add<isize>>::Output",
              "text": "The resulting type after applying the + operator."
            },
            {
              "code": "pub fn add(self, other: isize) -> <isize as Add<isize>>::Output",
              "text": "Performs the + operation."
            }
          ]
        },
        {
          "title": "impl<'_> AddAssign<&'_ isize> for isize",
          "methods": [
            {
              "code": "pub fn add_assign(&mut self, other: &isize)",
              "text": "Performs the += operation."
            }
          ]
        },
        {
          "title": "impl AddAssign<isize> for isize",
          "methods": [
            {
              "code": "pub fn add_assign(&mut self, other: isize)",
              "text": "Performs the += operation."
            }
          ]
        },
        {
          "title": "impl Binary for isize",
          "methods": [
            {
              "code": "pub fn fmt(&self, f: &mut Formatter<'_>) -> Result<(), Error>",
              "text": "Formats the value using the given formatter."
            }
          ]
        },
        {
          "title": "impl<'_, '_> BitAnd<&'_ isize> for &'_ isize",
          "methods": [
            {
              "code": "type Output = <isize as BitAnd<isize>>::Output",
              "text": "The resulting type after applying the & operator."
            },
            {
              "code": "pub fn bitand(self, other: &isize) -> <isize as BitAnd<isize>>::Output",
              "text": "Performs the & operation."
            }
          ]
        },
        {
          "title": "impl<'_> BitAnd<&'_ isize> for isize",
          "methods": [
            {
              "code": "type Output = <isize as BitAnd<isize>>::Output",
              "text": "The resulting type after applying the & operator."
            },
            {
              "code": "pub fn bitand(self, other: &isize) -> <isize as BitAnd<isize>>::Output",
              "text": "Performs the & operation."
            }
          ]
        },
        {
          "title": "impl<'a> BitAnd<isize> for &'a isize",
          "methods": [
            {
              "code": "type Output = <isize as BitAnd<isize>>::Output",
              "text": "The resulting type after applying the & operator."
            },
            {
              "code": "pub fn bitand(self, other: isize) -> <isize as BitAnd<isize>>::Output",
              "text": "Performs the & operation."
            }
          ]
        },
        {
          "title": "impl BitAnd<isize> for isize",
          "methods": [
            {
              "code": "type Output = isize",
              "text": "The resulting type after applying the & operator."
            },
            {
              "code": "pub fn bitand(self, rhs: isize) -> isize",
              "text": "Performs the & operation."
            }
          ]
        },
        {
          "title": "impl<'_> BitAndAssign<&'_ isize> for isize",
          "methods": [
            {
              "code": "pub fn bitand_assign(&mut self, other: &isize)",
              "text": "Performs the &= operation."
            }
          ]
        },
        {
          "title": "impl BitAndAssign<isize> for isize",
          "methods": [
            {
              "code": "pub fn bitand_assign(&mut self, other: isize)",
              "text": "Performs the &= operation."
            }
          ]
        },
        {
          "title": "impl<'_> BitOr<&'_ isize> for isize",
          "methods": [
            {
              "code": "type Output = <isize as BitOr<isize>>::Output",
              "text": "The resulting type after applying the | operator."
            },
            {
              "code": "pub fn bitor(self, other: &isize) -> <isize as BitOr<isize>>::Output",
              "text": "Performs the | operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> BitOr<&'_ isize> for &'_ isize",
          "methods": [
            {
              "code": "type Output = <isize as BitOr<isize>>::Output",
              "text": "The resulting type after applying the | operator."
            },
            {
              "code": "pub fn bitor(self, other: &isize) -> <isize as BitOr<isize>>::Output",
              "text": "Performs the | operation."
            }
          ]
        },
        {
          "title": "impl BitOr<NonZeroIsize> for isize",
          "methods": [
            {
              "code": "type Output = NonZeroIsize",
              "text": "The resulting type after applying the | operator."
            },
            {
              "code": "pub fn bitor(self, rhs: NonZeroIsize) -> <isize as BitOr<NonZeroIsize>>::Output",
              "text": "Performs the | operation."
            }
          ]
        },
        {
          "title": "impl<'a> BitOr<isize> for &'a isize",
          "methods": [
            {
              "code": "type Output = <isize as BitOr<isize>>::Output",
              "text": "The resulting type after applying the | operator."
            },
            {
              "code": "pub fn bitor(self, other: isize) -> <isize as BitOr<isize>>::Output",
              "text": "Performs the | operation."
            }
          ]
        },
        {
          "title": "impl BitOr<isize> for NonZeroIsize",
          "methods": [
            {
              "code": "type Output = NonZeroIsize",
              "text": "The resulting type after applying the | operator."
            },
            {
              "code": "pub fn bitor(self, rhs: isize) -> <NonZeroIsize as BitOr<isize>>::Output",
              "text": "Performs the | operation."
            }
          ]
        },
        {
          "title": "impl BitOr<isize> for isize",
          "methods": [
            {
              "code": "type Output = isize",
              "text": "The resulting type after applying the | operator."
            },
            {
              "code": "pub fn bitor(self, rhs: isize) -> isize",
              "text": "Performs the | operation."
            }
          ]
        },
        {
          "title": "impl<'_> BitOrAssign<&'_ isize> for isize",
          "methods": [
            {
              "code": "pub fn bitor_assign(&mut self, other: &isize)",
              "text": "Performs the |= operation."
            }
          ]
        },
        {
          "title": "impl BitOrAssign<isize> for NonZeroIsize",
          "methods": [
            {
              "code": "pub fn bitor_assign(&mut self, rhs: isize)",
              "text": "Performs the |= operation."
            }
          ]
        },
        {
          "title": "impl BitOrAssign<isize> for isize",
          "methods": [
            {
              "code": "pub fn bitor_assign(&mut self, other: isize)",
              "text": "Performs the |= operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> BitXor<&'_ isize> for &'_ isize",
          "methods": [
            {
              "code": "type Output = <isize as BitXor<isize>>::Output",
              "text": "The resulting type after applying the ^ operator."
            },
            {
              "code": "pub fn bitxor(self, other: &isize) -> <isize as BitXor<isize>>::Output",
              "text": "Performs the ^ operation."
            }
          ]
        },
        {
          "title": "impl<'_> BitXor<&'_ isize> for isize",
          "methods": [
            {
              "code": "type Output = <isize as BitXor<isize>>::Output",
              "text": "The resulting type after applying the ^ operator."
            },
            {
              "code": "pub fn bitxor(self, other: &isize) -> <isize as BitXor<isize>>::Output",
              "text": "Performs the ^ operation."
            }
          ]
        },
        {
          "title": "impl BitXor<isize> for isize",
          "methods": [
            {
              "code": "type Output = isize",
              "text": "The resulting type after applying the ^ operator."
            },
            {
              "code": "pub fn bitxor(self, other: isize) -> isize",
              "text": "Performs the ^ operation."
            }
          ]
        },
        {
          "title": "impl<'a> BitXor<isize> for &'a isize",
          "methods": [
            {
              "code": "type Output = <isize as BitXor<isize>>::Output",
              "text": "The resulting type after applying the ^ operator."
            },
            {
              "code": "pub fn bitxor(self, other: isize) -> <isize as BitXor<isize>>::Output",
              "text": "Performs the ^ operation."
            }
          ]
        },
        {
          "title": "impl<'_> BitXorAssign<&'_ isize> for isize",
          "methods": [
            {
              "code": "pub fn bitxor_assign(&mut self, other: &isize)",
              "text": "Performs the ^= operation."
            }
          ]
        },
        {
          "title": "impl BitXorAssign<isize> for isize",
          "methods": [
            {
              "code": "pub fn bitxor_assign(&mut self, other: isize)",
              "text": "Performs the ^= operation."
            }
          ]
        },
        {
          "title": "impl Clone for isize",
          "methods": [
            {
              "code": "pub fn clone(&self) -> isize",
              "text": "Returns a copy of the value."
            },
            {
              "code": "fn clone_from(&mut self, source: &Self)",
              "text": "Performs copy-assignment from source."
            }
          ]
        },
        {
          "title": "impl Debug for isize",
          "methods": [
            {
              "code": "pub fn fmt(&self, f: &mut Formatter<'_>) -> Result<(), Error>",
              "text": "Formats the value using the given formatter."
            }
          ]
        },
        {
          "title": "impl Default for isize",
          "methods": [
            {
              "code": "pub fn default() -> isize",
              "text": "Returns the default value of 0"
            }
          ]
        },
        {
          "title": "impl Display for isize",
          "methods": [
            {
              "code": "pub fn fmt(&self, f: &mut Formatter<'_>) -> Result<(), Error>",
              "text": "Formats the value using the given formatter."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Div<&'_ isize> for &'_ isize",
          "methods": [
            {
              "code": "type Output = <isize as Div<isize>>::Output",
              "text": "The resulting type after applying the / operator."
            },
            {
              "code": "pub fn div(self, other: &isize) -> <isize as Div<isize>>::Output",
              "text": "Performs the / operation."
            }
          ]
        },
        {
          "title": "impl<'_> Div<&'_ isize> for isize",
          "methods": [
            {
              "code": "type Output = <isize as Div<isize>>::Output",
              "text": "The resulting type after applying the / operator."
            },
            {
              "code": "pub fn div(self, other: &isize) -> <isize as Div<isize>>::Output",
              "text": "Performs the / operation."
            }
          ]
        },
        {
          "title": "impl Div<isize> for isize",
          "methods": [
            {
              "code": "type Output = isize",
              "text": "The resulting type after applying the / operator."
            },
            {
              "code": "pub fn div(self, other: isize) -> isize",
              "text": "Performs the / operation."
            }
          ]
        },
        {
          "title": "impl<'a> Div<isize> for &'a isize",
          "methods": [
            {
              "code": "type Output = <isize as Div<isize>>::Output",
              "text": "The resulting type after applying the / operator."
            },
            {
              "code": "pub fn div(self, other: isize) -> <isize as Div<isize>>::Output",
              "text": "Performs the / operation."
            }
          ]
        },
        {
          "title": "impl<'_> DivAssign<&'_ isize> for isize",
          "methods": [
            {
              "code": "pub fn div_assign(&mut self, other: &isize)",
              "text": "Performs the /= operation."
            }
          ]
        },
        {
          "title": "impl DivAssign<isize> for isize",
          "methods": [
            {
              "code": "pub fn div_assign(&mut self, other: isize)",
              "text": "Performs the /= operation."
            }
          ]
        },
        {
          "title": "impl From<NonZeroIsize> for isize",
          "methods": [
            {
              "code": "pub fn from(nonzero: NonZeroIsize) -> isize",
              "text": "Converts a NonZeroIsize into an isize"
            }
          ]
        },
        {
          "title": "impl From<bool> for isize",
          "methods": [
            {
              "code": "pub fn from(small: bool) -> isize",
              "text": "Converts a bool to a isize. The resulting value is 0 for false and 1 for true values."
            }
          ]
        },
        {
          "title": "impl From<i16> for isize",
          "methods": [
            {
              "code": "pub fn from(small: i16) -> isize",
              "text": "Converts i16 to isize losslessly."
            }
          ]
        },
        {
          "title": "impl From<i8> for isize",
          "methods": [
            {
              "code": "pub fn from(small: i8) -> isize",
              "text": "Converts i8 to isize losslessly."
            }
          ]
        },
        {
          "title": "impl From<isize> for AtomicIsize",
          "methods": [
            {
              "code": "pub fn from(v: isize) -> AtomicIsize",
              "text": "Converts an isize into an AtomicIsize."
            }
          ]
        },
        {
          "title": "impl From<u8> for isize",
          "methods": [
            {
              "code": "pub fn from(small: u8) -> isize",
              "text": "Converts u8 to isize losslessly."
            }
          ]
        },
        {
          "title": "impl FromStr for isize",
          "methods": [
            {
              "code": "type Err = ParseIntError",
              "text": "The associated error which can be returned from parsing."
            },
            {
              "code": "pub fn from_str(src: &str) -> Result<isize, ParseIntError>",
              "text": "Parses a string s to return a value of this type."
            }
          ]
        },
        {
          "title": "impl Hash for isize",
          "methods": [
            {
              "code": "pub fn hash<H>(&self, state: &mut H) where H: Hasher,",
              "text": "Feeds this value into the given Hasher."
            },
            {
              "code": "pub fn hash_slice<H>(data: &[isize], state: &mut H) where H: Hasher,",
              "text": "Feeds a slice of this type into the given Hasher."
            }
          ]
        },
        {
          "title": "impl LowerExp for isize",
          "methods": [
            {
              "code": "pub fn fmt(&self, f: &mut Formatter<'_>) -> Result<(), Error>",
              "text": "Formats the value using the given formatter."
            }
          ]
        },
        {
          "title": "impl LowerHex for isize",
          "methods": [
            {
              "code": "pub fn fmt(&self, f: &mut Formatter<'_>) -> Result<(), Error>",
              "text": "Formats the value using the given formatter."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Mul<&'_ isize> for &'_ isize",
          "methods": [
            {
              "code": "type Output = <isize as Mul<isize>>::Output",
              "text": "The resulting type after applying the * operator."
            },
            {
              "code": "pub fn mul(self, other: &isize) -> <isize as Mul<isize>>::Output",
              "text": "Performs the * operation."
            }
          ]
        },
        {
          "title": "impl<'_> Mul<&'_ isize> for isize",
          "methods": [
            {
              "code": "type Output = <isize as Mul<isize>>::Output",
              "text": "The resulting type after applying the * operator."
            },
            {
              "code": "pub fn mul(self, other: &isize) -> <isize as Mul<isize>>::Output",
              "text": "Performs the * operation."
            }
          ]
        },
        {
          "title": "impl Mul<isize> for isize",
          "methods": [
            {
              "code": "type Output = isize",
              "text": "The resulting type after applying the * operator."
            },
            {
              "code": "pub fn mul(self, other: isize) -> isize",
              "text": "Performs the * operation."
            }
          ]
        },
        {
          "title": "impl<'a> Mul<isize> for &'a isize",
          "methods": [
            {
              "code": "type Output = <isize as Mul<isize>>::Output",
              "text": "The resulting type after applying the * operator."
            },
            {
              "code": "pub fn mul(self, other: isize) -> <isize as Mul<isize>>::Output",
              "text": "Performs the * operation."
            }
          ]
        },
        {
          "title": "impl<'_> MulAssign<&'_ isize> for isize",
          "methods": [
            {
              "code": "pub fn mul_assign(&mut self, other: &isize)",
              "text": "Performs the *= operation."
            }
          ]
        },
        {
          "title": "impl MulAssign<isize> for isize",
          "methods": [
            {
              "code": "pub fn mul_assign(&mut self, other: isize)",
              "text": "Performs the *= operation."
            }
          ]
        },
        {
          "title": "impl<'_> Neg for &'_ isize",
          "methods": [
            {
              "code": "type Output = <isize as Neg>::Output",
              "text": "The resulting type after applying the - operator."
            },
            {
              "code": "pub fn neg(self) -> <isize as Neg>::Output",
              "text": "Performs the unary - operation."
            }
          ]
        },
        {
          "title": "impl Neg for isize",
          "methods": [
            {
              "code": "type Output = isize",
              "text": "The resulting type after applying the - operator."
            },
            {
              "code": "pub fn neg(self) -> isize",
              "text": "Performs the unary - operation."
            }
          ]
        },
        {
          "title": "impl Not for isize",
          "methods": [
            {
              "code": "type Output = isize",
              "text": "The resulting type after applying the ! operator."
            },
            {
              "code": "pub fn not(self) -> isize",
              "text": "Performs the unary ! operation."
            }
          ]
        },
        {
          "title": "impl<'_> Not for &'_ isize",
          "methods": [
            {
              "code": "type Output = <isize as Not>::Output",
              "text": "The resulting type after applying the ! operator."
            },
            {
              "code": "pub fn not(self) -> <isize as Not>::Output",
              "text": "Performs the unary ! operation."
            }
          ]
        },
        {
          "title": "impl Octal for isize",
          "methods": [
            {
              "code": "pub fn fmt(&self, f: &mut Formatter<'_>) -> Result<(), Error>",
              "text": "Formats the value using the given formatter."
            }
          ]
        },
        {
          "title": "impl Ord for isize",
          "methods": [
            {
              "code": "pub fn cmp(&self, other: &isize) -> Ordering",
              "text": "This method returns an Ordering between self and other."
            },
            {
              "code": "fn max(self, other: Self) -> Self",
              "text": "Compares and returns the maximum of two values."
            },
            {
              "code": "fn min(self, other: Self) -> Self",
              "text": "Compares and returns the minimum of two values."
            },
            {
              "code": "fn clamp(self, min: Self, max: Self) -> Self",
              "text": "Restrict a value to a certain interval."
            }
          ]
        },
        {
          "title": "impl PartialEq<isize> for isize",
          "methods": [
            {
              "code": "pub fn eq(&self, other: &isize) -> bool",
              "text": "This method tests for self and other values to be equal, and is used by ==."
            },
            {
              "code": "pub fn ne(&self, other: &isize) -> bool",
              "text": "This method tests for !=."
            }
          ]
        },
        {
          "title": "impl PartialOrd<isize> for isize",
          "methods": [
            {
              "code": "pub fn partial_cmp(&self, other: &isize) -> Option<Ordering>",
              "text": "This method returns an ordering between self and other values if one exists."
            },
            {
              "code": "pub fn lt(&self, other: &isize) -> bool",
              "text": "This method tests less than (for self and other) and is used by the < operator."
            },
            {
              "code": "pub fn le(&self, other: &isize) -> bool",
              "text": "This method tests less than or equal to (for self and other) and is used by the <= operator."
            },
            {
              "code": "pub fn ge(&self, other: &isize) -> bool",
              "text": "This method tests greater than or equal to (for self and other) and is used by the >= operator."
            },
            {
              "code": "pub fn gt(&self, other: &isize) -> bool",
              "text": "This method tests greater than (for self and other) and is used by the > operator."
            }
          ]
        },
        {
          "title": "impl<'a> Product<&'a isize> for isize",
          "methods": [
            {
              "code": "pub fn product<I>(iter: I) -> isize where I: Iterator<Item = &'a isize>,",
              "text": "Method which takes an iterator and generates Self from the elements by multiplying the items."
            }
          ]
        },
        {
          "title": "impl Product<isize> for isize",
          "methods": [
            {
              "code": "pub fn product<I>(iter: I) -> isize where I: Iterator<Item = isize>,",
              "text": "Method which takes an iterator and generates Self from the elements by multiplying the items."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Rem<&'_ isize> for &'_ isize",
          "methods": [
            {
              "code": "type Output = <isize as Rem<isize>>::Output",
              "text": "The resulting type after applying the % operator."
            },
            {
              "code": "pub fn rem(self, other: &isize) -> <isize as Rem<isize>>::Output",
              "text": "Performs the % operation."
            }
          ]
        },
        {
          "title": "impl<'_> Rem<&'_ isize> for isize",
          "methods": [
            {
              "code": "type Output = <isize as Rem<isize>>::Output",
              "text": "The resulting type after applying the % operator."
            },
            {
              "code": "pub fn rem(self, other: &isize) -> <isize as Rem<isize>>::Output",
              "text": "Performs the % operation."
            }
          ]
        },
        {
          "title": "impl<'a> Rem<isize> for &'a isize",
          "methods": [
            {
              "code": "type Output = <isize as Rem<isize>>::Output",
              "text": "The resulting type after applying the % operator."
            },
            {
              "code": "pub fn rem(self, other: isize) -> <isize as Rem<isize>>::Output",
              "text": "Performs the % operation."
            }
          ]
        },
        {
          "title": "impl Rem<isize> for isize",
          "methods": [
            {
              "code": "type Output = isize",
              "text": "The resulting type after applying the % operator."
            },
            {
              "code": "pub fn rem(self, other: isize) -> isize",
              "text": "Performs the % operation."
            }
          ]
        },
        {
          "title": "impl<'_> RemAssign<&'_ isize> for isize",
          "methods": [
            {
              "code": "pub fn rem_assign(&mut self, other: &isize)",
              "text": "Performs the %= operation."
            }
          ]
        },
        {
          "title": "impl RemAssign<isize> for isize",
          "methods": [
            {
              "code": "pub fn rem_assign(&mut self, other: isize)",
              "text": "Performs the %= operation."
            }
          ]
        },
        {
          "title": "impl<'_> Shl<&'_ i128> for isize",
          "methods": [
            {
              "code": "type Output = <isize as Shl<i128>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: &i128) -> <isize as Shl<i128>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Shl<&'_ i128> for &'_ isize",
          "methods": [
            {
              "code": "type Output = <isize as Shl<i128>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: &i128) -> <isize as Shl<i128>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'_> Shl<&'_ i16> for isize",
          "methods": [
            {
              "code": "type Output = <isize as Shl<i16>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: &i16) -> <isize as Shl<i16>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Shl<&'_ i16> for &'_ isize",
          "methods": [
            {
              "code": "type Output = <isize as Shl<i16>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: &i16) -> <isize as Shl<i16>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'_> Shl<&'_ i32> for isize",
          "methods": [
            {
              "code": "type Output = <isize as Shl<i32>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: &i32) -> <isize as Shl<i32>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Shl<&'_ i32> for &'_ isize",
          "methods": [
            {
              "code": "type Output = <isize as Shl<i32>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: &i32) -> <isize as Shl<i32>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Shl<&'_ i64> for &'_ isize",
          "methods": [
            {
              "code": "type Output = <isize as Shl<i64>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: &i64) -> <isize as Shl<i64>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'_> Shl<&'_ i64> for isize",
          "methods": [
            {
              "code": "type Output = <isize as Shl<i64>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: &i64) -> <isize as Shl<i64>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Shl<&'_ i8> for &'_ isize",
          "methods": [
            {
              "code": "type Output = <isize as Shl<i8>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: &i8) -> <isize as Shl<i8>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'_> Shl<&'_ i8> for isize",
          "methods": [
            {
              "code": "type Output = <isize as Shl<i8>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: &i8) -> <isize as Shl<i8>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Shl<&'_ isize> for &'_ i16",
          "methods": [
            {
              "code": "type Output = <i16 as Shl<isize>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: &isize) -> <i16 as Shl<isize>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'_> Shl<&'_ isize> for i128",
          "methods": [
            {
              "code": "type Output = <i128 as Shl<isize>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: &isize) -> <i128 as Shl<isize>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'_> Shl<&'_ isize> for i64",
          "methods": [
            {
              "code": "type Output = <i64 as Shl<isize>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: &isize) -> <i64 as Shl<isize>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Shl<&'_ isize> for &'_ i64",
          "methods": [
            {
              "code": "type Output = <i64 as Shl<isize>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: &isize) -> <i64 as Shl<isize>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'_> Shl<&'_ isize> for usize",
          "methods": [
            {
              "code": "type Output = <usize as Shl<isize>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: &isize) -> <usize as Shl<isize>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Shl<&'_ isize> for &'_ i8",
          "methods": [
            {
              "code": "type Output = <i8 as Shl<isize>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: &isize) -> <i8 as Shl<isize>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'_> Shl<&'_ isize> for u8",
          "methods": [
            {
              "code": "type Output = <u8 as Shl<isize>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: &isize) -> <u8 as Shl<isize>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'_> Shl<&'_ isize> for u16",
          "methods": [
            {
              "code": "type Output = <u16 as Shl<isize>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: &isize) -> <u16 as Shl<isize>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Shl<&'_ isize> for &'_ i32",
          "methods": [
            {
              "code": "type Output = <i32 as Shl<isize>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: &isize) -> <i32 as Shl<isize>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Shl<&'_ isize> for &'_ isize",
          "methods": [
            {
              "code": "type Output = <isize as Shl<isize>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: &isize) -> <isize as Shl<isize>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'_> Shl<&'_ isize> for i32",
          "methods": [
            {
              "code": "type Output = <i32 as Shl<isize>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: &isize) -> <i32 as Shl<isize>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Shl<&'_ isize> for &'_ usize",
          "methods": [
            {
              "code": "type Output = <usize as Shl<isize>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: &isize) -> <usize as Shl<isize>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'_> Shl<&'_ isize> for u32",
          "methods": [
            {
              "code": "type Output = <u32 as Shl<isize>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: &isize) -> <u32 as Shl<isize>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Shl<&'_ isize> for &'_ u8",
          "methods": [
            {
              "code": "type Output = <u8 as Shl<isize>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: &isize) -> <u8 as Shl<isize>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'_> Shl<&'_ isize> for u128",
          "methods": [
            {
              "code": "type Output = <u128 as Shl<isize>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: &isize) -> <u128 as Shl<isize>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Shl<&'_ isize> for &'_ u128",
          "methods": [
            {
              "code": "type Output = <u128 as Shl<isize>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: &isize) -> <u128 as Shl<isize>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Shl<&'_ isize> for &'_ u64",
          "methods": [
            {
              "code": "type Output = <u64 as Shl<isize>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: &isize) -> <u64 as Shl<isize>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Shl<&'_ isize> for &'_ i128",
          "methods": [
            {
              "code": "type Output = <i128 as Shl<isize>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: &isize) -> <i128 as Shl<isize>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Shl<&'_ isize> for &'_ u16",
          "methods": [
            {
              "code": "type Output = <u16 as Shl<isize>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: &isize) -> <u16 as Shl<isize>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'_> Shl<&'_ isize> for i8",
          "methods": [
            {
              "code": "type Output = <i8 as Shl<isize>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: &isize) -> <i8 as Shl<isize>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'_> Shl<&'_ isize> for u64",
          "methods": [
            {
              "code": "type Output = <u64 as Shl<isize>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: &isize) -> <u64 as Shl<isize>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Shl<&'_ isize> for &'_ u32",
          "methods": [
            {
              "code": "type Output = <u32 as Shl<isize>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: &isize) -> <u32 as Shl<isize>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'_> Shl<&'_ isize> for i16",
          "methods": [
            {
              "code": "type Output = <i16 as Shl<isize>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: &isize) -> <i16 as Shl<isize>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'_> Shl<&'_ isize> for isize",
          "methods": [
            {
              "code": "type Output = <isize as Shl<isize>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: &isize) -> <isize as Shl<isize>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'_> Shl<&'_ u128> for isize",
          "methods": [
            {
              "code": "type Output = <isize as Shl<u128>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: &u128) -> <isize as Shl<u128>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Shl<&'_ u128> for &'_ isize",
          "methods": [
            {
              "code": "type Output = <isize as Shl<u128>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: &u128) -> <isize as Shl<u128>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'_> Shl<&'_ u16> for isize",
          "methods": [
            {
              "code": "type Output = <isize as Shl<u16>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: &u16) -> <isize as Shl<u16>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Shl<&'_ u16> for &'_ isize",
          "methods": [
            {
              "code": "type Output = <isize as Shl<u16>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: &u16) -> <isize as Shl<u16>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'_> Shl<&'_ u32> for isize",
          "methods": [
            {
              "code": "type Output = <isize as Shl<u32>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: &u32) -> <isize as Shl<u32>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Shl<&'_ u32> for &'_ isize",
          "methods": [
            {
              "code": "type Output = <isize as Shl<u32>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: &u32) -> <isize as Shl<u32>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Shl<&'_ u64> for &'_ isize",
          "methods": [
            {
              "code": "type Output = <isize as Shl<u64>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: &u64) -> <isize as Shl<u64>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'_> Shl<&'_ u64> for isize",
          "methods": [
            {
              "code": "type Output = <isize as Shl<u64>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: &u64) -> <isize as Shl<u64>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'_> Shl<&'_ u8> for isize",
          "methods": [
            {
              "code": "type Output = <isize as Shl<u8>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: &u8) -> <isize as Shl<u8>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Shl<&'_ u8> for &'_ isize",
          "methods": [
            {
              "code": "type Output = <isize as Shl<u8>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: &u8) -> <isize as Shl<u8>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'_> Shl<&'_ usize> for isize",
          "methods": [
            {
              "code": "type Output = <isize as Shl<usize>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: &usize) -> <isize as Shl<usize>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Shl<&'_ usize> for &'_ isize",
          "methods": [
            {
              "code": "type Output = <isize as Shl<usize>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: &usize) -> <isize as Shl<usize>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl Shl<i128> for isize",
          "methods": [
            {
              "code": "type Output = isize",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: i128) -> isize",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'a> Shl<i128> for &'a isize",
          "methods": [
            {
              "code": "type Output = <isize as Shl<i128>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: i128) -> <isize as Shl<i128>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl Shl<i16> for isize",
          "methods": [
            {
              "code": "type Output = isize",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: i16) -> isize",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'a> Shl<i16> for &'a isize",
          "methods": [
            {
              "code": "type Output = <isize as Shl<i16>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: i16) -> <isize as Shl<i16>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl Shl<i32> for isize",
          "methods": [
            {
              "code": "type Output = isize",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: i32) -> isize",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'a> Shl<i32> for &'a isize",
          "methods": [
            {
              "code": "type Output = <isize as Shl<i32>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: i32) -> <isize as Shl<i32>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'a> Shl<i64> for &'a isize",
          "methods": [
            {
              "code": "type Output = <isize as Shl<i64>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: i64) -> <isize as Shl<i64>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl Shl<i64> for isize",
          "methods": [
            {
              "code": "type Output = isize",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: i64) -> isize",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl Shl<i8> for isize",
          "methods": [
            {
              "code": "type Output = isize",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: i8) -> isize",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'a> Shl<i8> for &'a isize",
          "methods": [
            {
              "code": "type Output = <isize as Shl<i8>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: i8) -> <isize as Shl<i8>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl Shl<isize> for i128",
          "methods": [
            {
              "code": "type Output = i128",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: isize) -> i128",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl Shl<isize> for usize",
          "methods": [
            {
              "code": "type Output = usize",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: isize) -> usize",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'a> Shl<isize> for &'a u64",
          "methods": [
            {
              "code": "type Output = <u64 as Shl<isize>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: isize) -> <u64 as Shl<isize>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'a> Shl<isize> for &'a u128",
          "methods": [
            {
              "code": "type Output = <u128 as Shl<isize>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: isize) -> <u128 as Shl<isize>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl Shl<isize> for isize",
          "methods": [
            {
              "code": "type Output = isize",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: isize) -> isize",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl Shl<isize> for i64",
          "methods": [
            {
              "code": "type Output = i64",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: isize) -> i64",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl Shl<isize> for i16",
          "methods": [
            {
              "code": "type Output = i16",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: isize) -> i16",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'a> Shl<isize> for &'a u32",
          "methods": [
            {
              "code": "type Output = <u32 as Shl<isize>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: isize) -> <u32 as Shl<isize>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl Shl<isize> for i32",
          "methods": [
            {
              "code": "type Output = i32",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: isize) -> i32",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'a> Shl<isize> for &'a i128",
          "methods": [
            {
              "code": "type Output = <i128 as Shl<isize>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: isize) -> <i128 as Shl<isize>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'a> Shl<isize> for &'a u8",
          "methods": [
            {
              "code": "type Output = <u8 as Shl<isize>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: isize) -> <u8 as Shl<isize>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl Shl<isize> for u128",
          "methods": [
            {
              "code": "type Output = u128",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: isize) -> u128",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'a> Shl<isize> for &'a u16",
          "methods": [
            {
              "code": "type Output = <u16 as Shl<isize>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: isize) -> <u16 as Shl<isize>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl Shl<isize> for i8",
          "methods": [
            {
              "code": "type Output = i8",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: isize) -> i8",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'a> Shl<isize> for &'a usize",
          "methods": [
            {
              "code": "type Output = <usize as Shl<isize>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: isize) -> <usize as Shl<isize>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'a> Shl<isize> for &'a i16",
          "methods": [
            {
              "code": "type Output = <i16 as Shl<isize>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: isize) -> <i16 as Shl<isize>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'a> Shl<isize> for &'a i32",
          "methods": [
            {
              "code": "type Output = <i32 as Shl<isize>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: isize) -> <i32 as Shl<isize>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl Shl<isize> for u8",
          "methods": [
            {
              "code": "type Output = u8",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: isize) -> u8",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl Shl<isize> for u64",
          "methods": [
            {
              "code": "type Output = u64",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: isize) -> u64",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'a> Shl<isize> for &'a isize",
          "methods": [
            {
              "code": "type Output = <isize as Shl<isize>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: isize) -> <isize as Shl<isize>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl Shl<isize> for u32",
          "methods": [
            {
              "code": "type Output = u32",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: isize) -> u32",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl Shl<isize> for u16",
          "methods": [
            {
              "code": "type Output = u16",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: isize) -> u16",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'a> Shl<isize> for &'a i64",
          "methods": [
            {
              "code": "type Output = <i64 as Shl<isize>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: isize) -> <i64 as Shl<isize>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'a> Shl<isize> for &'a i8",
          "methods": [
            {
              "code": "type Output = <i8 as Shl<isize>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: isize) -> <i8 as Shl<isize>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl Shl<u128> for isize",
          "methods": [
            {
              "code": "type Output = isize",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: u128) -> isize",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'a> Shl<u128> for &'a isize",
          "methods": [
            {
              "code": "type Output = <isize as Shl<u128>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: u128) -> <isize as Shl<u128>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'a> Shl<u16> for &'a isize",
          "methods": [
            {
              "code": "type Output = <isize as Shl<u16>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: u16) -> <isize as Shl<u16>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl Shl<u16> for isize",
          "methods": [
            {
              "code": "type Output = isize",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: u16) -> isize",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl Shl<u32> for isize",
          "methods": [
            {
              "code": "type Output = isize",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: u32) -> isize",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'a> Shl<u32> for &'a isize",
          "methods": [
            {
              "code": "type Output = <isize as Shl<u32>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: u32) -> <isize as Shl<u32>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl Shl<u64> for isize",
          "methods": [
            {
              "code": "type Output = isize",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: u64) -> isize",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'a> Shl<u64> for &'a isize",
          "methods": [
            {
              "code": "type Output = <isize as Shl<u64>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: u64) -> <isize as Shl<u64>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl Shl<u8> for isize",
          "methods": [
            {
              "code": "type Output = isize",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: u8) -> isize",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'a> Shl<u8> for &'a isize",
          "methods": [
            {
              "code": "type Output = <isize as Shl<u8>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: u8) -> <isize as Shl<u8>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'a> Shl<usize> for &'a isize",
          "methods": [
            {
              "code": "type Output = <isize as Shl<usize>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: usize) -> <isize as Shl<usize>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl Shl<usize> for isize",
          "methods": [
            {
              "code": "type Output = isize",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: usize) -> isize",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'_> ShlAssign<&'_ i128> for isize",
          "methods": [
            {
              "code": "pub fn shl_assign(&mut self, other: &i128)",
              "text": "Performs the <<= operation."
            }
          ]
        },
        {
          "title": "impl<'_> ShlAssign<&'_ i16> for isize",
          "methods": [
            {
              "code": "pub fn shl_assign(&mut self, other: &i16)",
              "text": "Performs the <<= operation."
            }
          ]
        },
        {
          "title": "impl<'_> ShlAssign<&'_ i32> for isize",
          "methods": [
            {
              "code": "pub fn shl_assign(&mut self, other: &i32)",
              "text": "Performs the <<= operation."
            }
          ]
        },
        {
          "title": "impl<'_> ShlAssign<&'_ i64> for isize",
          "methods": [
            {
              "code": "pub fn shl_assign(&mut self, other: &i64)",
              "text": "Performs the <<= operation."
            }
          ]
        },
        {
          "title": "impl<'_> ShlAssign<&'_ i8> for isize",
          "methods": [
            {
              "code": "pub fn shl_assign(&mut self, other: &i8)",
              "text": "Performs the <<= operation."
            }
          ]
        },
        {
          "title": "impl<'_> ShlAssign<&'_ isize> for i16",
          "methods": [
            {
              "code": "pub fn shl_assign(&mut self, other: &isize)",
              "text": "Performs the <<= operation."
            }
          ]
        },
        {
          "title": "impl<'_> ShlAssign<&'_ isize> for i128",
          "methods": [
            {
              "code": "pub fn shl_assign(&mut self, other: &isize)",
              "text": "Performs the <<= operation."
            }
          ]
        },
        {
          "title": "impl<'_> ShlAssign<&'_ isize> for u128",
          "methods": [
            {
              "code": "pub fn shl_assign(&mut self, other: &isize)",
              "text": "Performs the <<= operation."
            }
          ]
        },
        {
          "title": "impl<'_> ShlAssign<&'_ isize> for u32",
          "methods": [
            {
              "code": "pub fn shl_assign(&mut self, other: &isize)",
              "text": "Performs the <<= operation."
            }
          ]
        },
        {
          "title": "impl<'_> ShlAssign<&'_ isize> for u64",
          "methods": [
            {
              "code": "pub fn shl_assign(&mut self, other: &isize)",
              "text": "Performs the <<= operation."
            }
          ]
        },
        {
          "title": "impl<'_> ShlAssign<&'_ isize> for i64",
          "methods": [
            {
              "code": "pub fn shl_assign(&mut self, other: &isize)",
              "text": "Performs the <<= operation."
            }
          ]
        },
        {
          "title": "impl<'_> ShlAssign<&'_ isize> for u16",
          "methods": [
            {
              "code": "pub fn shl_assign(&mut self, other: &isize)",
              "text": "Performs the <<= operation."
            }
          ]
        },
        {
          "title": "impl<'_> ShlAssign<&'_ isize> for usize",
          "methods": [
            {
              "code": "pub fn shl_assign(&mut self, other: &isize)",
              "text": "Performs the <<= operation."
            }
          ]
        },
        {
          "title": "impl<'_> ShlAssign<&'_ isize> for i8",
          "methods": [
            {
              "code": "pub fn shl_assign(&mut self, other: &isize)",
              "text": "Performs the <<= operation."
            }
          ]
        },
        {
          "title": "impl<'_> ShlAssign<&'_ isize> for isize",
          "methods": [
            {
              "code": "pub fn shl_assign(&mut self, other: &isize)",
              "text": "Performs the <<= operation."
            }
          ]
        },
        {
          "title": "impl<'_> ShlAssign<&'_ isize> for i32",
          "methods": [
            {
              "code": "pub fn shl_assign(&mut self, other: &isize)",
              "text": "Performs the <<= operation."
            }
          ]
        },
        {
          "title": "impl<'_> ShlAssign<&'_ isize> for u8",
          "methods": [
            {
              "code": "pub fn shl_assign(&mut self, other: &isize)",
              "text": "Performs the <<= operation."
            }
          ]
        },
        {
          "title": "impl<'_> ShlAssign<&'_ u128> for isize",
          "methods": [
            {
              "code": "pub fn shl_assign(&mut self, other: &u128)",
              "text": "Performs the <<= operation."
            }
          ]
        },
        {
          "title": "impl<'_> ShlAssign<&'_ u16> for isize",
          "methods": [
            {
              "code": "pub fn shl_assign(&mut self, other: &u16)",
              "text": "Performs the <<= operation."
            }
          ]
        },
        {
          "title": "impl<'_> ShlAssign<&'_ u32> for isize",
          "methods": [
            {
              "code": "pub fn shl_assign(&mut self, other: &u32)",
              "text": "Performs the <<= operation."
            }
          ]
        },
        {
          "title": "impl<'_> ShlAssign<&'_ u64> for isize",
          "methods": [
            {
              "code": "pub fn shl_assign(&mut self, other: &u64)",
              "text": "Performs the <<= operation."
            }
          ]
        },
        {
          "title": "impl<'_> ShlAssign<&'_ u8> for isize",
          "methods": [
            {
              "code": "pub fn shl_assign(&mut self, other: &u8)",
              "text": "Performs the <<= operation."
            }
          ]
        },
        {
          "title": "impl<'_> ShlAssign<&'_ usize> for isize",
          "methods": [
            {
              "code": "pub fn shl_assign(&mut self, other: &usize)",
              "text": "Performs the <<= operation."
            }
          ]
        },
        {
          "title": "impl ShlAssign<i128> for isize",
          "methods": [
            {
              "code": "pub fn shl_assign(&mut self, other: i128)",
              "text": "Performs the <<= operation."
            }
          ]
        },
        {
          "title": "impl ShlAssign<i16> for isize",
          "methods": [
            {
              "code": "pub fn shl_assign(&mut self, other: i16)",
              "text": "Performs the <<= operation."
            }
          ]
        },
        {
          "title": "impl ShlAssign<i32> for isize",
          "methods": [
            {
              "code": "pub fn shl_assign(&mut self, other: i32)",
              "text": "Performs the <<= operation."
            }
          ]
        },
        {
          "title": "impl ShlAssign<i64> for isize",
          "methods": [
            {
              "code": "pub fn shl_assign(&mut self, other: i64)",
              "text": "Performs the <<= operation."
            }
          ]
        },
        {
          "title": "impl ShlAssign<i8> for isize",
          "methods": [
            {
              "code": "pub fn shl_assign(&mut self, other: i8)",
              "text": "Performs the <<= operation."
            }
          ]
        },
        {
          "title": "impl ShlAssign<isize> for u16",
          "methods": [
            {
              "code": "pub fn shl_assign(&mut self, other: isize)",
              "text": "Performs the <<= operation."
            }
          ]
        },
        {
          "title": "impl ShlAssign<isize> for u8",
          "methods": [
            {
              "code": "pub fn shl_assign(&mut self, other: isize)",
              "text": "Performs the <<= operation."
            }
          ]
        },
        {
          "title": "impl ShlAssign<isize> for i64",
          "methods": [
            {
              "code": "pub fn shl_assign(&mut self, other: isize)",
              "text": "Performs the <<= operation."
            }
          ]
        },
        {
          "title": "impl ShlAssign<isize> for u128",
          "methods": [
            {
              "code": "pub fn shl_assign(&mut self, other: isize)",
              "text": "Performs the <<= operation."
            }
          ]
        },
        {
          "title": "impl ShlAssign<isize> for u32",
          "methods": [
            {
              "code": "pub fn shl_assign(&mut self, other: isize)",
              "text": "Performs the <<= operation."
            }
          ]
        },
        {
          "title": "impl ShlAssign<isize> for u64",
          "methods": [
            {
              "code": "pub fn shl_assign(&mut self, other: isize)",
              "text": "Performs the <<= operation."
            }
          ]
        },
        {
          "title": "impl ShlAssign<isize> for i32",
          "methods": [
            {
              "code": "pub fn shl_assign(&mut self, other: isize)",
              "text": "Performs the <<= operation."
            }
          ]
        },
        {
          "title": "impl ShlAssign<isize> for usize",
          "methods": [
            {
              "code": "pub fn shl_assign(&mut self, other: isize)",
              "text": "Performs the <<= operation."
            }
          ]
        },
        {
          "title": "impl ShlAssign<isize> for i8",
          "methods": [
            {
              "code": "pub fn shl_assign(&mut self, other: isize)",
              "text": "Performs the <<= operation."
            }
          ]
        },
        {
          "title": "impl ShlAssign<isize> for i16",
          "methods": [
            {
              "code": "pub fn shl_assign(&mut self, other: isize)",
              "text": "Performs the <<= operation."
            }
          ]
        },
        {
          "title": "impl ShlAssign<isize> for isize",
          "methods": [
            {
              "code": "pub fn shl_assign(&mut self, other: isize)",
              "text": "Performs the <<= operation."
            }
          ]
        },
        {
          "title": "impl ShlAssign<isize> for i128",
          "methods": [
            {
              "code": "pub fn shl_assign(&mut self, other: isize)",
              "text": "Performs the <<= operation."
            }
          ]
        },
        {
          "title": "impl ShlAssign<u128> for isize",
          "methods": [
            {
              "code": "pub fn shl_assign(&mut self, other: u128)",
              "text": "Performs the <<= operation."
            }
          ]
        },
        {
          "title": "impl ShlAssign<u16> for isize",
          "methods": [
            {
              "code": "pub fn shl_assign(&mut self, other: u16)",
              "text": "Performs the <<= operation."
            }
          ]
        },
        {
          "title": "impl ShlAssign<u32> for isize",
          "methods": [
            {
              "code": "pub fn shl_assign(&mut self, other: u32)",
              "text": "Performs the <<= operation."
            }
          ]
        },
        {
          "title": "impl ShlAssign<u64> for isize",
          "methods": [
            {
              "code": "pub fn shl_assign(&mut self, other: u64)",
              "text": "Performs the <<= operation."
            }
          ]
        },
        {
          "title": "impl ShlAssign<u8> for isize",
          "methods": [
            {
              "code": "pub fn shl_assign(&mut self, other: u8)",
              "text": "Performs the <<= operation."
            }
          ]
        },
        {
          "title": "impl ShlAssign<usize> for isize",
          "methods": [
            {
              "code": "pub fn shl_assign(&mut self, other: usize)",
              "text": "Performs the <<= operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Shr<&'_ i128> for &'_ isize",
          "methods": [
            {
              "code": "type Output = <isize as Shr<i128>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: &i128) -> <isize as Shr<i128>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'_> Shr<&'_ i128> for isize",
          "methods": [
            {
              "code": "type Output = <isize as Shr<i128>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: &i128) -> <isize as Shr<i128>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Shr<&'_ i16> for &'_ isize",
          "methods": [
            {
              "code": "type Output = <isize as Shr<i16>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: &i16) -> <isize as Shr<i16>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'_> Shr<&'_ i16> for isize",
          "methods": [
            {
              "code": "type Output = <isize as Shr<i16>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: &i16) -> <isize as Shr<i16>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'_> Shr<&'_ i32> for isize",
          "methods": [
            {
              "code": "type Output = <isize as Shr<i32>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: &i32) -> <isize as Shr<i32>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Shr<&'_ i32> for &'_ isize",
          "methods": [
            {
              "code": "type Output = <isize as Shr<i32>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: &i32) -> <isize as Shr<i32>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'_> Shr<&'_ i64> for isize",
          "methods": [
            {
              "code": "type Output = <isize as Shr<i64>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: &i64) -> <isize as Shr<i64>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Shr<&'_ i64> for &'_ isize",
          "methods": [
            {
              "code": "type Output = <isize as Shr<i64>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: &i64) -> <isize as Shr<i64>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Shr<&'_ i8> for &'_ isize",
          "methods": [
            {
              "code": "type Output = <isize as Shr<i8>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: &i8) -> <isize as Shr<i8>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'_> Shr<&'_ i8> for isize",
          "methods": [
            {
              "code": "type Output = <isize as Shr<i8>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: &i8) -> <isize as Shr<i8>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'_> Shr<&'_ isize> for isize",
          "methods": [
            {
              "code": "type Output = <isize as Shr<isize>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: &isize) -> <isize as Shr<isize>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'_> Shr<&'_ isize> for usize",
          "methods": [
            {
              "code": "type Output = <usize as Shr<isize>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: &isize) -> <usize as Shr<isize>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'_> Shr<&'_ isize> for i8",
          "methods": [
            {
              "code": "type Output = <i8 as Shr<isize>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: &isize) -> <i8 as Shr<isize>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Shr<&'_ isize> for &'_ i128",
          "methods": [
            {
              "code": "type Output = <i128 as Shr<isize>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: &isize) -> <i128 as Shr<isize>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Shr<&'_ isize> for &'_ u32",
          "methods": [
            {
              "code": "type Output = <u32 as Shr<isize>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: &isize) -> <u32 as Shr<isize>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'_> Shr<&'_ isize> for u8",
          "methods": [
            {
              "code": "type Output = <u8 as Shr<isize>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: &isize) -> <u8 as Shr<isize>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Shr<&'_ isize> for &'_ u64",
          "methods": [
            {
              "code": "type Output = <u64 as Shr<isize>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: &isize) -> <u64 as Shr<isize>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'_> Shr<&'_ isize> for i64",
          "methods": [
            {
              "code": "type Output = <i64 as Shr<isize>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: &isize) -> <i64 as Shr<isize>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Shr<&'_ isize> for &'_ usize",
          "methods": [
            {
              "code": "type Output = <usize as Shr<isize>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: &isize) -> <usize as Shr<isize>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Shr<&'_ isize> for &'_ i32",
          "methods": [
            {
              "code": "type Output = <i32 as Shr<isize>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: &isize) -> <i32 as Shr<isize>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Shr<&'_ isize> for &'_ u8",
          "methods": [
            {
              "code": "type Output = <u8 as Shr<isize>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: &isize) -> <u8 as Shr<isize>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Shr<&'_ isize> for &'_ isize",
          "methods": [
            {
              "code": "type Output = <isize as Shr<isize>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: &isize) -> <isize as Shr<isize>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Shr<&'_ isize> for &'_ i64",
          "methods": [
            {
              "code": "type Output = <i64 as Shr<isize>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: &isize) -> <i64 as Shr<isize>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'_> Shr<&'_ isize> for u128",
          "methods": [
            {
              "code": "type Output = <u128 as Shr<isize>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: &isize) -> <u128 as Shr<isize>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'_> Shr<&'_ isize> for u64",
          "methods": [
            {
              "code": "type Output = <u64 as Shr<isize>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: &isize) -> <u64 as Shr<isize>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'_> Shr<&'_ isize> for i32",
          "methods": [
            {
              "code": "type Output = <i32 as Shr<isize>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: &isize) -> <i32 as Shr<isize>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'_> Shr<&'_ isize> for u16",
          "methods": [
            {
              "code": "type Output = <u16 as Shr<isize>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: &isize) -> <u16 as Shr<isize>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Shr<&'_ isize> for &'_ i16",
          "methods": [
            {
              "code": "type Output = <i16 as Shr<isize>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: &isize) -> <i16 as Shr<isize>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Shr<&'_ isize> for &'_ u16",
          "methods": [
            {
              "code": "type Output = <u16 as Shr<isize>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: &isize) -> <u16 as Shr<isize>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'_> Shr<&'_ isize> for i16",
          "methods": [
            {
              "code": "type Output = <i16 as Shr<isize>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: &isize) -> <i16 as Shr<isize>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'_> Shr<&'_ isize> for u32",
          "methods": [
            {
              "code": "type Output = <u32 as Shr<isize>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: &isize) -> <u32 as Shr<isize>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'_> Shr<&'_ isize> for i128",
          "methods": [
            {
              "code": "type Output = <i128 as Shr<isize>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: &isize) -> <i128 as Shr<isize>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Shr<&'_ isize> for &'_ i8",
          "methods": [
            {
              "code": "type Output = <i8 as Shr<isize>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: &isize) -> <i8 as Shr<isize>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Shr<&'_ isize> for &'_ u128",
          "methods": [
            {
              "code": "type Output = <u128 as Shr<isize>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: &isize) -> <u128 as Shr<isize>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'_> Shr<&'_ u128> for isize",
          "methods": [
            {
              "code": "type Output = <isize as Shr<u128>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: &u128) -> <isize as Shr<u128>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Shr<&'_ u128> for &'_ isize",
          "methods": [
            {
              "code": "type Output = <isize as Shr<u128>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: &u128) -> <isize as Shr<u128>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'_> Shr<&'_ u16> for isize",
          "methods": [
            {
              "code": "type Output = <isize as Shr<u16>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: &u16) -> <isize as Shr<u16>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Shr<&'_ u16> for &'_ isize",
          "methods": [
            {
              "code": "type Output = <isize as Shr<u16>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: &u16) -> <isize as Shr<u16>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'_> Shr<&'_ u32> for isize",
          "methods": [
            {
              "code": "type Output = <isize as Shr<u32>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: &u32) -> <isize as Shr<u32>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Shr<&'_ u32> for &'_ isize",
          "methods": [
            {
              "code": "type Output = <isize as Shr<u32>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: &u32) -> <isize as Shr<u32>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'_> Shr<&'_ u64> for isize",
          "methods": [
            {
              "code": "type Output = <isize as Shr<u64>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: &u64) -> <isize as Shr<u64>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Shr<&'_ u64> for &'_ isize",
          "methods": [
            {
              "code": "type Output = <isize as Shr<u64>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: &u64) -> <isize as Shr<u64>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Shr<&'_ u8> for &'_ isize",
          "methods": [
            {
              "code": "type Output = <isize as Shr<u8>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: &u8) -> <isize as Shr<u8>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'_> Shr<&'_ u8> for isize",
          "methods": [
            {
              "code": "type Output = <isize as Shr<u8>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: &u8) -> <isize as Shr<u8>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Shr<&'_ usize> for &'_ isize",
          "methods": [
            {
              "code": "type Output = <isize as Shr<usize>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: &usize) -> <isize as Shr<usize>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'_> Shr<&'_ usize> for isize",
          "methods": [
            {
              "code": "type Output = <isize as Shr<usize>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: &usize) -> <isize as Shr<usize>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl Shr<i128> for isize",
          "methods": [
            {
              "code": "type Output = isize",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: i128) -> isize",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'a> Shr<i128> for &'a isize",
          "methods": [
            {
              "code": "type Output = <isize as Shr<i128>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: i128) -> <isize as Shr<i128>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'a> Shr<i16> for &'a isize",
          "methods": [
            {
              "code": "type Output = <isize as Shr<i16>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: i16) -> <isize as Shr<i16>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl Shr<i16> for isize",
          "methods": [
            {
              "code": "type Output = isize",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: i16) -> isize",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl Shr<i32> for isize",
          "methods": [
            {
              "code": "type Output = isize",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: i32) -> isize",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'a> Shr<i32> for &'a isize",
          "methods": [
            {
              "code": "type Output = <isize as Shr<i32>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: i32) -> <isize as Shr<i32>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'a> Shr<i64> for &'a isize",
          "methods": [
            {
              "code": "type Output = <isize as Shr<i64>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: i64) -> <isize as Shr<i64>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl Shr<i64> for isize",
          "methods": [
            {
              "code": "type Output = isize",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: i64) -> isize",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'a> Shr<i8> for &'a isize",
          "methods": [
            {
              "code": "type Output = <isize as Shr<i8>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: i8) -> <isize as Shr<i8>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl Shr<i8> for isize",
          "methods": [
            {
              "code": "type Output = isize",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: i8) -> isize",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'a> Shr<isize> for &'a usize",
          "methods": [
            {
              "code": "type Output = <usize as Shr<isize>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: isize) -> <usize as Shr<isize>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl Shr<isize> for u32",
          "methods": [
            {
              "code": "type Output = u32",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: isize) -> u32",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'a> Shr<isize> for &'a u64",
          "methods": [
            {
              "code": "type Output = <u64 as Shr<isize>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: isize) -> <u64 as Shr<isize>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'a> Shr<isize> for &'a u8",
          "methods": [
            {
              "code": "type Output = <u8 as Shr<isize>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: isize) -> <u8 as Shr<isize>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'a> Shr<isize> for &'a u128",
          "methods": [
            {
              "code": "type Output = <u128 as Shr<isize>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: isize) -> <u128 as Shr<isize>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'a> Shr<isize> for &'a u16",
          "methods": [
            {
              "code": "type Output = <u16 as Shr<isize>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: isize) -> <u16 as Shr<isize>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'a> Shr<isize> for &'a i8",
          "methods": [
            {
              "code": "type Output = <i8 as Shr<isize>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: isize) -> <i8 as Shr<isize>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl Shr<isize> for u8",
          "methods": [
            {
              "code": "type Output = u8",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: isize) -> u8",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'a> Shr<isize> for &'a i16",
          "methods": [
            {
              "code": "type Output = <i16 as Shr<isize>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: isize) -> <i16 as Shr<isize>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl Shr<isize> for u64",
          "methods": [
            {
              "code": "type Output = u64",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: isize) -> u64",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl Shr<isize> for i32",
          "methods": [
            {
              "code": "type Output = i32",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: isize) -> i32",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'a> Shr<isize> for &'a i64",
          "methods": [
            {
              "code": "type Output = <i64 as Shr<isize>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: isize) -> <i64 as Shr<isize>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl Shr<isize> for isize",
          "methods": [
            {
              "code": "type Output = isize",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: isize) -> isize",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl Shr<isize> for u128",
          "methods": [
            {
              "code": "type Output = u128",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: isize) -> u128",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'a> Shr<isize> for &'a isize",
          "methods": [
            {
              "code": "type Output = <isize as Shr<isize>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: isize) -> <isize as Shr<isize>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'a> Shr<isize> for &'a i128",
          "methods": [
            {
              "code": "type Output = <i128 as Shr<isize>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: isize) -> <i128 as Shr<isize>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl Shr<isize> for i64",
          "methods": [
            {
              "code": "type Output = i64",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: isize) -> i64",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'a> Shr<isize> for &'a u32",
          "methods": [
            {
              "code": "type Output = <u32 as Shr<isize>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: isize) -> <u32 as Shr<isize>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl Shr<isize> for i16",
          "methods": [
            {
              "code": "type Output = i16",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: isize) -> i16",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'a> Shr<isize> for &'a i32",
          "methods": [
            {
              "code": "type Output = <i32 as Shr<isize>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: isize) -> <i32 as Shr<isize>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl Shr<isize> for u16",
          "methods": [
            {
              "code": "type Output = u16",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: isize) -> u16",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl Shr<isize> for i128",
          "methods": [
            {
              "code": "type Output = i128",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: isize) -> i128",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl Shr<isize> for i8",
          "methods": [
            {
              "code": "type Output = i8",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: isize) -> i8",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl Shr<isize> for usize",
          "methods": [
            {
              "code": "type Output = usize",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: isize) -> usize",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl Shr<u128> for isize",
          "methods": [
            {
              "code": "type Output = isize",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: u128) -> isize",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'a> Shr<u128> for &'a isize",
          "methods": [
            {
              "code": "type Output = <isize as Shr<u128>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: u128) -> <isize as Shr<u128>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'a> Shr<u16> for &'a isize",
          "methods": [
            {
              "code": "type Output = <isize as Shr<u16>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: u16) -> <isize as Shr<u16>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl Shr<u16> for isize",
          "methods": [
            {
              "code": "type Output = isize",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: u16) -> isize",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl Shr<u32> for isize",
          "methods": [
            {
              "code": "type Output = isize",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: u32) -> isize",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'a> Shr<u32> for &'a isize",
          "methods": [
            {
              "code": "type Output = <isize as Shr<u32>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: u32) -> <isize as Shr<u32>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'a> Shr<u64> for &'a isize",
          "methods": [
            {
              "code": "type Output = <isize as Shr<u64>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: u64) -> <isize as Shr<u64>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl Shr<u64> for isize",
          "methods": [
            {
              "code": "type Output = isize",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: u64) -> isize",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'a> Shr<u8> for &'a isize",
          "methods": [
            {
              "code": "type Output = <isize as Shr<u8>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: u8) -> <isize as Shr<u8>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl Shr<u8> for isize",
          "methods": [
            {
              "code": "type Output = isize",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: u8) -> isize",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl Shr<usize> for isize",
          "methods": [
            {
              "code": "type Output = isize",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: usize) -> isize",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'a> Shr<usize> for &'a isize",
          "methods": [
            {
              "code": "type Output = <isize as Shr<usize>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: usize) -> <isize as Shr<usize>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'_> ShrAssign<&'_ i128> for isize",
          "methods": [
            {
              "code": "pub fn shr_assign(&mut self, other: &i128)",
              "text": "Performs the >>= operation."
            }
          ]
        },
        {
          "title": "impl<'_> ShrAssign<&'_ i16> for isize",
          "methods": [
            {
              "code": "pub fn shr_assign(&mut self, other: &i16)",
              "text": "Performs the >>= operation."
            }
          ]
        },
        {
          "title": "impl<'_> ShrAssign<&'_ i32> for isize",
          "methods": [
            {
              "code": "pub fn shr_assign(&mut self, other: &i32)",
              "text": "Performs the >>= operation."
            }
          ]
        },
        {
          "title": "impl<'_> ShrAssign<&'_ i64> for isize",
          "methods": [
            {
              "code": "pub fn shr_assign(&mut self, other: &i64)",
              "text": "Performs the >>= operation."
            }
          ]
        },
        {
          "title": "impl<'_> ShrAssign<&'_ i8> for isize",
          "methods": [
            {
              "code": "pub fn shr_assign(&mut self, other: &i8)",
              "text": "Performs the >>= operation."
            }
          ]
        },
        {
          "title": "impl<'_> ShrAssign<&'_ isize> for i32",
          "methods": [
            {
              "code": "pub fn shr_assign(&mut self, other: &isize)",
              "text": "Performs the >>= operation."
            }
          ]
        },
        {
          "title": "impl<'_> ShrAssign<&'_ isize> for u16",
          "methods": [
            {
              "code": "pub fn shr_assign(&mut self, other: &isize)",
              "text": "Performs the >>= operation."
            }
          ]
        },
        {
          "title": "impl<'_> ShrAssign<&'_ isize> for i8",
          "methods": [
            {
              "code": "pub fn shr_assign(&mut self, other: &isize)",
              "text": "Performs the >>= operation."
            }
          ]
        },
        {
          "title": "impl<'_> ShrAssign<&'_ isize> for u32",
          "methods": [
            {
              "code": "pub fn shr_assign(&mut self, other: &isize)",
              "text": "Performs the >>= operation."
            }
          ]
        },
        {
          "title": "impl<'_> ShrAssign<&'_ isize> for isize",
          "methods": [
            {
              "code": "pub fn shr_assign(&mut self, other: &isize)",
              "text": "Performs the >>= operation."
            }
          ]
        },
        {
          "title": "impl<'_> ShrAssign<&'_ isize> for u128",
          "methods": [
            {
              "code": "pub fn shr_assign(&mut self, other: &isize)",
              "text": "Performs the >>= operation."
            }
          ]
        },
        {
          "title": "impl<'_> ShrAssign<&'_ isize> for usize",
          "methods": [
            {
              "code": "pub fn shr_assign(&mut self, other: &isize)",
              "text": "Performs the >>= operation."
            }
          ]
        },
        {
          "title": "impl<'_> ShrAssign<&'_ isize> for i16",
          "methods": [
            {
              "code": "pub fn shr_assign(&mut self, other: &isize)",
              "text": "Performs the >>= operation."
            }
          ]
        },
        {
          "title": "impl<'_> ShrAssign<&'_ isize> for i64",
          "methods": [
            {
              "code": "pub fn shr_assign(&mut self, other: &isize)",
              "text": "Performs the >>= operation."
            }
          ]
        },
        {
          "title": "impl<'_> ShrAssign<&'_ isize> for i128",
          "methods": [
            {
              "code": "pub fn shr_assign(&mut self, other: &isize)",
              "text": "Performs the >>= operation."
            }
          ]
        },
        {
          "title": "impl<'_> ShrAssign<&'_ isize> for u8",
          "methods": [
            {
              "code": "pub fn shr_assign(&mut self, other: &isize)",
              "text": "Performs the >>= operation."
            }
          ]
        },
        {
          "title": "impl<'_> ShrAssign<&'_ isize> for u64",
          "methods": [
            {
              "code": "pub fn shr_assign(&mut self, other: &isize)",
              "text": "Performs the >>= operation."
            }
          ]
        },
        {
          "title": "impl<'_> ShrAssign<&'_ u128> for isize",
          "methods": [
            {
              "code": "pub fn shr_assign(&mut self, other: &u128)",
              "text": "Performs the >>= operation."
            }
          ]
        },
        {
          "title": "impl<'_> ShrAssign<&'_ u16> for isize",
          "methods": [
            {
              "code": "pub fn shr_assign(&mut self, other: &u16)",
              "text": "Performs the >>= operation."
            }
          ]
        },
        {
          "title": "impl<'_> ShrAssign<&'_ u32> for isize",
          "methods": [
            {
              "code": "pub fn shr_assign(&mut self, other: &u32)",
              "text": "Performs the >>= operation."
            }
          ]
        },
        {
          "title": "impl<'_> ShrAssign<&'_ u64> for isize",
          "methods": [
            {
              "code": "pub fn shr_assign(&mut self, other: &u64)",
              "text": "Performs the >>= operation."
            }
          ]
        },
        {
          "title": "impl<'_> ShrAssign<&'_ u8> for isize",
          "methods": [
            {
              "code": "pub fn shr_assign(&mut self, other: &u8)",
              "text": "Performs the >>= operation."
            }
          ]
        },
        {
          "title": "impl<'_> ShrAssign<&'_ usize> for isize",
          "methods": [
            {
              "code": "pub fn shr_assign(&mut self, other: &usize)",
              "text": "Performs the >>= operation."
            }
          ]
        },
        {
          "title": "impl ShrAssign<i128> for isize",
          "methods": [
            {
              "code": "pub fn shr_assign(&mut self, other: i128)",
              "text": "Performs the >>= operation."
            }
          ]
        },
        {
          "title": "impl ShrAssign<i16> for isize",
          "methods": [
            {
              "code": "pub fn shr_assign(&mut self, other: i16)",
              "text": "Performs the >>= operation."
            }
          ]
        },
        {
          "title": "impl ShrAssign<i32> for isize",
          "methods": [
            {
              "code": "pub fn shr_assign(&mut self, other: i32)",
              "text": "Performs the >>= operation."
            }
          ]
        },
        {
          "title": "impl ShrAssign<i64> for isize",
          "methods": [
            {
              "code": "pub fn shr_assign(&mut self, other: i64)",
              "text": "Performs the >>= operation."
            }
          ]
        },
        {
          "title": "impl ShrAssign<i8> for isize",
          "methods": [
            {
              "code": "pub fn shr_assign(&mut self, other: i8)",
              "text": "Performs the >>= operation."
            }
          ]
        },
        {
          "title": "impl ShrAssign<isize> for i64",
          "methods": [
            {
              "code": "pub fn shr_assign(&mut self, other: isize)",
              "text": "Performs the >>= operation."
            }
          ]
        },
        {
          "title": "impl ShrAssign<isize> for u64",
          "methods": [
            {
              "code": "pub fn shr_assign(&mut self, other: isize)",
              "text": "Performs the >>= operation."
            }
          ]
        },
        {
          "title": "impl ShrAssign<isize> for u16",
          "methods": [
            {
              "code": "pub fn shr_assign(&mut self, other: isize)",
              "text": "Performs the >>= operation."
            }
          ]
        },
        {
          "title": "impl ShrAssign<isize> for u128",
          "methods": [
            {
              "code": "pub fn shr_assign(&mut self, other: isize)",
              "text": "Performs the >>= operation."
            }
          ]
        },
        {
          "title": "impl ShrAssign<isize> for u32",
          "methods": [
            {
              "code": "pub fn shr_assign(&mut self, other: isize)",
              "text": "Performs the >>= operation."
            }
          ]
        },
        {
          "title": "impl ShrAssign<isize> for usize",
          "methods": [
            {
              "code": "pub fn shr_assign(&mut self, other: isize)",
              "text": "Performs the >>= operation."
            }
          ]
        },
        {
          "title": "impl ShrAssign<isize> for i16",
          "methods": [
            {
              "code": "pub fn shr_assign(&mut self, other: isize)",
              "text": "Performs the >>= operation."
            }
          ]
        },
        {
          "title": "impl ShrAssign<isize> for u8",
          "methods": [
            {
              "code": "pub fn shr_assign(&mut self, other: isize)",
              "text": "Performs the >>= operation."
            }
          ]
        },
        {
          "title": "impl ShrAssign<isize> for isize",
          "methods": [
            {
              "code": "pub fn shr_assign(&mut self, other: isize)",
              "text": "Performs the >>= operation."
            }
          ]
        },
        {
          "title": "impl ShrAssign<isize> for i8",
          "methods": [
            {
              "code": "pub fn shr_assign(&mut self, other: isize)",
              "text": "Performs the >>= operation."
            }
          ]
        },
        {
          "title": "impl ShrAssign<isize> for i32",
          "methods": [
            {
              "code": "pub fn shr_assign(&mut self, other: isize)",
              "text": "Performs the >>= operation."
            }
          ]
        },
        {
          "title": "impl ShrAssign<isize> for i128",
          "methods": [
            {
              "code": "pub fn shr_assign(&mut self, other: isize)",
              "text": "Performs the >>= operation."
            }
          ]
        },
        {
          "title": "impl ShrAssign<u128> for isize",
          "methods": [
            {
              "code": "pub fn shr_assign(&mut self, other: u128)",
              "text": "Performs the >>= operation."
            }
          ]
        },
        {
          "title": "impl ShrAssign<u16> for isize",
          "methods": [
            {
              "code": "pub fn shr_assign(&mut self, other: u16)",
              "text": "Performs the >>= operation."
            }
          ]
        },
        {
          "title": "impl ShrAssign<u32> for isize",
          "methods": [
            {
              "code": "pub fn shr_assign(&mut self, other: u32)",
              "text": "Performs the >>= operation."
            }
          ]
        },
        {
          "title": "impl ShrAssign<u64> for isize",
          "methods": [
            {
              "code": "pub fn shr_assign(&mut self, other: u64)",
              "text": "Performs the >>= operation."
            }
          ]
        },
        {
          "title": "impl ShrAssign<u8> for isize",
          "methods": [
            {
              "code": "pub fn shr_assign(&mut self, other: u8)",
              "text": "Performs the >>= operation."
            }
          ]
        },
        {
          "title": "impl ShrAssign<usize> for isize",
          "methods": [
            {
              "code": "pub fn shr_assign(&mut self, other: usize)",
              "text": "Performs the >>= operation."
            }
          ]
        },
        {
          "title": "impl SimdElement for isize",
          "methods": [
            {
              "code": "type Mask = isize",
              "text": "The mask element type corresponding to this element type."
            }
          ]
        },
        {
          "title": "impl Step for isize",
          "methods": [
            {
              "code": "pub unsafe fn forward_unchecked(start: isize, n: usize) -> isize",
              "text": "Returns the value that would be obtained by taking the successor of self count times."
            },
            {
              "code": "pub unsafe fn backward_unchecked(start: isize, n: usize) -> isize",
              "text": "Returns the value that would be obtained by taking the predecessor of self count times."
            },
            {
              "code": "pub fn forward(start: isize, n: usize) -> isize",
              "text": "Returns the value that would be obtained by taking the successor of self count times."
            },
            {
              "code": "pub fn backward(start: isize, n: usize) -> isize",
              "text": "Returns the value that would be obtained by taking the predecessor of self count times."
            },
            {
              "code": "pub fn steps_between(start: &isize, end: &isize) -> Option<usize>",
              "text": "Returns the number of successor steps required to get from start to end."
            },
            {
              "code": "pub fn forward_checked(start: isize, n: usize) -> Option<isize>",
              "text": "Returns the value that would be obtained by taking the successor of self count times."
            },
            {
              "code": "pub fn backward_checked(start: isize, n: usize) -> Option<isize>",
              "text": "Returns the value that would be obtained by taking the predecessor of self count times."
            }
          ]
        },
        {
          "title": "impl<'_> Sub<&'_ isize> for isize",
          "methods": [
            {
              "code": "type Output = <isize as Sub<isize>>::Output",
              "text": "The resulting type after applying the - operator."
            },
            {
              "code": "pub fn sub(self, other: &isize) -> <isize as Sub<isize>>::Output",
              "text": "Performs the - operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Sub<&'_ isize> for &'_ isize",
          "methods": [
            {
              "code": "type Output = <isize as Sub<isize>>::Output",
              "text": "The resulting type after applying the - operator."
            },
            {
              "code": "pub fn sub(self, other: &isize) -> <isize as Sub<isize>>::Output",
              "text": "Performs the - operation."
            }
          ]
        },
        {
          "title": "impl Sub<isize> for isize",
          "methods": [
            {
              "code": "type Output = isize",
              "text": "The resulting type after applying the - operator."
            },
            {
              "code": "pub fn sub(self, other: isize) -> isize",
              "text": "Performs the - operation."
            }
          ]
        },
        {
          "title": "impl<'a> Sub<isize> for &'a isize",
          "methods": [
            {
              "code": "type Output = <isize as Sub<isize>>::Output",
              "text": "The resulting type after applying the - operator."
            },
            {
              "code": "pub fn sub(self, other: isize) -> <isize as Sub<isize>>::Output",
              "text": "Performs the - operation."
            }
          ]
        },
        {
          "title": "impl<'_> SubAssign<&'_ isize> for isize",
          "methods": [
            {
              "code": "pub fn sub_assign(&mut self, other: &isize)",
              "text": "Performs the -= operation."
            }
          ]
        },
        {
          "title": "impl SubAssign<isize> for isize",
          "methods": [
            {
              "code": "pub fn sub_assign(&mut self, other: isize)",
              "text": "Performs the -= operation."
            }
          ]
        },
        {
          "title": "impl<'a> Sum<&'a isize> for isize",
          "methods": [
            {
              "code": "pub fn sum<I>(iter: I) -> isize where I: Iterator<Item = &'a isize>,",
              "text": "Method which takes an iterator and generates Self from the elements by “summing up” the items."
            }
          ]
        },
        {
          "title": "impl Sum<isize> for isize",
          "methods": [
            {
              "code": "pub fn sum<I>(iter: I) -> isize where I: Iterator<Item = isize>,",
              "text": "Method which takes an iterator and generates Self from the elements by “summing up” the items."
            }
          ]
        },
        {
          "title": "impl TryFrom<i128> for isize",
          "methods": [
            {
              "code": "pub fn try_from(u: i128) -> Result<isize, <isize as TryFrom<i128>>::Error>",
              "text": "Try to create the target number type from a source number type. This returns an error if the source value is outside of the range of the target type."
            },
            {
              "code": "type Error = TryFromIntError",
              "text": "The type returned in the event of a conversion error."
            }
          ]
        },
        {
          "title": "impl TryFrom<i32> for isize",
          "methods": [
            {
              "code": "pub fn try_from(value: i32) -> Result<isize, <isize as TryFrom<i32>>::Error>",
              "text": "Try to create the target number type from a source number type. This returns an error if the source value is outside of the range of the target type."
            },
            {
              "code": "type Error = TryFromIntError",
              "text": "The type returned in the event of a conversion error."
            }
          ]
        },
        {
          "title": "impl TryFrom<i64> for isize",
          "methods": [
            {
              "code": "pub fn try_from(value: i64) -> Result<isize, <isize as TryFrom<i64>>::Error>",
              "text": "Try to create the target number type from a source number type. This returns an error if the source value is outside of the range of the target type."
            },
            {
              "code": "type Error = TryFromIntError",
              "text": "The type returned in the event of a conversion error."
            }
          ]
        },
        {
          "title": "impl TryFrom<isize> for i16",
          "methods": [
            {
              "code": "pub fn try_from(u: isize) -> Result<i16, <i16 as TryFrom<isize>>::Error>",
              "text": "Try to create the target number type from a source number type. This returns an error if the source value is outside of the range of the target type."
            },
            {
              "code": "type Error = TryFromIntError",
              "text": "The type returned in the event of a conversion error."
            }
          ]
        },
        {
          "title": "impl TryFrom<isize> for u64",
          "methods": [
            {
              "code": "pub fn try_from(u: isize) -> Result<u64, <u64 as TryFrom<isize>>::Error>",
              "text": "Try to create the target number type from a source number type. This returns an error if the source value is outside of the range of the target type."
            },
            {
              "code": "type Error = TryFromIntError",
              "text": "The type returned in the event of a conversion error."
            }
          ]
        },
        {
          "title": "impl TryFrom<isize> for i128",
          "methods": [
            {
              "code": "pub fn try_from(value: isize) -> Result<i128, <i128 as TryFrom<isize>>::Error>",
              "text": "Try to create the target number type from a source number type. This returns an error if the source value is outside of the range of the target type."
            },
            {
              "code": "type Error = TryFromIntError",
              "text": "The type returned in the event of a conversion error."
            }
          ]
        },
        {
          "title": "impl TryFrom<isize> for NonZeroIsize",
          "methods": [
            {
              "code": "pub fn try_from( value: isize) -> Result<NonZeroIsize, <NonZeroIsize as TryFrom<isize>>::Error>",
              "text": "Attempts to convert isize to NonZeroIsize."
            },
            {
              "code": "type Error = TryFromIntError",
              "text": "The type returned in the event of a conversion error."
            }
          ]
        },
        {
          "title": "impl TryFrom<isize> for u16",
          "methods": [
            {
              "code": "pub fn try_from(u: isize) -> Result<u16, <u16 as TryFrom<isize>>::Error>",
              "text": "Try to create the target number type from a source number type. This returns an error if the source value is outside of the range of the target type."
            },
            {
              "code": "type Error = TryFromIntError",
              "text": "The type returned in the event of a conversion error."
            }
          ]
        },
        {
          "title": "impl TryFrom<isize> for u128",
          "methods": [
            {
              "code": "pub fn try_from(u: isize) -> Result<u128, <u128 as TryFrom<isize>>::Error>",
              "text": "Try to create the target number type from a source number type. This returns an error if the source value is outside of the range of the target type."
            },
            {
              "code": "type Error = TryFromIntError",
              "text": "The type returned in the event of a conversion error."
            }
          ]
        },
        {
          "title": "impl TryFrom<isize> for i32",
          "methods": [
            {
              "code": "pub fn try_from(u: isize) -> Result<i32, <i32 as TryFrom<isize>>::Error>",
              "text": "Try to create the target number type from a source number type. This returns an error if the source value is outside of the range of the target type."
            },
            {
              "code": "type Error = TryFromIntError",
              "text": "The type returned in the event of a conversion error."
            }
          ]
        },
        {
          "title": "impl TryFrom<isize> for i64",
          "methods": [
            {
              "code": "pub fn try_from(value: isize) -> Result<i64, <i64 as TryFrom<isize>>::Error>",
              "text": "Try to create the target number type from a source number type. This returns an error if the source value is outside of the range of the target type."
            },
            {
              "code": "type Error = TryFromIntError",
              "text": "The type returned in the event of a conversion error."
            }
          ]
        },
        {
          "title": "impl TryFrom<isize> for i8",
          "methods": [
            {
              "code": "pub fn try_from(u: isize) -> Result<i8, <i8 as TryFrom<isize>>::Error>",
              "text": "Try to create the target number type from a source number type. This returns an error if the source value is outside of the range of the target type."
            },
            {
              "code": "type Error = TryFromIntError",
              "text": "The type returned in the event of a conversion error."
            }
          ]
        },
        {
          "title": "impl TryFrom<isize> for usize",
          "methods": [
            {
              "code": "pub fn try_from(u: isize) -> Result<usize, <usize as TryFrom<isize>>::Error>",
              "text": "Try to create the target number type from a source number type. This returns an error if the source value is outside of the range of the target type."
            },
            {
              "code": "type Error = TryFromIntError",
              "text": "The type returned in the event of a conversion error."
            }
          ]
        },
        {
          "title": "impl TryFrom<isize> for u32",
          "methods": [
            {
              "code": "pub fn try_from(u: isize) -> Result<u32, <u32 as TryFrom<isize>>::Error>",
              "text": "Try to create the target number type from a source number type. This returns an error if the source value is outside of the range of the target type."
            },
            {
              "code": "type Error = TryFromIntError",
              "text": "The type returned in the event of a conversion error."
            }
          ]
        },
        {
          "title": "impl TryFrom<isize> for u8",
          "methods": [
            {
              "code": "pub fn try_from(u: isize) -> Result<u8, <u8 as TryFrom<isize>>::Error>",
              "text": "Try to create the target number type from a source number type. This returns an error if the source value is outside of the range of the target type."
            },
            {
              "code": "type Error = TryFromIntError",
              "text": "The type returned in the event of a conversion error."
            }
          ]
        },
        {
          "title": "impl TryFrom<u128> for isize",
          "methods": [
            {
              "code": "pub fn try_from(u: u128) -> Result<isize, <isize as TryFrom<u128>>::Error>",
              "text": "Try to create the target number type from a source number type. This returns an error if the source value is outside of the range of the target type."
            },
            {
              "code": "type Error = TryFromIntError",
              "text": "The type returned in the event of a conversion error."
            }
          ]
        },
        {
          "title": "impl TryFrom<u16> for isize",
          "methods": [
            {
              "code": "pub fn try_from(value: u16) -> Result<isize, <isize as TryFrom<u16>>::Error>",
              "text": "Try to create the target number type from a source number type. This returns an error if the source value is outside of the range of the target type."
            },
            {
              "code": "type Error = TryFromIntError",
              "text": "The type returned in the event of a conversion error."
            }
          ]
        },
        {
          "title": "impl TryFrom<u32> for isize",
          "methods": [
            {
              "code": "pub fn try_from(value: u32) -> Result<isize, <isize as TryFrom<u32>>::Error>",
              "text": "Try to create the target number type from a source number type. This returns an error if the source value is outside of the range of the target type."
            },
            {
              "code": "type Error = TryFromIntError",
              "text": "The type returned in the event of a conversion error."
            }
          ]
        },
        {
          "title": "impl TryFrom<u64> for isize",
          "methods": [
            {
              "code": "pub fn try_from(u: u64) -> Result<isize, <isize as TryFrom<u64>>::Error>",
              "text": "Try to create the target number type from a source number type. This returns an error if the source value is outside of the range of the target type."
            },
            {
              "code": "type Error = TryFromIntError",
              "text": "The type returned in the event of a conversion error."
            }
          ]
        },
        {
          "title": "impl TryFrom<usize> for isize",
          "methods": [
            {
              "code": "pub fn try_from(u: usize) -> Result<isize, <isize as TryFrom<usize>>::Error>",
              "text": "Try to create the target number type from a source number type. This returns an error if the source value is outside of the range of the target type."
            },
            {
              "code": "type Error = TryFromIntError",
              "text": "The type returned in the event of a conversion error."
            }
          ]
        },
        {
          "title": "impl UpperExp for isize",
          "methods": [
            {
              "code": "pub fn fmt(&self, f: &mut Formatter<'_>) -> Result<(), Error>",
              "text": "Formats the value using the given formatter."
            }
          ]
        },
        {
          "title": "impl UpperHex for isize",
          "methods": [
            {
              "code": "pub fn fmt(&self, f: &mut Formatter<'_>) -> Result<(), Error>",
              "text": "Formats the value using the given formatter."
            }
          ]
        }
      ]
    }
  ]
}