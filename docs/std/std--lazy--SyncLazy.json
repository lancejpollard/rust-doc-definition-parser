{
  "title": "Struct std::lazy::SyncLazy",
  "sections": [
    {
      "name": "implementations",
      "methods": [
        {
          "code": "pub const fn new(f: F) -> SyncLazy<T, F>",
          "text": "Creates a new lazy value with the given initializing function."
        },
        {
          "code": "pub fn force(this: &SyncLazy<T, F>) -> &T",
          "text": "Forces the evaluation of this lazy value and returns a reference to result. This is equivalent to the Deref impl, but is explicit."
        }
      ]
    },
    {
      "name": "derefMethods",
      "methods": []
    },
    {
      "name": "traitImpl",
      "traits": [
        {
          "title": "impl<T: Debug, F> Debug for SyncLazy<T, F>",
          "methods": [
            {
              "code": "fn fmt(&self, f: &mut Formatter<'_>) -> Result",
              "text": "Formats the value using the given formatter."
            }
          ]
        },
        {
          "title": "impl<T: Default> Default for SyncLazy<T>",
          "methods": [
            {
              "code": "fn default() -> SyncLazy<T>",
              "text": "Creates a new lazy value using Default as the initializing function."
            }
          ]
        },
        {
          "title": "impl<T, F: FnOnce() -> T> Deref for SyncLazy<T, F>",
          "methods": [
            {
              "code": "type Target = T",
              "text": "The resulting type after dereferencing."
            },
            {
              "code": "fn deref(&self) -> &T",
              "text": "Dereferences the value."
            }
          ]
        }
      ]
    }
  ]
}