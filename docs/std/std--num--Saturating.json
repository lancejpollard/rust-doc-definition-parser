{
  "title": "Struct std::num::Saturating",
  "sections": [
    {
      "name": "implementations",
      "methods": [
        {
          "code": "pub const MIN: Saturating<usize>",
          "text": "Returns the smallest value that can be represented by this integer type."
        },
        {
          "code": "pub const MAX: Saturating<usize>",
          "text": "Returns the largest value that can be represented by this integer type."
        },
        {
          "code": "pub const BITS: u32",
          "text": "Returns the size of this integer type in bits."
        },
        {
          "code": "pub const fn count_ones(self) -> u32",
          "text": "Returns the number of ones in the binary representation of self."
        },
        {
          "code": "pub const fn count_zeros(self) -> u32",
          "text": "Returns the number of zeros in the binary representation of self."
        },
        {
          "code": "pub const fn trailing_zeros(self) -> u32",
          "text": "Returns the number of trailing zeros in the binary representation of self."
        },
        {
          "code": "pub const fn rotate_left(self, n: u32) -> Saturating<usize>",
          "text": "Shifts the bits to the left by a specified amount, n, saturating the truncated bits to the end of the resulting integer."
        },
        {
          "code": "pub const fn rotate_right(self, n: u32) -> Saturating<usize>",
          "text": "Shifts the bits to the right by a specified amount, n, saturating the truncated bits to the beginning of the resulting integer."
        },
        {
          "code": "pub const fn swap_bytes(self) -> Saturating<usize>",
          "text": "Reverses the byte order of the integer."
        },
        {
          "code": "pub fn reverse_bits(self) -> Saturating<usize>",
          "text": "Reverses the bit pattern of the integer."
        },
        {
          "code": "pub const fn from_be(x: Saturating<usize>) -> Saturating<usize>",
          "text": "Converts an integer from big endian to the target’s endianness."
        },
        {
          "code": "pub const fn from_le(x: Saturating<usize>) -> Saturating<usize>",
          "text": "Converts an integer from little endian to the target’s endianness."
        },
        {
          "code": "pub const fn to_be(self) -> Saturating<usize>",
          "text": "Converts self to big endian from the target’s endianness."
        },
        {
          "code": "pub const fn to_le(self) -> Saturating<usize>",
          "text": "Converts self to little endian from the target’s endianness."
        },
        {
          "code": "pub fn pow(self, exp: u32) -> Saturating<usize>",
          "text": "Raises self to the power of exp, using exponentiation by squaring."
        },
        {
          "code": "pub const MIN: Saturating<u8>",
          "text": "Returns the smallest value that can be represented by this integer type."
        },
        {
          "code": "pub const MAX: Saturating<u8>",
          "text": "Returns the largest value that can be represented by this integer type."
        },
        {
          "code": "pub const BITS: u32",
          "text": "Returns the size of this integer type in bits."
        },
        {
          "code": "pub const fn count_ones(self) -> u32",
          "text": "Returns the number of ones in the binary representation of self."
        },
        {
          "code": "pub const fn count_zeros(self) -> u32",
          "text": "Returns the number of zeros in the binary representation of self."
        },
        {
          "code": "pub const fn trailing_zeros(self) -> u32",
          "text": "Returns the number of trailing zeros in the binary representation of self."
        },
        {
          "code": "pub const fn rotate_left(self, n: u32) -> Saturating<u8>",
          "text": "Shifts the bits to the left by a specified amount, n, saturating the truncated bits to the end of the resulting integer."
        },
        {
          "code": "pub const fn rotate_right(self, n: u32) -> Saturating<u8>",
          "text": "Shifts the bits to the right by a specified amount, n, saturating the truncated bits to the beginning of the resulting integer."
        },
        {
          "code": "pub const fn swap_bytes(self) -> Saturating<u8>",
          "text": "Reverses the byte order of the integer."
        },
        {
          "code": "pub fn reverse_bits(self) -> Saturating<u8>",
          "text": "Reverses the bit pattern of the integer."
        },
        {
          "code": "pub const fn from_be(x: Saturating<u8>) -> Saturating<u8>",
          "text": "Converts an integer from big endian to the target’s endianness."
        },
        {
          "code": "pub const fn from_le(x: Saturating<u8>) -> Saturating<u8>",
          "text": "Converts an integer from little endian to the target’s endianness."
        },
        {
          "code": "pub const fn to_be(self) -> Saturating<u8>",
          "text": "Converts self to big endian from the target’s endianness."
        },
        {
          "code": "pub const fn to_le(self) -> Saturating<u8>",
          "text": "Converts self to little endian from the target’s endianness."
        },
        {
          "code": "pub fn pow(self, exp: u32) -> Saturating<u8>",
          "text": "Raises self to the power of exp, using exponentiation by squaring."
        },
        {
          "code": "pub const MIN: Saturating<u16>",
          "text": "Returns the smallest value that can be represented by this integer type."
        },
        {
          "code": "pub const MAX: Saturating<u16>",
          "text": "Returns the largest value that can be represented by this integer type."
        },
        {
          "code": "pub const BITS: u32",
          "text": "Returns the size of this integer type in bits."
        },
        {
          "code": "pub const fn count_ones(self) -> u32",
          "text": "Returns the number of ones in the binary representation of self."
        },
        {
          "code": "pub const fn count_zeros(self) -> u32",
          "text": "Returns the number of zeros in the binary representation of self."
        },
        {
          "code": "pub const fn trailing_zeros(self) -> u32",
          "text": "Returns the number of trailing zeros in the binary representation of self."
        },
        {
          "code": "pub const fn rotate_left(self, n: u32) -> Saturating<u16>",
          "text": "Shifts the bits to the left by a specified amount, n, saturating the truncated bits to the end of the resulting integer."
        },
        {
          "code": "pub const fn rotate_right(self, n: u32) -> Saturating<u16>",
          "text": "Shifts the bits to the right by a specified amount, n, saturating the truncated bits to the beginning of the resulting integer."
        },
        {
          "code": "pub const fn swap_bytes(self) -> Saturating<u16>",
          "text": "Reverses the byte order of the integer."
        },
        {
          "code": "pub fn reverse_bits(self) -> Saturating<u16>",
          "text": "Reverses the bit pattern of the integer."
        },
        {
          "code": "pub const fn from_be(x: Saturating<u16>) -> Saturating<u16>",
          "text": "Converts an integer from big endian to the target’s endianness."
        },
        {
          "code": "pub const fn from_le(x: Saturating<u16>) -> Saturating<u16>",
          "text": "Converts an integer from little endian to the target’s endianness."
        },
        {
          "code": "pub const fn to_be(self) -> Saturating<u16>",
          "text": "Converts self to big endian from the target’s endianness."
        },
        {
          "code": "pub const fn to_le(self) -> Saturating<u16>",
          "text": "Converts self to little endian from the target’s endianness."
        },
        {
          "code": "pub fn pow(self, exp: u32) -> Saturating<u16>",
          "text": "Raises self to the power of exp, using exponentiation by squaring."
        },
        {
          "code": "pub const MIN: Saturating<u32>",
          "text": "Returns the smallest value that can be represented by this integer type."
        },
        {
          "code": "pub const MAX: Saturating<u32>",
          "text": "Returns the largest value that can be represented by this integer type."
        },
        {
          "code": "pub const BITS: u32",
          "text": "Returns the size of this integer type in bits."
        },
        {
          "code": "pub const fn count_ones(self) -> u32",
          "text": "Returns the number of ones in the binary representation of self."
        },
        {
          "code": "pub const fn count_zeros(self) -> u32",
          "text": "Returns the number of zeros in the binary representation of self."
        },
        {
          "code": "pub const fn trailing_zeros(self) -> u32",
          "text": "Returns the number of trailing zeros in the binary representation of self."
        },
        {
          "code": "pub const fn rotate_left(self, n: u32) -> Saturating<u32>",
          "text": "Shifts the bits to the left by a specified amount, n, saturating the truncated bits to the end of the resulting integer."
        },
        {
          "code": "pub const fn rotate_right(self, n: u32) -> Saturating<u32>",
          "text": "Shifts the bits to the right by a specified amount, n, saturating the truncated bits to the beginning of the resulting integer."
        },
        {
          "code": "pub const fn swap_bytes(self) -> Saturating<u32>",
          "text": "Reverses the byte order of the integer."
        },
        {
          "code": "pub fn reverse_bits(self) -> Saturating<u32>",
          "text": "Reverses the bit pattern of the integer."
        },
        {
          "code": "pub const fn from_be(x: Saturating<u32>) -> Saturating<u32>",
          "text": "Converts an integer from big endian to the target’s endianness."
        },
        {
          "code": "pub const fn from_le(x: Saturating<u32>) -> Saturating<u32>",
          "text": "Converts an integer from little endian to the target’s endianness."
        },
        {
          "code": "pub const fn to_be(self) -> Saturating<u32>",
          "text": "Converts self to big endian from the target’s endianness."
        },
        {
          "code": "pub const fn to_le(self) -> Saturating<u32>",
          "text": "Converts self to little endian from the target’s endianness."
        },
        {
          "code": "pub fn pow(self, exp: u32) -> Saturating<u32>",
          "text": "Raises self to the power of exp, using exponentiation by squaring."
        },
        {
          "code": "pub const MIN: Saturating<u64>",
          "text": "Returns the smallest value that can be represented by this integer type."
        },
        {
          "code": "pub const MAX: Saturating<u64>",
          "text": "Returns the largest value that can be represented by this integer type."
        },
        {
          "code": "pub const BITS: u32",
          "text": "Returns the size of this integer type in bits."
        },
        {
          "code": "pub const fn count_ones(self) -> u32",
          "text": "Returns the number of ones in the binary representation of self."
        },
        {
          "code": "pub const fn count_zeros(self) -> u32",
          "text": "Returns the number of zeros in the binary representation of self."
        },
        {
          "code": "pub const fn trailing_zeros(self) -> u32",
          "text": "Returns the number of trailing zeros in the binary representation of self."
        },
        {
          "code": "pub const fn rotate_left(self, n: u32) -> Saturating<u64>",
          "text": "Shifts the bits to the left by a specified amount, n, saturating the truncated bits to the end of the resulting integer."
        },
        {
          "code": "pub const fn rotate_right(self, n: u32) -> Saturating<u64>",
          "text": "Shifts the bits to the right by a specified amount, n, saturating the truncated bits to the beginning of the resulting integer."
        },
        {
          "code": "pub const fn swap_bytes(self) -> Saturating<u64>",
          "text": "Reverses the byte order of the integer."
        },
        {
          "code": "pub fn reverse_bits(self) -> Saturating<u64>",
          "text": "Reverses the bit pattern of the integer."
        },
        {
          "code": "pub const fn from_be(x: Saturating<u64>) -> Saturating<u64>",
          "text": "Converts an integer from big endian to the target’s endianness."
        },
        {
          "code": "pub const fn from_le(x: Saturating<u64>) -> Saturating<u64>",
          "text": "Converts an integer from little endian to the target’s endianness."
        },
        {
          "code": "pub const fn to_be(self) -> Saturating<u64>",
          "text": "Converts self to big endian from the target’s endianness."
        },
        {
          "code": "pub const fn to_le(self) -> Saturating<u64>",
          "text": "Converts self to little endian from the target’s endianness."
        },
        {
          "code": "pub fn pow(self, exp: u32) -> Saturating<u64>",
          "text": "Raises self to the power of exp, using exponentiation by squaring."
        },
        {
          "code": "pub const MIN: Saturating<u128>",
          "text": "Returns the smallest value that can be represented by this integer type."
        },
        {
          "code": "pub const MAX: Saturating<u128>",
          "text": "Returns the largest value that can be represented by this integer type."
        },
        {
          "code": "pub const BITS: u32",
          "text": "Returns the size of this integer type in bits."
        },
        {
          "code": "pub const fn count_ones(self) -> u32",
          "text": "Returns the number of ones in the binary representation of self."
        },
        {
          "code": "pub const fn count_zeros(self) -> u32",
          "text": "Returns the number of zeros in the binary representation of self."
        },
        {
          "code": "pub const fn trailing_zeros(self) -> u32",
          "text": "Returns the number of trailing zeros in the binary representation of self."
        },
        {
          "code": "pub const fn rotate_left(self, n: u32) -> Saturating<u128>",
          "text": "Shifts the bits to the left by a specified amount, n, saturating the truncated bits to the end of the resulting integer."
        },
        {
          "code": "pub const fn rotate_right(self, n: u32) -> Saturating<u128>",
          "text": "Shifts the bits to the right by a specified amount, n, saturating the truncated bits to the beginning of the resulting integer."
        },
        {
          "code": "pub const fn swap_bytes(self) -> Saturating<u128>",
          "text": "Reverses the byte order of the integer."
        },
        {
          "code": "pub fn reverse_bits(self) -> Saturating<u128>",
          "text": "Reverses the bit pattern of the integer."
        },
        {
          "code": "pub const fn from_be(x: Saturating<u128>) -> Saturating<u128>",
          "text": "Converts an integer from big endian to the target’s endianness."
        },
        {
          "code": "pub const fn from_le(x: Saturating<u128>) -> Saturating<u128>",
          "text": "Converts an integer from little endian to the target’s endianness."
        },
        {
          "code": "pub const fn to_be(self) -> Saturating<u128>",
          "text": "Converts self to big endian from the target’s endianness."
        },
        {
          "code": "pub const fn to_le(self) -> Saturating<u128>",
          "text": "Converts self to little endian from the target’s endianness."
        },
        {
          "code": "pub fn pow(self, exp: u32) -> Saturating<u128>",
          "text": "Raises self to the power of exp, using exponentiation by squaring."
        },
        {
          "code": "pub const MIN: Saturating<isize>",
          "text": "Returns the smallest value that can be represented by this integer type."
        },
        {
          "code": "pub const MAX: Saturating<isize>",
          "text": "Returns the largest value that can be represented by this integer type."
        },
        {
          "code": "pub const BITS: u32",
          "text": "Returns the size of this integer type in bits."
        },
        {
          "code": "pub const fn count_ones(self) -> u32",
          "text": "Returns the number of ones in the binary representation of self."
        },
        {
          "code": "pub const fn count_zeros(self) -> u32",
          "text": "Returns the number of zeros in the binary representation of self."
        },
        {
          "code": "pub const fn trailing_zeros(self) -> u32",
          "text": "Returns the number of trailing zeros in the binary representation of self."
        },
        {
          "code": "pub const fn rotate_left(self, n: u32) -> Saturating<isize>",
          "text": "Shifts the bits to the left by a specified amount, n, saturating the truncated bits to the end of the resulting integer."
        },
        {
          "code": "pub const fn rotate_right(self, n: u32) -> Saturating<isize>",
          "text": "Shifts the bits to the right by a specified amount, n, saturating the truncated bits to the beginning of the resulting integer."
        },
        {
          "code": "pub const fn swap_bytes(self) -> Saturating<isize>",
          "text": "Reverses the byte order of the integer."
        },
        {
          "code": "pub fn reverse_bits(self) -> Saturating<isize>",
          "text": "Reverses the bit pattern of the integer."
        },
        {
          "code": "pub const fn from_be(x: Saturating<isize>) -> Saturating<isize>",
          "text": "Converts an integer from big endian to the target’s endianness."
        },
        {
          "code": "pub const fn from_le(x: Saturating<isize>) -> Saturating<isize>",
          "text": "Converts an integer from little endian to the target’s endianness."
        },
        {
          "code": "pub const fn to_be(self) -> Saturating<isize>",
          "text": "Converts self to big endian from the target’s endianness."
        },
        {
          "code": "pub const fn to_le(self) -> Saturating<isize>",
          "text": "Converts self to little endian from the target’s endianness."
        },
        {
          "code": "pub fn pow(self, exp: u32) -> Saturating<isize>",
          "text": "Raises self to the power of exp, using exponentiation by squaring."
        },
        {
          "code": "pub const MIN: Saturating<i8>",
          "text": "Returns the smallest value that can be represented by this integer type."
        },
        {
          "code": "pub const MAX: Saturating<i8>",
          "text": "Returns the largest value that can be represented by this integer type."
        },
        {
          "code": "pub const BITS: u32",
          "text": "Returns the size of this integer type in bits."
        },
        {
          "code": "pub const fn count_ones(self) -> u32",
          "text": "Returns the number of ones in the binary representation of self."
        },
        {
          "code": "pub const fn count_zeros(self) -> u32",
          "text": "Returns the number of zeros in the binary representation of self."
        },
        {
          "code": "pub const fn trailing_zeros(self) -> u32",
          "text": "Returns the number of trailing zeros in the binary representation of self."
        },
        {
          "code": "pub const fn rotate_left(self, n: u32) -> Saturating<i8>",
          "text": "Shifts the bits to the left by a specified amount, n, saturating the truncated bits to the end of the resulting integer."
        },
        {
          "code": "pub const fn rotate_right(self, n: u32) -> Saturating<i8>",
          "text": "Shifts the bits to the right by a specified amount, n, saturating the truncated bits to the beginning of the resulting integer."
        },
        {
          "code": "pub const fn swap_bytes(self) -> Saturating<i8>",
          "text": "Reverses the byte order of the integer."
        },
        {
          "code": "pub fn reverse_bits(self) -> Saturating<i8>",
          "text": "Reverses the bit pattern of the integer."
        },
        {
          "code": "pub const fn from_be(x: Saturating<i8>) -> Saturating<i8>",
          "text": "Converts an integer from big endian to the target’s endianness."
        },
        {
          "code": "pub const fn from_le(x: Saturating<i8>) -> Saturating<i8>",
          "text": "Converts an integer from little endian to the target’s endianness."
        },
        {
          "code": "pub const fn to_be(self) -> Saturating<i8>",
          "text": "Converts self to big endian from the target’s endianness."
        },
        {
          "code": "pub const fn to_le(self) -> Saturating<i8>",
          "text": "Converts self to little endian from the target’s endianness."
        },
        {
          "code": "pub fn pow(self, exp: u32) -> Saturating<i8>",
          "text": "Raises self to the power of exp, using exponentiation by squaring."
        },
        {
          "code": "pub const MIN: Saturating<i16>",
          "text": "Returns the smallest value that can be represented by this integer type."
        },
        {
          "code": "pub const MAX: Saturating<i16>",
          "text": "Returns the largest value that can be represented by this integer type."
        },
        {
          "code": "pub const BITS: u32",
          "text": "Returns the size of this integer type in bits."
        },
        {
          "code": "pub const fn count_ones(self) -> u32",
          "text": "Returns the number of ones in the binary representation of self."
        },
        {
          "code": "pub const fn count_zeros(self) -> u32",
          "text": "Returns the number of zeros in the binary representation of self."
        },
        {
          "code": "pub const fn trailing_zeros(self) -> u32",
          "text": "Returns the number of trailing zeros in the binary representation of self."
        },
        {
          "code": "pub const fn rotate_left(self, n: u32) -> Saturating<i16>",
          "text": "Shifts the bits to the left by a specified amount, n, saturating the truncated bits to the end of the resulting integer."
        },
        {
          "code": "pub const fn rotate_right(self, n: u32) -> Saturating<i16>",
          "text": "Shifts the bits to the right by a specified amount, n, saturating the truncated bits to the beginning of the resulting integer."
        },
        {
          "code": "pub const fn swap_bytes(self) -> Saturating<i16>",
          "text": "Reverses the byte order of the integer."
        },
        {
          "code": "pub fn reverse_bits(self) -> Saturating<i16>",
          "text": "Reverses the bit pattern of the integer."
        },
        {
          "code": "pub const fn from_be(x: Saturating<i16>) -> Saturating<i16>",
          "text": "Converts an integer from big endian to the target’s endianness."
        },
        {
          "code": "pub const fn from_le(x: Saturating<i16>) -> Saturating<i16>",
          "text": "Converts an integer from little endian to the target’s endianness."
        },
        {
          "code": "pub const fn to_be(self) -> Saturating<i16>",
          "text": "Converts self to big endian from the target’s endianness."
        },
        {
          "code": "pub const fn to_le(self) -> Saturating<i16>",
          "text": "Converts self to little endian from the target’s endianness."
        },
        {
          "code": "pub fn pow(self, exp: u32) -> Saturating<i16>",
          "text": "Raises self to the power of exp, using exponentiation by squaring."
        },
        {
          "code": "pub const MIN: Saturating<i32>",
          "text": "Returns the smallest value that can be represented by this integer type."
        },
        {
          "code": "pub const MAX: Saturating<i32>",
          "text": "Returns the largest value that can be represented by this integer type."
        },
        {
          "code": "pub const BITS: u32",
          "text": "Returns the size of this integer type in bits."
        },
        {
          "code": "pub const fn count_ones(self) -> u32",
          "text": "Returns the number of ones in the binary representation of self."
        },
        {
          "code": "pub const fn count_zeros(self) -> u32",
          "text": "Returns the number of zeros in the binary representation of self."
        },
        {
          "code": "pub const fn trailing_zeros(self) -> u32",
          "text": "Returns the number of trailing zeros in the binary representation of self."
        },
        {
          "code": "pub const fn rotate_left(self, n: u32) -> Saturating<i32>",
          "text": "Shifts the bits to the left by a specified amount, n, saturating the truncated bits to the end of the resulting integer."
        },
        {
          "code": "pub const fn rotate_right(self, n: u32) -> Saturating<i32>",
          "text": "Shifts the bits to the right by a specified amount, n, saturating the truncated bits to the beginning of the resulting integer."
        },
        {
          "code": "pub const fn swap_bytes(self) -> Saturating<i32>",
          "text": "Reverses the byte order of the integer."
        },
        {
          "code": "pub fn reverse_bits(self) -> Saturating<i32>",
          "text": "Reverses the bit pattern of the integer."
        },
        {
          "code": "pub const fn from_be(x: Saturating<i32>) -> Saturating<i32>",
          "text": "Converts an integer from big endian to the target’s endianness."
        },
        {
          "code": "pub const fn from_le(x: Saturating<i32>) -> Saturating<i32>",
          "text": "Converts an integer from little endian to the target’s endianness."
        },
        {
          "code": "pub const fn to_be(self) -> Saturating<i32>",
          "text": "Converts self to big endian from the target’s endianness."
        },
        {
          "code": "pub const fn to_le(self) -> Saturating<i32>",
          "text": "Converts self to little endian from the target’s endianness."
        },
        {
          "code": "pub fn pow(self, exp: u32) -> Saturating<i32>",
          "text": "Raises self to the power of exp, using exponentiation by squaring."
        },
        {
          "code": "pub const MIN: Saturating<i64>",
          "text": "Returns the smallest value that can be represented by this integer type."
        },
        {
          "code": "pub const MAX: Saturating<i64>",
          "text": "Returns the largest value that can be represented by this integer type."
        },
        {
          "code": "pub const BITS: u32",
          "text": "Returns the size of this integer type in bits."
        },
        {
          "code": "pub const fn count_ones(self) -> u32",
          "text": "Returns the number of ones in the binary representation of self."
        },
        {
          "code": "pub const fn count_zeros(self) -> u32",
          "text": "Returns the number of zeros in the binary representation of self."
        },
        {
          "code": "pub const fn trailing_zeros(self) -> u32",
          "text": "Returns the number of trailing zeros in the binary representation of self."
        },
        {
          "code": "pub const fn rotate_left(self, n: u32) -> Saturating<i64>",
          "text": "Shifts the bits to the left by a specified amount, n, saturating the truncated bits to the end of the resulting integer."
        },
        {
          "code": "pub const fn rotate_right(self, n: u32) -> Saturating<i64>",
          "text": "Shifts the bits to the right by a specified amount, n, saturating the truncated bits to the beginning of the resulting integer."
        },
        {
          "code": "pub const fn swap_bytes(self) -> Saturating<i64>",
          "text": "Reverses the byte order of the integer."
        },
        {
          "code": "pub fn reverse_bits(self) -> Saturating<i64>",
          "text": "Reverses the bit pattern of the integer."
        },
        {
          "code": "pub const fn from_be(x: Saturating<i64>) -> Saturating<i64>",
          "text": "Converts an integer from big endian to the target’s endianness."
        },
        {
          "code": "pub const fn from_le(x: Saturating<i64>) -> Saturating<i64>",
          "text": "Converts an integer from little endian to the target’s endianness."
        },
        {
          "code": "pub const fn to_be(self) -> Saturating<i64>",
          "text": "Converts self to big endian from the target’s endianness."
        },
        {
          "code": "pub const fn to_le(self) -> Saturating<i64>",
          "text": "Converts self to little endian from the target’s endianness."
        },
        {
          "code": "pub fn pow(self, exp: u32) -> Saturating<i64>",
          "text": "Raises self to the power of exp, using exponentiation by squaring."
        },
        {
          "code": "pub const MIN: Saturating<i128>",
          "text": "Returns the smallest value that can be represented by this integer type."
        },
        {
          "code": "pub const MAX: Saturating<i128>",
          "text": "Returns the largest value that can be represented by this integer type."
        },
        {
          "code": "pub const BITS: u32",
          "text": "Returns the size of this integer type in bits."
        },
        {
          "code": "pub const fn count_ones(self) -> u32",
          "text": "Returns the number of ones in the binary representation of self."
        },
        {
          "code": "pub const fn count_zeros(self) -> u32",
          "text": "Returns the number of zeros in the binary representation of self."
        },
        {
          "code": "pub const fn trailing_zeros(self) -> u32",
          "text": "Returns the number of trailing zeros in the binary representation of self."
        },
        {
          "code": "pub const fn rotate_left(self, n: u32) -> Saturating<i128>",
          "text": "Shifts the bits to the left by a specified amount, n, saturating the truncated bits to the end of the resulting integer."
        },
        {
          "code": "pub const fn rotate_right(self, n: u32) -> Saturating<i128>",
          "text": "Shifts the bits to the right by a specified amount, n, saturating the truncated bits to the beginning of the resulting integer."
        },
        {
          "code": "pub const fn swap_bytes(self) -> Saturating<i128>",
          "text": "Reverses the byte order of the integer."
        },
        {
          "code": "pub fn reverse_bits(self) -> Saturating<i128>",
          "text": "Reverses the bit pattern of the integer."
        },
        {
          "code": "pub const fn from_be(x: Saturating<i128>) -> Saturating<i128>",
          "text": "Converts an integer from big endian to the target’s endianness."
        },
        {
          "code": "pub const fn from_le(x: Saturating<i128>) -> Saturating<i128>",
          "text": "Converts an integer from little endian to the target’s endianness."
        },
        {
          "code": "pub const fn to_be(self) -> Saturating<i128>",
          "text": "Converts self to big endian from the target’s endianness."
        },
        {
          "code": "pub const fn to_le(self) -> Saturating<i128>",
          "text": "Converts self to little endian from the target’s endianness."
        },
        {
          "code": "pub fn pow(self, exp: u32) -> Saturating<i128>",
          "text": "Raises self to the power of exp, using exponentiation by squaring."
        },
        {
          "code": "pub const fn leading_zeros(self) -> u32",
          "text": "Returns the number of leading zeros in the binary representation of self."
        },
        {
          "code": "pub fn abs(self) -> Saturating<isize>",
          "text": "Saturating absolute value. Computes self.abs(), returning MAX if self == MIN instead of overflowing."
        },
        {
          "code": "pub fn signum(self) -> Saturating<isize>",
          "text": "Returns a number representing sign of self."
        },
        {
          "code": "pub const fn is_positive(self) -> bool",
          "text": "Returns true if self is positive and false if the number is zero or negative."
        },
        {
          "code": "pub const fn is_negative(self) -> bool",
          "text": "Returns true if self is negative and false if the number is zero or positive."
        },
        {
          "code": "pub const fn leading_zeros(self) -> u32",
          "text": "Returns the number of leading zeros in the binary representation of self."
        },
        {
          "code": "pub fn abs(self) -> Saturating<i8>",
          "text": "Saturating absolute value. Computes self.abs(), returning MAX if self == MIN instead of overflowing."
        },
        {
          "code": "pub fn signum(self) -> Saturating<i8>",
          "text": "Returns a number representing sign of self."
        },
        {
          "code": "pub const fn is_positive(self) -> bool",
          "text": "Returns true if self is positive and false if the number is zero or negative."
        },
        {
          "code": "pub const fn is_negative(self) -> bool",
          "text": "Returns true if self is negative and false if the number is zero or positive."
        },
        {
          "code": "pub const fn leading_zeros(self) -> u32",
          "text": "Returns the number of leading zeros in the binary representation of self."
        },
        {
          "code": "pub fn abs(self) -> Saturating<i16>",
          "text": "Saturating absolute value. Computes self.abs(), returning MAX if self == MIN instead of overflowing."
        },
        {
          "code": "pub fn signum(self) -> Saturating<i16>",
          "text": "Returns a number representing sign of self."
        },
        {
          "code": "pub const fn is_positive(self) -> bool",
          "text": "Returns true if self is positive and false if the number is zero or negative."
        },
        {
          "code": "pub const fn is_negative(self) -> bool",
          "text": "Returns true if self is negative and false if the number is zero or positive."
        },
        {
          "code": "pub const fn leading_zeros(self) -> u32",
          "text": "Returns the number of leading zeros in the binary representation of self."
        },
        {
          "code": "pub fn abs(self) -> Saturating<i32>",
          "text": "Saturating absolute value. Computes self.abs(), returning MAX if self == MIN instead of overflowing."
        },
        {
          "code": "pub fn signum(self) -> Saturating<i32>",
          "text": "Returns a number representing sign of self."
        },
        {
          "code": "pub const fn is_positive(self) -> bool",
          "text": "Returns true if self is positive and false if the number is zero or negative."
        },
        {
          "code": "pub const fn is_negative(self) -> bool",
          "text": "Returns true if self is negative and false if the number is zero or positive."
        },
        {
          "code": "pub const fn leading_zeros(self) -> u32",
          "text": "Returns the number of leading zeros in the binary representation of self."
        },
        {
          "code": "pub fn abs(self) -> Saturating<i64>",
          "text": "Saturating absolute value. Computes self.abs(), returning MAX if self == MIN instead of overflowing."
        },
        {
          "code": "pub fn signum(self) -> Saturating<i64>",
          "text": "Returns a number representing sign of self."
        },
        {
          "code": "pub const fn is_positive(self) -> bool",
          "text": "Returns true if self is positive and false if the number is zero or negative."
        },
        {
          "code": "pub const fn is_negative(self) -> bool",
          "text": "Returns true if self is negative and false if the number is zero or positive."
        },
        {
          "code": "pub const fn leading_zeros(self) -> u32",
          "text": "Returns the number of leading zeros in the binary representation of self."
        },
        {
          "code": "pub fn abs(self) -> Saturating<i128>",
          "text": "Saturating absolute value. Computes self.abs(), returning MAX if self == MIN instead of overflowing."
        },
        {
          "code": "pub fn signum(self) -> Saturating<i128>",
          "text": "Returns a number representing sign of self."
        },
        {
          "code": "pub const fn is_positive(self) -> bool",
          "text": "Returns true if self is positive and false if the number is zero or negative."
        },
        {
          "code": "pub const fn is_negative(self) -> bool",
          "text": "Returns true if self is negative and false if the number is zero or positive."
        },
        {
          "code": "pub const fn leading_zeros(self) -> u32",
          "text": "Returns the number of leading zeros in the binary representation of self."
        },
        {
          "code": "pub fn is_power_of_two(self) -> bool",
          "text": "Returns true if and only if self == 2^k for some k."
        },
        {
          "code": "pub const fn leading_zeros(self) -> u32",
          "text": "Returns the number of leading zeros in the binary representation of self."
        },
        {
          "code": "pub fn is_power_of_two(self) -> bool",
          "text": "Returns true if and only if self == 2^k for some k."
        },
        {
          "code": "pub const fn leading_zeros(self) -> u32",
          "text": "Returns the number of leading zeros in the binary representation of self."
        },
        {
          "code": "pub fn is_power_of_two(self) -> bool",
          "text": "Returns true if and only if self == 2^k for some k."
        },
        {
          "code": "pub const fn leading_zeros(self) -> u32",
          "text": "Returns the number of leading zeros in the binary representation of self."
        },
        {
          "code": "pub fn is_power_of_two(self) -> bool",
          "text": "Returns true if and only if self == 2^k for some k."
        },
        {
          "code": "pub const fn leading_zeros(self) -> u32",
          "text": "Returns the number of leading zeros in the binary representation of self."
        },
        {
          "code": "pub fn is_power_of_two(self) -> bool",
          "text": "Returns true if and only if self == 2^k for some k."
        },
        {
          "code": "pub const fn leading_zeros(self) -> u32",
          "text": "Returns the number of leading zeros in the binary representation of self."
        },
        {
          "code": "pub fn is_power_of_two(self) -> bool",
          "text": "Returns true if and only if self == 2^k for some k."
        }
      ]
    },
    {
      "name": "derefMethods",
      "methods": []
    },
    {
      "name": "traitImpl",
      "traits": [
        {
          "title": "impl<'_> Add<&'_ Saturating<i128>> for Saturating<i128>",
          "methods": [
            {
              "code": "type Output = <Saturating<i128> as Add<Saturating<i128>>>::Output",
              "text": "The resulting type after applying the + operator."
            },
            {
              "code": "pub fn add( self, other: &Saturating<i128>) -> <Saturating<i128> as Add<Saturating<i128>>>::Output",
              "text": "Performs the + operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Add<&'_ Saturating<i128>> for &'_ Saturating<i128>",
          "methods": [
            {
              "code": "type Output = <Saturating<i128> as Add<Saturating<i128>>>::Output",
              "text": "The resulting type after applying the + operator."
            },
            {
              "code": "pub fn add( self, other: &Saturating<i128>) -> <Saturating<i128> as Add<Saturating<i128>>>::Output",
              "text": "Performs the + operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Add<&'_ Saturating<i16>> for &'_ Saturating<i16>",
          "methods": [
            {
              "code": "type Output = <Saturating<i16> as Add<Saturating<i16>>>::Output",
              "text": "The resulting type after applying the + operator."
            },
            {
              "code": "pub fn add( self, other: &Saturating<i16>) -> <Saturating<i16> as Add<Saturating<i16>>>::Output",
              "text": "Performs the + operation."
            }
          ]
        },
        {
          "title": "impl<'_> Add<&'_ Saturating<i16>> for Saturating<i16>",
          "methods": [
            {
              "code": "type Output = <Saturating<i16> as Add<Saturating<i16>>>::Output",
              "text": "The resulting type after applying the + operator."
            },
            {
              "code": "pub fn add( self, other: &Saturating<i16>) -> <Saturating<i16> as Add<Saturating<i16>>>::Output",
              "text": "Performs the + operation."
            }
          ]
        },
        {
          "title": "impl<'_> Add<&'_ Saturating<i32>> for Saturating<i32>",
          "methods": [
            {
              "code": "type Output = <Saturating<i32> as Add<Saturating<i32>>>::Output",
              "text": "The resulting type after applying the + operator."
            },
            {
              "code": "pub fn add( self, other: &Saturating<i32>) -> <Saturating<i32> as Add<Saturating<i32>>>::Output",
              "text": "Performs the + operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Add<&'_ Saturating<i32>> for &'_ Saturating<i32>",
          "methods": [
            {
              "code": "type Output = <Saturating<i32> as Add<Saturating<i32>>>::Output",
              "text": "The resulting type after applying the + operator."
            },
            {
              "code": "pub fn add( self, other: &Saturating<i32>) -> <Saturating<i32> as Add<Saturating<i32>>>::Output",
              "text": "Performs the + operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Add<&'_ Saturating<i64>> for &'_ Saturating<i64>",
          "methods": [
            {
              "code": "type Output = <Saturating<i64> as Add<Saturating<i64>>>::Output",
              "text": "The resulting type after applying the + operator."
            },
            {
              "code": "pub fn add( self, other: &Saturating<i64>) -> <Saturating<i64> as Add<Saturating<i64>>>::Output",
              "text": "Performs the + operation."
            }
          ]
        },
        {
          "title": "impl<'_> Add<&'_ Saturating<i64>> for Saturating<i64>",
          "methods": [
            {
              "code": "type Output = <Saturating<i64> as Add<Saturating<i64>>>::Output",
              "text": "The resulting type after applying the + operator."
            },
            {
              "code": "pub fn add( self, other: &Saturating<i64>) -> <Saturating<i64> as Add<Saturating<i64>>>::Output",
              "text": "Performs the + operation."
            }
          ]
        },
        {
          "title": "impl<'_> Add<&'_ Saturating<i8>> for Saturating<i8>",
          "methods": [
            {
              "code": "type Output = <Saturating<i8> as Add<Saturating<i8>>>::Output",
              "text": "The resulting type after applying the + operator."
            },
            {
              "code": "pub fn add( self, other: &Saturating<i8>) -> <Saturating<i8> as Add<Saturating<i8>>>::Output",
              "text": "Performs the + operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Add<&'_ Saturating<i8>> for &'_ Saturating<i8>",
          "methods": [
            {
              "code": "type Output = <Saturating<i8> as Add<Saturating<i8>>>::Output",
              "text": "The resulting type after applying the + operator."
            },
            {
              "code": "pub fn add( self, other: &Saturating<i8>) -> <Saturating<i8> as Add<Saturating<i8>>>::Output",
              "text": "Performs the + operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Add<&'_ Saturating<isize>> for &'_ Saturating<isize>",
          "methods": [
            {
              "code": "type Output = <Saturating<isize> as Add<Saturating<isize>>>::Output",
              "text": "The resulting type after applying the + operator."
            },
            {
              "code": "pub fn add( self, other: &Saturating<isize>) -> <Saturating<isize> as Add<Saturating<isize>>>::Output",
              "text": "Performs the + operation."
            }
          ]
        },
        {
          "title": "impl<'_> Add<&'_ Saturating<isize>> for Saturating<isize>",
          "methods": [
            {
              "code": "type Output = <Saturating<isize> as Add<Saturating<isize>>>::Output",
              "text": "The resulting type after applying the + operator."
            },
            {
              "code": "pub fn add( self, other: &Saturating<isize>) -> <Saturating<isize> as Add<Saturating<isize>>>::Output",
              "text": "Performs the + operation."
            }
          ]
        },
        {
          "title": "impl<'_> Add<&'_ Saturating<u128>> for Saturating<u128>",
          "methods": [
            {
              "code": "type Output = <Saturating<u128> as Add<Saturating<u128>>>::Output",
              "text": "The resulting type after applying the + operator."
            },
            {
              "code": "pub fn add( self, other: &Saturating<u128>) -> <Saturating<u128> as Add<Saturating<u128>>>::Output",
              "text": "Performs the + operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Add<&'_ Saturating<u128>> for &'_ Saturating<u128>",
          "methods": [
            {
              "code": "type Output = <Saturating<u128> as Add<Saturating<u128>>>::Output",
              "text": "The resulting type after applying the + operator."
            },
            {
              "code": "pub fn add( self, other: &Saturating<u128>) -> <Saturating<u128> as Add<Saturating<u128>>>::Output",
              "text": "Performs the + operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Add<&'_ Saturating<u16>> for &'_ Saturating<u16>",
          "methods": [
            {
              "code": "type Output = <Saturating<u16> as Add<Saturating<u16>>>::Output",
              "text": "The resulting type after applying the + operator."
            },
            {
              "code": "pub fn add( self, other: &Saturating<u16>) -> <Saturating<u16> as Add<Saturating<u16>>>::Output",
              "text": "Performs the + operation."
            }
          ]
        },
        {
          "title": "impl<'_> Add<&'_ Saturating<u16>> for Saturating<u16>",
          "methods": [
            {
              "code": "type Output = <Saturating<u16> as Add<Saturating<u16>>>::Output",
              "text": "The resulting type after applying the + operator."
            },
            {
              "code": "pub fn add( self, other: &Saturating<u16>) -> <Saturating<u16> as Add<Saturating<u16>>>::Output",
              "text": "Performs the + operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Add<&'_ Saturating<u32>> for &'_ Saturating<u32>",
          "methods": [
            {
              "code": "type Output = <Saturating<u32> as Add<Saturating<u32>>>::Output",
              "text": "The resulting type after applying the + operator."
            },
            {
              "code": "pub fn add( self, other: &Saturating<u32>) -> <Saturating<u32> as Add<Saturating<u32>>>::Output",
              "text": "Performs the + operation."
            }
          ]
        },
        {
          "title": "impl<'_> Add<&'_ Saturating<u32>> for Saturating<u32>",
          "methods": [
            {
              "code": "type Output = <Saturating<u32> as Add<Saturating<u32>>>::Output",
              "text": "The resulting type after applying the + operator."
            },
            {
              "code": "pub fn add( self, other: &Saturating<u32>) -> <Saturating<u32> as Add<Saturating<u32>>>::Output",
              "text": "Performs the + operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Add<&'_ Saturating<u64>> for &'_ Saturating<u64>",
          "methods": [
            {
              "code": "type Output = <Saturating<u64> as Add<Saturating<u64>>>::Output",
              "text": "The resulting type after applying the + operator."
            },
            {
              "code": "pub fn add( self, other: &Saturating<u64>) -> <Saturating<u64> as Add<Saturating<u64>>>::Output",
              "text": "Performs the + operation."
            }
          ]
        },
        {
          "title": "impl<'_> Add<&'_ Saturating<u64>> for Saturating<u64>",
          "methods": [
            {
              "code": "type Output = <Saturating<u64> as Add<Saturating<u64>>>::Output",
              "text": "The resulting type after applying the + operator."
            },
            {
              "code": "pub fn add( self, other: &Saturating<u64>) -> <Saturating<u64> as Add<Saturating<u64>>>::Output",
              "text": "Performs the + operation."
            }
          ]
        },
        {
          "title": "impl<'_> Add<&'_ Saturating<u8>> for Saturating<u8>",
          "methods": [
            {
              "code": "type Output = <Saturating<u8> as Add<Saturating<u8>>>::Output",
              "text": "The resulting type after applying the + operator."
            },
            {
              "code": "pub fn add( self, other: &Saturating<u8>) -> <Saturating<u8> as Add<Saturating<u8>>>::Output",
              "text": "Performs the + operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Add<&'_ Saturating<u8>> for &'_ Saturating<u8>",
          "methods": [
            {
              "code": "type Output = <Saturating<u8> as Add<Saturating<u8>>>::Output",
              "text": "The resulting type after applying the + operator."
            },
            {
              "code": "pub fn add( self, other: &Saturating<u8>) -> <Saturating<u8> as Add<Saturating<u8>>>::Output",
              "text": "Performs the + operation."
            }
          ]
        },
        {
          "title": "impl<'_> Add<&'_ Saturating<usize>> for Saturating<usize>",
          "methods": [
            {
              "code": "type Output = <Saturating<usize> as Add<Saturating<usize>>>::Output",
              "text": "The resulting type after applying the + operator."
            },
            {
              "code": "pub fn add( self, other: &Saturating<usize>) -> <Saturating<usize> as Add<Saturating<usize>>>::Output",
              "text": "Performs the + operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Add<&'_ Saturating<usize>> for &'_ Saturating<usize>",
          "methods": [
            {
              "code": "type Output = <Saturating<usize> as Add<Saturating<usize>>>::Output",
              "text": "The resulting type after applying the + operator."
            },
            {
              "code": "pub fn add( self, other: &Saturating<usize>) -> <Saturating<usize> as Add<Saturating<usize>>>::Output",
              "text": "Performs the + operation."
            }
          ]
        },
        {
          "title": "impl<'a> Add<Saturating<i128>> for &'a Saturating<i128>",
          "methods": [
            {
              "code": "type Output = <Saturating<i128> as Add<Saturating<i128>>>::Output",
              "text": "The resulting type after applying the + operator."
            },
            {
              "code": "pub fn add( self, other: Saturating<i128>) -> <Saturating<i128> as Add<Saturating<i128>>>::Output",
              "text": "Performs the + operation."
            }
          ]
        },
        {
          "title": "impl Add<Saturating<i128>> for Saturating<i128>",
          "methods": [
            {
              "code": "type Output = Saturating<i128>",
              "text": "The resulting type after applying the + operator."
            },
            {
              "code": "pub fn add(self, other: Saturating<i128>) -> Saturating<i128>",
              "text": "Performs the + operation."
            }
          ]
        },
        {
          "title": "impl Add<Saturating<i16>> for Saturating<i16>",
          "methods": [
            {
              "code": "type Output = Saturating<i16>",
              "text": "The resulting type after applying the + operator."
            },
            {
              "code": "pub fn add(self, other: Saturating<i16>) -> Saturating<i16>",
              "text": "Performs the + operation."
            }
          ]
        },
        {
          "title": "impl<'a> Add<Saturating<i16>> for &'a Saturating<i16>",
          "methods": [
            {
              "code": "type Output = <Saturating<i16> as Add<Saturating<i16>>>::Output",
              "text": "The resulting type after applying the + operator."
            },
            {
              "code": "pub fn add( self, other: Saturating<i16>) -> <Saturating<i16> as Add<Saturating<i16>>>::Output",
              "text": "Performs the + operation."
            }
          ]
        },
        {
          "title": "impl Add<Saturating<i32>> for Saturating<i32>",
          "methods": [
            {
              "code": "type Output = Saturating<i32>",
              "text": "The resulting type after applying the + operator."
            },
            {
              "code": "pub fn add(self, other: Saturating<i32>) -> Saturating<i32>",
              "text": "Performs the + operation."
            }
          ]
        },
        {
          "title": "impl<'a> Add<Saturating<i32>> for &'a Saturating<i32>",
          "methods": [
            {
              "code": "type Output = <Saturating<i32> as Add<Saturating<i32>>>::Output",
              "text": "The resulting type after applying the + operator."
            },
            {
              "code": "pub fn add( self, other: Saturating<i32>) -> <Saturating<i32> as Add<Saturating<i32>>>::Output",
              "text": "Performs the + operation."
            }
          ]
        },
        {
          "title": "impl<'a> Add<Saturating<i64>> for &'a Saturating<i64>",
          "methods": [
            {
              "code": "type Output = <Saturating<i64> as Add<Saturating<i64>>>::Output",
              "text": "The resulting type after applying the + operator."
            },
            {
              "code": "pub fn add( self, other: Saturating<i64>) -> <Saturating<i64> as Add<Saturating<i64>>>::Output",
              "text": "Performs the + operation."
            }
          ]
        },
        {
          "title": "impl Add<Saturating<i64>> for Saturating<i64>",
          "methods": [
            {
              "code": "type Output = Saturating<i64>",
              "text": "The resulting type after applying the + operator."
            },
            {
              "code": "pub fn add(self, other: Saturating<i64>) -> Saturating<i64>",
              "text": "Performs the + operation."
            }
          ]
        },
        {
          "title": "impl Add<Saturating<i8>> for Saturating<i8>",
          "methods": [
            {
              "code": "type Output = Saturating<i8>",
              "text": "The resulting type after applying the + operator."
            },
            {
              "code": "pub fn add(self, other: Saturating<i8>) -> Saturating<i8>",
              "text": "Performs the + operation."
            }
          ]
        },
        {
          "title": "impl<'a> Add<Saturating<i8>> for &'a Saturating<i8>",
          "methods": [
            {
              "code": "type Output = <Saturating<i8> as Add<Saturating<i8>>>::Output",
              "text": "The resulting type after applying the + operator."
            },
            {
              "code": "pub fn add( self, other: Saturating<i8>) -> <Saturating<i8> as Add<Saturating<i8>>>::Output",
              "text": "Performs the + operation."
            }
          ]
        },
        {
          "title": "impl Add<Saturating<isize>> for Saturating<isize>",
          "methods": [
            {
              "code": "type Output = Saturating<isize>",
              "text": "The resulting type after applying the + operator."
            },
            {
              "code": "pub fn add(self, other: Saturating<isize>) -> Saturating<isize>",
              "text": "Performs the + operation."
            }
          ]
        },
        {
          "title": "impl<'a> Add<Saturating<isize>> for &'a Saturating<isize>",
          "methods": [
            {
              "code": "type Output = <Saturating<isize> as Add<Saturating<isize>>>::Output",
              "text": "The resulting type after applying the + operator."
            },
            {
              "code": "pub fn add( self, other: Saturating<isize>) -> <Saturating<isize> as Add<Saturating<isize>>>::Output",
              "text": "Performs the + operation."
            }
          ]
        },
        {
          "title": "impl Add<Saturating<u128>> for Saturating<u128>",
          "methods": [
            {
              "code": "type Output = Saturating<u128>",
              "text": "The resulting type after applying the + operator."
            },
            {
              "code": "pub fn add(self, other: Saturating<u128>) -> Saturating<u128>",
              "text": "Performs the + operation."
            }
          ]
        },
        {
          "title": "impl<'a> Add<Saturating<u128>> for &'a Saturating<u128>",
          "methods": [
            {
              "code": "type Output = <Saturating<u128> as Add<Saturating<u128>>>::Output",
              "text": "The resulting type after applying the + operator."
            },
            {
              "code": "pub fn add( self, other: Saturating<u128>) -> <Saturating<u128> as Add<Saturating<u128>>>::Output",
              "text": "Performs the + operation."
            }
          ]
        },
        {
          "title": "impl<'a> Add<Saturating<u16>> for &'a Saturating<u16>",
          "methods": [
            {
              "code": "type Output = <Saturating<u16> as Add<Saturating<u16>>>::Output",
              "text": "The resulting type after applying the + operator."
            },
            {
              "code": "pub fn add( self, other: Saturating<u16>) -> <Saturating<u16> as Add<Saturating<u16>>>::Output",
              "text": "Performs the + operation."
            }
          ]
        },
        {
          "title": "impl Add<Saturating<u16>> for Saturating<u16>",
          "methods": [
            {
              "code": "type Output = Saturating<u16>",
              "text": "The resulting type after applying the + operator."
            },
            {
              "code": "pub fn add(self, other: Saturating<u16>) -> Saturating<u16>",
              "text": "Performs the + operation."
            }
          ]
        },
        {
          "title": "impl<'a> Add<Saturating<u32>> for &'a Saturating<u32>",
          "methods": [
            {
              "code": "type Output = <Saturating<u32> as Add<Saturating<u32>>>::Output",
              "text": "The resulting type after applying the + operator."
            },
            {
              "code": "pub fn add( self, other: Saturating<u32>) -> <Saturating<u32> as Add<Saturating<u32>>>::Output",
              "text": "Performs the + operation."
            }
          ]
        },
        {
          "title": "impl Add<Saturating<u32>> for Saturating<u32>",
          "methods": [
            {
              "code": "type Output = Saturating<u32>",
              "text": "The resulting type after applying the + operator."
            },
            {
              "code": "pub fn add(self, other: Saturating<u32>) -> Saturating<u32>",
              "text": "Performs the + operation."
            }
          ]
        },
        {
          "title": "impl Add<Saturating<u64>> for Saturating<u64>",
          "methods": [
            {
              "code": "type Output = Saturating<u64>",
              "text": "The resulting type after applying the + operator."
            },
            {
              "code": "pub fn add(self, other: Saturating<u64>) -> Saturating<u64>",
              "text": "Performs the + operation."
            }
          ]
        },
        {
          "title": "impl<'a> Add<Saturating<u64>> for &'a Saturating<u64>",
          "methods": [
            {
              "code": "type Output = <Saturating<u64> as Add<Saturating<u64>>>::Output",
              "text": "The resulting type after applying the + operator."
            },
            {
              "code": "pub fn add( self, other: Saturating<u64>) -> <Saturating<u64> as Add<Saturating<u64>>>::Output",
              "text": "Performs the + operation."
            }
          ]
        },
        {
          "title": "impl Add<Saturating<u8>> for Saturating<u8>",
          "methods": [
            {
              "code": "type Output = Saturating<u8>",
              "text": "The resulting type after applying the + operator."
            },
            {
              "code": "pub fn add(self, other: Saturating<u8>) -> Saturating<u8>",
              "text": "Performs the + operation."
            }
          ]
        },
        {
          "title": "impl<'a> Add<Saturating<u8>> for &'a Saturating<u8>",
          "methods": [
            {
              "code": "type Output = <Saturating<u8> as Add<Saturating<u8>>>::Output",
              "text": "The resulting type after applying the + operator."
            },
            {
              "code": "pub fn add( self, other: Saturating<u8>) -> <Saturating<u8> as Add<Saturating<u8>>>::Output",
              "text": "Performs the + operation."
            }
          ]
        },
        {
          "title": "impl<'a> Add<Saturating<usize>> for &'a Saturating<usize>",
          "methods": [
            {
              "code": "type Output = <Saturating<usize> as Add<Saturating<usize>>>::Output",
              "text": "The resulting type after applying the + operator."
            },
            {
              "code": "pub fn add( self, other: Saturating<usize>) -> <Saturating<usize> as Add<Saturating<usize>>>::Output",
              "text": "Performs the + operation."
            }
          ]
        },
        {
          "title": "impl Add<Saturating<usize>> for Saturating<usize>",
          "methods": [
            {
              "code": "type Output = Saturating<usize>",
              "text": "The resulting type after applying the + operator."
            },
            {
              "code": "pub fn add(self, other: Saturating<usize>) -> Saturating<usize>",
              "text": "Performs the + operation."
            }
          ]
        },
        {
          "title": "impl<'_> AddAssign<&'_ Saturating<i128>> for Saturating<i128>",
          "methods": [
            {
              "code": "pub fn add_assign(&mut self, other: &Saturating<i128>)",
              "text": "Performs the += operation."
            }
          ]
        },
        {
          "title": "impl<'_> AddAssign<&'_ Saturating<i16>> for Saturating<i16>",
          "methods": [
            {
              "code": "pub fn add_assign(&mut self, other: &Saturating<i16>)",
              "text": "Performs the += operation."
            }
          ]
        },
        {
          "title": "impl<'_> AddAssign<&'_ Saturating<i32>> for Saturating<i32>",
          "methods": [
            {
              "code": "pub fn add_assign(&mut self, other: &Saturating<i32>)",
              "text": "Performs the += operation."
            }
          ]
        },
        {
          "title": "impl<'_> AddAssign<&'_ Saturating<i64>> for Saturating<i64>",
          "methods": [
            {
              "code": "pub fn add_assign(&mut self, other: &Saturating<i64>)",
              "text": "Performs the += operation."
            }
          ]
        },
        {
          "title": "impl<'_> AddAssign<&'_ Saturating<i8>> for Saturating<i8>",
          "methods": [
            {
              "code": "pub fn add_assign(&mut self, other: &Saturating<i8>)",
              "text": "Performs the += operation."
            }
          ]
        },
        {
          "title": "impl<'_> AddAssign<&'_ Saturating<isize>> for Saturating<isize>",
          "methods": [
            {
              "code": "pub fn add_assign(&mut self, other: &Saturating<isize>)",
              "text": "Performs the += operation."
            }
          ]
        },
        {
          "title": "impl<'_> AddAssign<&'_ Saturating<u128>> for Saturating<u128>",
          "methods": [
            {
              "code": "pub fn add_assign(&mut self, other: &Saturating<u128>)",
              "text": "Performs the += operation."
            }
          ]
        },
        {
          "title": "impl<'_> AddAssign<&'_ Saturating<u16>> for Saturating<u16>",
          "methods": [
            {
              "code": "pub fn add_assign(&mut self, other: &Saturating<u16>)",
              "text": "Performs the += operation."
            }
          ]
        },
        {
          "title": "impl<'_> AddAssign<&'_ Saturating<u32>> for Saturating<u32>",
          "methods": [
            {
              "code": "pub fn add_assign(&mut self, other: &Saturating<u32>)",
              "text": "Performs the += operation."
            }
          ]
        },
        {
          "title": "impl<'_> AddAssign<&'_ Saturating<u64>> for Saturating<u64>",
          "methods": [
            {
              "code": "pub fn add_assign(&mut self, other: &Saturating<u64>)",
              "text": "Performs the += operation."
            }
          ]
        },
        {
          "title": "impl<'_> AddAssign<&'_ Saturating<u8>> for Saturating<u8>",
          "methods": [
            {
              "code": "pub fn add_assign(&mut self, other: &Saturating<u8>)",
              "text": "Performs the += operation."
            }
          ]
        },
        {
          "title": "impl<'_> AddAssign<&'_ Saturating<usize>> for Saturating<usize>",
          "methods": [
            {
              "code": "pub fn add_assign(&mut self, other: &Saturating<usize>)",
              "text": "Performs the += operation."
            }
          ]
        },
        {
          "title": "impl AddAssign<Saturating<i128>> for Saturating<i128>",
          "methods": [
            {
              "code": "pub fn add_assign(&mut self, other: Saturating<i128>)",
              "text": "Performs the += operation."
            }
          ]
        },
        {
          "title": "impl AddAssign<Saturating<i16>> for Saturating<i16>",
          "methods": [
            {
              "code": "pub fn add_assign(&mut self, other: Saturating<i16>)",
              "text": "Performs the += operation."
            }
          ]
        },
        {
          "title": "impl AddAssign<Saturating<i32>> for Saturating<i32>",
          "methods": [
            {
              "code": "pub fn add_assign(&mut self, other: Saturating<i32>)",
              "text": "Performs the += operation."
            }
          ]
        },
        {
          "title": "impl AddAssign<Saturating<i64>> for Saturating<i64>",
          "methods": [
            {
              "code": "pub fn add_assign(&mut self, other: Saturating<i64>)",
              "text": "Performs the += operation."
            }
          ]
        },
        {
          "title": "impl AddAssign<Saturating<i8>> for Saturating<i8>",
          "methods": [
            {
              "code": "pub fn add_assign(&mut self, other: Saturating<i8>)",
              "text": "Performs the += operation."
            }
          ]
        },
        {
          "title": "impl AddAssign<Saturating<isize>> for Saturating<isize>",
          "methods": [
            {
              "code": "pub fn add_assign(&mut self, other: Saturating<isize>)",
              "text": "Performs the += operation."
            }
          ]
        },
        {
          "title": "impl AddAssign<Saturating<u128>> for Saturating<u128>",
          "methods": [
            {
              "code": "pub fn add_assign(&mut self, other: Saturating<u128>)",
              "text": "Performs the += operation."
            }
          ]
        },
        {
          "title": "impl AddAssign<Saturating<u16>> for Saturating<u16>",
          "methods": [
            {
              "code": "pub fn add_assign(&mut self, other: Saturating<u16>)",
              "text": "Performs the += operation."
            }
          ]
        },
        {
          "title": "impl AddAssign<Saturating<u32>> for Saturating<u32>",
          "methods": [
            {
              "code": "pub fn add_assign(&mut self, other: Saturating<u32>)",
              "text": "Performs the += operation."
            }
          ]
        },
        {
          "title": "impl AddAssign<Saturating<u64>> for Saturating<u64>",
          "methods": [
            {
              "code": "pub fn add_assign(&mut self, other: Saturating<u64>)",
              "text": "Performs the += operation."
            }
          ]
        },
        {
          "title": "impl AddAssign<Saturating<u8>> for Saturating<u8>",
          "methods": [
            {
              "code": "pub fn add_assign(&mut self, other: Saturating<u8>)",
              "text": "Performs the += operation."
            }
          ]
        },
        {
          "title": "impl AddAssign<Saturating<usize>> for Saturating<usize>",
          "methods": [
            {
              "code": "pub fn add_assign(&mut self, other: Saturating<usize>)",
              "text": "Performs the += operation."
            }
          ]
        },
        {
          "title": "impl<T> Binary for Saturating<T> where T: Binary,",
          "methods": [
            {
              "code": "pub fn fmt(&self, f: &mut Formatter<'_>) -> Result<(), Error>",
              "text": "Formats the value using the given formatter."
            }
          ]
        },
        {
          "title": "impl<'_> BitAnd<&'_ Saturating<i128>> for Saturating<i128>",
          "methods": [
            {
              "code": "type Output = <Saturating<i128> as BitAnd<Saturating<i128>>>::Output",
              "text": "The resulting type after applying the & operator."
            },
            {
              "code": "pub fn bitand( self, other: &Saturating<i128>) -> <Saturating<i128> as BitAnd<Saturating<i128>>>::Output",
              "text": "Performs the & operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> BitAnd<&'_ Saturating<i128>> for &'_ Saturating<i128>",
          "methods": [
            {
              "code": "type Output = <Saturating<i128> as BitAnd<Saturating<i128>>>::Output",
              "text": "The resulting type after applying the & operator."
            },
            {
              "code": "pub fn bitand( self, other: &Saturating<i128>) -> <Saturating<i128> as BitAnd<Saturating<i128>>>::Output",
              "text": "Performs the & operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> BitAnd<&'_ Saturating<i16>> for &'_ Saturating<i16>",
          "methods": [
            {
              "code": "type Output = <Saturating<i16> as BitAnd<Saturating<i16>>>::Output",
              "text": "The resulting type after applying the & operator."
            },
            {
              "code": "pub fn bitand( self, other: &Saturating<i16>) -> <Saturating<i16> as BitAnd<Saturating<i16>>>::Output",
              "text": "Performs the & operation."
            }
          ]
        },
        {
          "title": "impl<'_> BitAnd<&'_ Saturating<i16>> for Saturating<i16>",
          "methods": [
            {
              "code": "type Output = <Saturating<i16> as BitAnd<Saturating<i16>>>::Output",
              "text": "The resulting type after applying the & operator."
            },
            {
              "code": "pub fn bitand( self, other: &Saturating<i16>) -> <Saturating<i16> as BitAnd<Saturating<i16>>>::Output",
              "text": "Performs the & operation."
            }
          ]
        },
        {
          "title": "impl<'_> BitAnd<&'_ Saturating<i32>> for Saturating<i32>",
          "methods": [
            {
              "code": "type Output = <Saturating<i32> as BitAnd<Saturating<i32>>>::Output",
              "text": "The resulting type after applying the & operator."
            },
            {
              "code": "pub fn bitand( self, other: &Saturating<i32>) -> <Saturating<i32> as BitAnd<Saturating<i32>>>::Output",
              "text": "Performs the & operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> BitAnd<&'_ Saturating<i32>> for &'_ Saturating<i32>",
          "methods": [
            {
              "code": "type Output = <Saturating<i32> as BitAnd<Saturating<i32>>>::Output",
              "text": "The resulting type after applying the & operator."
            },
            {
              "code": "pub fn bitand( self, other: &Saturating<i32>) -> <Saturating<i32> as BitAnd<Saturating<i32>>>::Output",
              "text": "Performs the & operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> BitAnd<&'_ Saturating<i64>> for &'_ Saturating<i64>",
          "methods": [
            {
              "code": "type Output = <Saturating<i64> as BitAnd<Saturating<i64>>>::Output",
              "text": "The resulting type after applying the & operator."
            },
            {
              "code": "pub fn bitand( self, other: &Saturating<i64>) -> <Saturating<i64> as BitAnd<Saturating<i64>>>::Output",
              "text": "Performs the & operation."
            }
          ]
        },
        {
          "title": "impl<'_> BitAnd<&'_ Saturating<i64>> for Saturating<i64>",
          "methods": [
            {
              "code": "type Output = <Saturating<i64> as BitAnd<Saturating<i64>>>::Output",
              "text": "The resulting type after applying the & operator."
            },
            {
              "code": "pub fn bitand( self, other: &Saturating<i64>) -> <Saturating<i64> as BitAnd<Saturating<i64>>>::Output",
              "text": "Performs the & operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> BitAnd<&'_ Saturating<i8>> for &'_ Saturating<i8>",
          "methods": [
            {
              "code": "type Output = <Saturating<i8> as BitAnd<Saturating<i8>>>::Output",
              "text": "The resulting type after applying the & operator."
            },
            {
              "code": "pub fn bitand( self, other: &Saturating<i8>) -> <Saturating<i8> as BitAnd<Saturating<i8>>>::Output",
              "text": "Performs the & operation."
            }
          ]
        },
        {
          "title": "impl<'_> BitAnd<&'_ Saturating<i8>> for Saturating<i8>",
          "methods": [
            {
              "code": "type Output = <Saturating<i8> as BitAnd<Saturating<i8>>>::Output",
              "text": "The resulting type after applying the & operator."
            },
            {
              "code": "pub fn bitand( self, other: &Saturating<i8>) -> <Saturating<i8> as BitAnd<Saturating<i8>>>::Output",
              "text": "Performs the & operation."
            }
          ]
        },
        {
          "title": "impl<'_> BitAnd<&'_ Saturating<isize>> for Saturating<isize>",
          "methods": [
            {
              "code": "type Output = <Saturating<isize> as BitAnd<Saturating<isize>>>::Output",
              "text": "The resulting type after applying the & operator."
            },
            {
              "code": "pub fn bitand( self, other: &Saturating<isize>) -> <Saturating<isize> as BitAnd<Saturating<isize>>>::Output",
              "text": "Performs the & operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> BitAnd<&'_ Saturating<isize>> for &'_ Saturating<isize>",
          "methods": [
            {
              "code": "type Output = <Saturating<isize> as BitAnd<Saturating<isize>>>::Output",
              "text": "The resulting type after applying the & operator."
            },
            {
              "code": "pub fn bitand( self, other: &Saturating<isize>) -> <Saturating<isize> as BitAnd<Saturating<isize>>>::Output",
              "text": "Performs the & operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> BitAnd<&'_ Saturating<u128>> for &'_ Saturating<u128>",
          "methods": [
            {
              "code": "type Output = <Saturating<u128> as BitAnd<Saturating<u128>>>::Output",
              "text": "The resulting type after applying the & operator."
            },
            {
              "code": "pub fn bitand( self, other: &Saturating<u128>) -> <Saturating<u128> as BitAnd<Saturating<u128>>>::Output",
              "text": "Performs the & operation."
            }
          ]
        },
        {
          "title": "impl<'_> BitAnd<&'_ Saturating<u128>> for Saturating<u128>",
          "methods": [
            {
              "code": "type Output = <Saturating<u128> as BitAnd<Saturating<u128>>>::Output",
              "text": "The resulting type after applying the & operator."
            },
            {
              "code": "pub fn bitand( self, other: &Saturating<u128>) -> <Saturating<u128> as BitAnd<Saturating<u128>>>::Output",
              "text": "Performs the & operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> BitAnd<&'_ Saturating<u16>> for &'_ Saturating<u16>",
          "methods": [
            {
              "code": "type Output = <Saturating<u16> as BitAnd<Saturating<u16>>>::Output",
              "text": "The resulting type after applying the & operator."
            },
            {
              "code": "pub fn bitand( self, other: &Saturating<u16>) -> <Saturating<u16> as BitAnd<Saturating<u16>>>::Output",
              "text": "Performs the & operation."
            }
          ]
        },
        {
          "title": "impl<'_> BitAnd<&'_ Saturating<u16>> for Saturating<u16>",
          "methods": [
            {
              "code": "type Output = <Saturating<u16> as BitAnd<Saturating<u16>>>::Output",
              "text": "The resulting type after applying the & operator."
            },
            {
              "code": "pub fn bitand( self, other: &Saturating<u16>) -> <Saturating<u16> as BitAnd<Saturating<u16>>>::Output",
              "text": "Performs the & operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> BitAnd<&'_ Saturating<u32>> for &'_ Saturating<u32>",
          "methods": [
            {
              "code": "type Output = <Saturating<u32> as BitAnd<Saturating<u32>>>::Output",
              "text": "The resulting type after applying the & operator."
            },
            {
              "code": "pub fn bitand( self, other: &Saturating<u32>) -> <Saturating<u32> as BitAnd<Saturating<u32>>>::Output",
              "text": "Performs the & operation."
            }
          ]
        },
        {
          "title": "impl<'_> BitAnd<&'_ Saturating<u32>> for Saturating<u32>",
          "methods": [
            {
              "code": "type Output = <Saturating<u32> as BitAnd<Saturating<u32>>>::Output",
              "text": "The resulting type after applying the & operator."
            },
            {
              "code": "pub fn bitand( self, other: &Saturating<u32>) -> <Saturating<u32> as BitAnd<Saturating<u32>>>::Output",
              "text": "Performs the & operation."
            }
          ]
        },
        {
          "title": "impl<'_> BitAnd<&'_ Saturating<u64>> for Saturating<u64>",
          "methods": [
            {
              "code": "type Output = <Saturating<u64> as BitAnd<Saturating<u64>>>::Output",
              "text": "The resulting type after applying the & operator."
            },
            {
              "code": "pub fn bitand( self, other: &Saturating<u64>) -> <Saturating<u64> as BitAnd<Saturating<u64>>>::Output",
              "text": "Performs the & operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> BitAnd<&'_ Saturating<u64>> for &'_ Saturating<u64>",
          "methods": [
            {
              "code": "type Output = <Saturating<u64> as BitAnd<Saturating<u64>>>::Output",
              "text": "The resulting type after applying the & operator."
            },
            {
              "code": "pub fn bitand( self, other: &Saturating<u64>) -> <Saturating<u64> as BitAnd<Saturating<u64>>>::Output",
              "text": "Performs the & operation."
            }
          ]
        },
        {
          "title": "impl<'_> BitAnd<&'_ Saturating<u8>> for Saturating<u8>",
          "methods": [
            {
              "code": "type Output = <Saturating<u8> as BitAnd<Saturating<u8>>>::Output",
              "text": "The resulting type after applying the & operator."
            },
            {
              "code": "pub fn bitand( self, other: &Saturating<u8>) -> <Saturating<u8> as BitAnd<Saturating<u8>>>::Output",
              "text": "Performs the & operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> BitAnd<&'_ Saturating<u8>> for &'_ Saturating<u8>",
          "methods": [
            {
              "code": "type Output = <Saturating<u8> as BitAnd<Saturating<u8>>>::Output",
              "text": "The resulting type after applying the & operator."
            },
            {
              "code": "pub fn bitand( self, other: &Saturating<u8>) -> <Saturating<u8> as BitAnd<Saturating<u8>>>::Output",
              "text": "Performs the & operation."
            }
          ]
        },
        {
          "title": "impl<'_> BitAnd<&'_ Saturating<usize>> for Saturating<usize>",
          "methods": [
            {
              "code": "type Output = <Saturating<usize> as BitAnd<Saturating<usize>>>::Output",
              "text": "The resulting type after applying the & operator."
            },
            {
              "code": "pub fn bitand( self, other: &Saturating<usize>) -> <Saturating<usize> as BitAnd<Saturating<usize>>>::Output",
              "text": "Performs the & operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> BitAnd<&'_ Saturating<usize>> for &'_ Saturating<usize>",
          "methods": [
            {
              "code": "type Output = <Saturating<usize> as BitAnd<Saturating<usize>>>::Output",
              "text": "The resulting type after applying the & operator."
            },
            {
              "code": "pub fn bitand( self, other: &Saturating<usize>) -> <Saturating<usize> as BitAnd<Saturating<usize>>>::Output",
              "text": "Performs the & operation."
            }
          ]
        },
        {
          "title": "impl<'a> BitAnd<Saturating<i128>> for &'a Saturating<i128>",
          "methods": [
            {
              "code": "type Output = <Saturating<i128> as BitAnd<Saturating<i128>>>::Output",
              "text": "The resulting type after applying the & operator."
            },
            {
              "code": "pub fn bitand( self, other: Saturating<i128>) -> <Saturating<i128> as BitAnd<Saturating<i128>>>::Output",
              "text": "Performs the & operation."
            }
          ]
        },
        {
          "title": "impl BitAnd<Saturating<i128>> for Saturating<i128>",
          "methods": [
            {
              "code": "type Output = Saturating<i128>",
              "text": "The resulting type after applying the & operator."
            },
            {
              "code": "pub fn bitand(self, other: Saturating<i128>) -> Saturating<i128>",
              "text": "Performs the & operation."
            }
          ]
        },
        {
          "title": "impl BitAnd<Saturating<i16>> for Saturating<i16>",
          "methods": [
            {
              "code": "type Output = Saturating<i16>",
              "text": "The resulting type after applying the & operator."
            },
            {
              "code": "pub fn bitand(self, other: Saturating<i16>) -> Saturating<i16>",
              "text": "Performs the & operation."
            }
          ]
        },
        {
          "title": "impl<'a> BitAnd<Saturating<i16>> for &'a Saturating<i16>",
          "methods": [
            {
              "code": "type Output = <Saturating<i16> as BitAnd<Saturating<i16>>>::Output",
              "text": "The resulting type after applying the & operator."
            },
            {
              "code": "pub fn bitand( self, other: Saturating<i16>) -> <Saturating<i16> as BitAnd<Saturating<i16>>>::Output",
              "text": "Performs the & operation."
            }
          ]
        },
        {
          "title": "impl<'a> BitAnd<Saturating<i32>> for &'a Saturating<i32>",
          "methods": [
            {
              "code": "type Output = <Saturating<i32> as BitAnd<Saturating<i32>>>::Output",
              "text": "The resulting type after applying the & operator."
            },
            {
              "code": "pub fn bitand( self, other: Saturating<i32>) -> <Saturating<i32> as BitAnd<Saturating<i32>>>::Output",
              "text": "Performs the & operation."
            }
          ]
        },
        {
          "title": "impl BitAnd<Saturating<i32>> for Saturating<i32>",
          "methods": [
            {
              "code": "type Output = Saturating<i32>",
              "text": "The resulting type after applying the & operator."
            },
            {
              "code": "pub fn bitand(self, other: Saturating<i32>) -> Saturating<i32>",
              "text": "Performs the & operation."
            }
          ]
        },
        {
          "title": "impl<'a> BitAnd<Saturating<i64>> for &'a Saturating<i64>",
          "methods": [
            {
              "code": "type Output = <Saturating<i64> as BitAnd<Saturating<i64>>>::Output",
              "text": "The resulting type after applying the & operator."
            },
            {
              "code": "pub fn bitand( self, other: Saturating<i64>) -> <Saturating<i64> as BitAnd<Saturating<i64>>>::Output",
              "text": "Performs the & operation."
            }
          ]
        },
        {
          "title": "impl BitAnd<Saturating<i64>> for Saturating<i64>",
          "methods": [
            {
              "code": "type Output = Saturating<i64>",
              "text": "The resulting type after applying the & operator."
            },
            {
              "code": "pub fn bitand(self, other: Saturating<i64>) -> Saturating<i64>",
              "text": "Performs the & operation."
            }
          ]
        },
        {
          "title": "impl BitAnd<Saturating<i8>> for Saturating<i8>",
          "methods": [
            {
              "code": "type Output = Saturating<i8>",
              "text": "The resulting type after applying the & operator."
            },
            {
              "code": "pub fn bitand(self, other: Saturating<i8>) -> Saturating<i8>",
              "text": "Performs the & operation."
            }
          ]
        },
        {
          "title": "impl<'a> BitAnd<Saturating<i8>> for &'a Saturating<i8>",
          "methods": [
            {
              "code": "type Output = <Saturating<i8> as BitAnd<Saturating<i8>>>::Output",
              "text": "The resulting type after applying the & operator."
            },
            {
              "code": "pub fn bitand( self, other: Saturating<i8>) -> <Saturating<i8> as BitAnd<Saturating<i8>>>::Output",
              "text": "Performs the & operation."
            }
          ]
        },
        {
          "title": "impl<'a> BitAnd<Saturating<isize>> for &'a Saturating<isize>",
          "methods": [
            {
              "code": "type Output = <Saturating<isize> as BitAnd<Saturating<isize>>>::Output",
              "text": "The resulting type after applying the & operator."
            },
            {
              "code": "pub fn bitand( self, other: Saturating<isize>) -> <Saturating<isize> as BitAnd<Saturating<isize>>>::Output",
              "text": "Performs the & operation."
            }
          ]
        },
        {
          "title": "impl BitAnd<Saturating<isize>> for Saturating<isize>",
          "methods": [
            {
              "code": "type Output = Saturating<isize>",
              "text": "The resulting type after applying the & operator."
            },
            {
              "code": "pub fn bitand(self, other: Saturating<isize>) -> Saturating<isize>",
              "text": "Performs the & operation."
            }
          ]
        },
        {
          "title": "impl BitAnd<Saturating<u128>> for Saturating<u128>",
          "methods": [
            {
              "code": "type Output = Saturating<u128>",
              "text": "The resulting type after applying the & operator."
            },
            {
              "code": "pub fn bitand(self, other: Saturating<u128>) -> Saturating<u128>",
              "text": "Performs the & operation."
            }
          ]
        },
        {
          "title": "impl<'a> BitAnd<Saturating<u128>> for &'a Saturating<u128>",
          "methods": [
            {
              "code": "type Output = <Saturating<u128> as BitAnd<Saturating<u128>>>::Output",
              "text": "The resulting type after applying the & operator."
            },
            {
              "code": "pub fn bitand( self, other: Saturating<u128>) -> <Saturating<u128> as BitAnd<Saturating<u128>>>::Output",
              "text": "Performs the & operation."
            }
          ]
        },
        {
          "title": "impl<'a> BitAnd<Saturating<u16>> for &'a Saturating<u16>",
          "methods": [
            {
              "code": "type Output = <Saturating<u16> as BitAnd<Saturating<u16>>>::Output",
              "text": "The resulting type after applying the & operator."
            },
            {
              "code": "pub fn bitand( self, other: Saturating<u16>) -> <Saturating<u16> as BitAnd<Saturating<u16>>>::Output",
              "text": "Performs the & operation."
            }
          ]
        },
        {
          "title": "impl BitAnd<Saturating<u16>> for Saturating<u16>",
          "methods": [
            {
              "code": "type Output = Saturating<u16>",
              "text": "The resulting type after applying the & operator."
            },
            {
              "code": "pub fn bitand(self, other: Saturating<u16>) -> Saturating<u16>",
              "text": "Performs the & operation."
            }
          ]
        },
        {
          "title": "impl BitAnd<Saturating<u32>> for Saturating<u32>",
          "methods": [
            {
              "code": "type Output = Saturating<u32>",
              "text": "The resulting type after applying the & operator."
            },
            {
              "code": "pub fn bitand(self, other: Saturating<u32>) -> Saturating<u32>",
              "text": "Performs the & operation."
            }
          ]
        },
        {
          "title": "impl<'a> BitAnd<Saturating<u32>> for &'a Saturating<u32>",
          "methods": [
            {
              "code": "type Output = <Saturating<u32> as BitAnd<Saturating<u32>>>::Output",
              "text": "The resulting type after applying the & operator."
            },
            {
              "code": "pub fn bitand( self, other: Saturating<u32>) -> <Saturating<u32> as BitAnd<Saturating<u32>>>::Output",
              "text": "Performs the & operation."
            }
          ]
        },
        {
          "title": "impl<'a> BitAnd<Saturating<u64>> for &'a Saturating<u64>",
          "methods": [
            {
              "code": "type Output = <Saturating<u64> as BitAnd<Saturating<u64>>>::Output",
              "text": "The resulting type after applying the & operator."
            },
            {
              "code": "pub fn bitand( self, other: Saturating<u64>) -> <Saturating<u64> as BitAnd<Saturating<u64>>>::Output",
              "text": "Performs the & operation."
            }
          ]
        },
        {
          "title": "impl BitAnd<Saturating<u64>> for Saturating<u64>",
          "methods": [
            {
              "code": "type Output = Saturating<u64>",
              "text": "The resulting type after applying the & operator."
            },
            {
              "code": "pub fn bitand(self, other: Saturating<u64>) -> Saturating<u64>",
              "text": "Performs the & operation."
            }
          ]
        },
        {
          "title": "impl<'a> BitAnd<Saturating<u8>> for &'a Saturating<u8>",
          "methods": [
            {
              "code": "type Output = <Saturating<u8> as BitAnd<Saturating<u8>>>::Output",
              "text": "The resulting type after applying the & operator."
            },
            {
              "code": "pub fn bitand( self, other: Saturating<u8>) -> <Saturating<u8> as BitAnd<Saturating<u8>>>::Output",
              "text": "Performs the & operation."
            }
          ]
        },
        {
          "title": "impl BitAnd<Saturating<u8>> for Saturating<u8>",
          "methods": [
            {
              "code": "type Output = Saturating<u8>",
              "text": "The resulting type after applying the & operator."
            },
            {
              "code": "pub fn bitand(self, other: Saturating<u8>) -> Saturating<u8>",
              "text": "Performs the & operation."
            }
          ]
        },
        {
          "title": "impl<'a> BitAnd<Saturating<usize>> for &'a Saturating<usize>",
          "methods": [
            {
              "code": "type Output = <Saturating<usize> as BitAnd<Saturating<usize>>>::Output",
              "text": "The resulting type after applying the & operator."
            },
            {
              "code": "pub fn bitand( self, other: Saturating<usize>) -> <Saturating<usize> as BitAnd<Saturating<usize>>>::Output",
              "text": "Performs the & operation."
            }
          ]
        },
        {
          "title": "impl BitAnd<Saturating<usize>> for Saturating<usize>",
          "methods": [
            {
              "code": "type Output = Saturating<usize>",
              "text": "The resulting type after applying the & operator."
            },
            {
              "code": "pub fn bitand(self, other: Saturating<usize>) -> Saturating<usize>",
              "text": "Performs the & operation."
            }
          ]
        },
        {
          "title": "impl<'_> BitAndAssign<&'_ Saturating<i128>> for Saturating<i128>",
          "methods": [
            {
              "code": "pub fn bitand_assign(&mut self, other: &Saturating<i128>)",
              "text": "Performs the &= operation."
            }
          ]
        },
        {
          "title": "impl<'_> BitAndAssign<&'_ Saturating<i16>> for Saturating<i16>",
          "methods": [
            {
              "code": "pub fn bitand_assign(&mut self, other: &Saturating<i16>)",
              "text": "Performs the &= operation."
            }
          ]
        },
        {
          "title": "impl<'_> BitAndAssign<&'_ Saturating<i32>> for Saturating<i32>",
          "methods": [
            {
              "code": "pub fn bitand_assign(&mut self, other: &Saturating<i32>)",
              "text": "Performs the &= operation."
            }
          ]
        },
        {
          "title": "impl<'_> BitAndAssign<&'_ Saturating<i64>> for Saturating<i64>",
          "methods": [
            {
              "code": "pub fn bitand_assign(&mut self, other: &Saturating<i64>)",
              "text": "Performs the &= operation."
            }
          ]
        },
        {
          "title": "impl<'_> BitAndAssign<&'_ Saturating<i8>> for Saturating<i8>",
          "methods": [
            {
              "code": "pub fn bitand_assign(&mut self, other: &Saturating<i8>)",
              "text": "Performs the &= operation."
            }
          ]
        },
        {
          "title": "impl<'_> BitAndAssign<&'_ Saturating<isize>> for Saturating<isize>",
          "methods": [
            {
              "code": "pub fn bitand_assign(&mut self, other: &Saturating<isize>)",
              "text": "Performs the &= operation."
            }
          ]
        },
        {
          "title": "impl<'_> BitAndAssign<&'_ Saturating<u128>> for Saturating<u128>",
          "methods": [
            {
              "code": "pub fn bitand_assign(&mut self, other: &Saturating<u128>)",
              "text": "Performs the &= operation."
            }
          ]
        },
        {
          "title": "impl<'_> BitAndAssign<&'_ Saturating<u16>> for Saturating<u16>",
          "methods": [
            {
              "code": "pub fn bitand_assign(&mut self, other: &Saturating<u16>)",
              "text": "Performs the &= operation."
            }
          ]
        },
        {
          "title": "impl<'_> BitAndAssign<&'_ Saturating<u32>> for Saturating<u32>",
          "methods": [
            {
              "code": "pub fn bitand_assign(&mut self, other: &Saturating<u32>)",
              "text": "Performs the &= operation."
            }
          ]
        },
        {
          "title": "impl<'_> BitAndAssign<&'_ Saturating<u64>> for Saturating<u64>",
          "methods": [
            {
              "code": "pub fn bitand_assign(&mut self, other: &Saturating<u64>)",
              "text": "Performs the &= operation."
            }
          ]
        },
        {
          "title": "impl<'_> BitAndAssign<&'_ Saturating<u8>> for Saturating<u8>",
          "methods": [
            {
              "code": "pub fn bitand_assign(&mut self, other: &Saturating<u8>)",
              "text": "Performs the &= operation."
            }
          ]
        },
        {
          "title": "impl<'_> BitAndAssign<&'_ Saturating<usize>> for Saturating<usize>",
          "methods": [
            {
              "code": "pub fn bitand_assign(&mut self, other: &Saturating<usize>)",
              "text": "Performs the &= operation."
            }
          ]
        },
        {
          "title": "impl BitAndAssign<Saturating<i128>> for Saturating<i128>",
          "methods": [
            {
              "code": "pub fn bitand_assign(&mut self, other: Saturating<i128>)",
              "text": "Performs the &= operation."
            }
          ]
        },
        {
          "title": "impl BitAndAssign<Saturating<i16>> for Saturating<i16>",
          "methods": [
            {
              "code": "pub fn bitand_assign(&mut self, other: Saturating<i16>)",
              "text": "Performs the &= operation."
            }
          ]
        },
        {
          "title": "impl BitAndAssign<Saturating<i32>> for Saturating<i32>",
          "methods": [
            {
              "code": "pub fn bitand_assign(&mut self, other: Saturating<i32>)",
              "text": "Performs the &= operation."
            }
          ]
        },
        {
          "title": "impl BitAndAssign<Saturating<i64>> for Saturating<i64>",
          "methods": [
            {
              "code": "pub fn bitand_assign(&mut self, other: Saturating<i64>)",
              "text": "Performs the &= operation."
            }
          ]
        },
        {
          "title": "impl BitAndAssign<Saturating<i8>> for Saturating<i8>",
          "methods": [
            {
              "code": "pub fn bitand_assign(&mut self, other: Saturating<i8>)",
              "text": "Performs the &= operation."
            }
          ]
        },
        {
          "title": "impl BitAndAssign<Saturating<isize>> for Saturating<isize>",
          "methods": [
            {
              "code": "pub fn bitand_assign(&mut self, other: Saturating<isize>)",
              "text": "Performs the &= operation."
            }
          ]
        },
        {
          "title": "impl BitAndAssign<Saturating<u128>> for Saturating<u128>",
          "methods": [
            {
              "code": "pub fn bitand_assign(&mut self, other: Saturating<u128>)",
              "text": "Performs the &= operation."
            }
          ]
        },
        {
          "title": "impl BitAndAssign<Saturating<u16>> for Saturating<u16>",
          "methods": [
            {
              "code": "pub fn bitand_assign(&mut self, other: Saturating<u16>)",
              "text": "Performs the &= operation."
            }
          ]
        },
        {
          "title": "impl BitAndAssign<Saturating<u32>> for Saturating<u32>",
          "methods": [
            {
              "code": "pub fn bitand_assign(&mut self, other: Saturating<u32>)",
              "text": "Performs the &= operation."
            }
          ]
        },
        {
          "title": "impl BitAndAssign<Saturating<u64>> for Saturating<u64>",
          "methods": [
            {
              "code": "pub fn bitand_assign(&mut self, other: Saturating<u64>)",
              "text": "Performs the &= operation."
            }
          ]
        },
        {
          "title": "impl BitAndAssign<Saturating<u8>> for Saturating<u8>",
          "methods": [
            {
              "code": "pub fn bitand_assign(&mut self, other: Saturating<u8>)",
              "text": "Performs the &= operation."
            }
          ]
        },
        {
          "title": "impl BitAndAssign<Saturating<usize>> for Saturating<usize>",
          "methods": [
            {
              "code": "pub fn bitand_assign(&mut self, other: Saturating<usize>)",
              "text": "Performs the &= operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> BitOr<&'_ Saturating<i128>> for &'_ Saturating<i128>",
          "methods": [
            {
              "code": "type Output = <Saturating<i128> as BitOr<Saturating<i128>>>::Output",
              "text": "The resulting type after applying the | operator."
            },
            {
              "code": "pub fn bitor( self, other: &Saturating<i128>) -> <Saturating<i128> as BitOr<Saturating<i128>>>::Output",
              "text": "Performs the | operation."
            }
          ]
        },
        {
          "title": "impl<'_> BitOr<&'_ Saturating<i128>> for Saturating<i128>",
          "methods": [
            {
              "code": "type Output = <Saturating<i128> as BitOr<Saturating<i128>>>::Output",
              "text": "The resulting type after applying the | operator."
            },
            {
              "code": "pub fn bitor( self, other: &Saturating<i128>) -> <Saturating<i128> as BitOr<Saturating<i128>>>::Output",
              "text": "Performs the | operation."
            }
          ]
        },
        {
          "title": "impl<'_> BitOr<&'_ Saturating<i16>> for Saturating<i16>",
          "methods": [
            {
              "code": "type Output = <Saturating<i16> as BitOr<Saturating<i16>>>::Output",
              "text": "The resulting type after applying the | operator."
            },
            {
              "code": "pub fn bitor( self, other: &Saturating<i16>) -> <Saturating<i16> as BitOr<Saturating<i16>>>::Output",
              "text": "Performs the | operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> BitOr<&'_ Saturating<i16>> for &'_ Saturating<i16>",
          "methods": [
            {
              "code": "type Output = <Saturating<i16> as BitOr<Saturating<i16>>>::Output",
              "text": "The resulting type after applying the | operator."
            },
            {
              "code": "pub fn bitor( self, other: &Saturating<i16>) -> <Saturating<i16> as BitOr<Saturating<i16>>>::Output",
              "text": "Performs the | operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> BitOr<&'_ Saturating<i32>> for &'_ Saturating<i32>",
          "methods": [
            {
              "code": "type Output = <Saturating<i32> as BitOr<Saturating<i32>>>::Output",
              "text": "The resulting type after applying the | operator."
            },
            {
              "code": "pub fn bitor( self, other: &Saturating<i32>) -> <Saturating<i32> as BitOr<Saturating<i32>>>::Output",
              "text": "Performs the | operation."
            }
          ]
        },
        {
          "title": "impl<'_> BitOr<&'_ Saturating<i32>> for Saturating<i32>",
          "methods": [
            {
              "code": "type Output = <Saturating<i32> as BitOr<Saturating<i32>>>::Output",
              "text": "The resulting type after applying the | operator."
            },
            {
              "code": "pub fn bitor( self, other: &Saturating<i32>) -> <Saturating<i32> as BitOr<Saturating<i32>>>::Output",
              "text": "Performs the | operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> BitOr<&'_ Saturating<i64>> for &'_ Saturating<i64>",
          "methods": [
            {
              "code": "type Output = <Saturating<i64> as BitOr<Saturating<i64>>>::Output",
              "text": "The resulting type after applying the | operator."
            },
            {
              "code": "pub fn bitor( self, other: &Saturating<i64>) -> <Saturating<i64> as BitOr<Saturating<i64>>>::Output",
              "text": "Performs the | operation."
            }
          ]
        },
        {
          "title": "impl<'_> BitOr<&'_ Saturating<i64>> for Saturating<i64>",
          "methods": [
            {
              "code": "type Output = <Saturating<i64> as BitOr<Saturating<i64>>>::Output",
              "text": "The resulting type after applying the | operator."
            },
            {
              "code": "pub fn bitor( self, other: &Saturating<i64>) -> <Saturating<i64> as BitOr<Saturating<i64>>>::Output",
              "text": "Performs the | operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> BitOr<&'_ Saturating<i8>> for &'_ Saturating<i8>",
          "methods": [
            {
              "code": "type Output = <Saturating<i8> as BitOr<Saturating<i8>>>::Output",
              "text": "The resulting type after applying the | operator."
            },
            {
              "code": "pub fn bitor( self, other: &Saturating<i8>) -> <Saturating<i8> as BitOr<Saturating<i8>>>::Output",
              "text": "Performs the | operation."
            }
          ]
        },
        {
          "title": "impl<'_> BitOr<&'_ Saturating<i8>> for Saturating<i8>",
          "methods": [
            {
              "code": "type Output = <Saturating<i8> as BitOr<Saturating<i8>>>::Output",
              "text": "The resulting type after applying the | operator."
            },
            {
              "code": "pub fn bitor( self, other: &Saturating<i8>) -> <Saturating<i8> as BitOr<Saturating<i8>>>::Output",
              "text": "Performs the | operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> BitOr<&'_ Saturating<isize>> for &'_ Saturating<isize>",
          "methods": [
            {
              "code": "type Output = <Saturating<isize> as BitOr<Saturating<isize>>>::Output",
              "text": "The resulting type after applying the | operator."
            },
            {
              "code": "pub fn bitor( self, other: &Saturating<isize>) -> <Saturating<isize> as BitOr<Saturating<isize>>>::Output",
              "text": "Performs the | operation."
            }
          ]
        },
        {
          "title": "impl<'_> BitOr<&'_ Saturating<isize>> for Saturating<isize>",
          "methods": [
            {
              "code": "type Output = <Saturating<isize> as BitOr<Saturating<isize>>>::Output",
              "text": "The resulting type after applying the | operator."
            },
            {
              "code": "pub fn bitor( self, other: &Saturating<isize>) -> <Saturating<isize> as BitOr<Saturating<isize>>>::Output",
              "text": "Performs the | operation."
            }
          ]
        },
        {
          "title": "impl<'_> BitOr<&'_ Saturating<u128>> for Saturating<u128>",
          "methods": [
            {
              "code": "type Output = <Saturating<u128> as BitOr<Saturating<u128>>>::Output",
              "text": "The resulting type after applying the | operator."
            },
            {
              "code": "pub fn bitor( self, other: &Saturating<u128>) -> <Saturating<u128> as BitOr<Saturating<u128>>>::Output",
              "text": "Performs the | operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> BitOr<&'_ Saturating<u128>> for &'_ Saturating<u128>",
          "methods": [
            {
              "code": "type Output = <Saturating<u128> as BitOr<Saturating<u128>>>::Output",
              "text": "The resulting type after applying the | operator."
            },
            {
              "code": "pub fn bitor( self, other: &Saturating<u128>) -> <Saturating<u128> as BitOr<Saturating<u128>>>::Output",
              "text": "Performs the | operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> BitOr<&'_ Saturating<u16>> for &'_ Saturating<u16>",
          "methods": [
            {
              "code": "type Output = <Saturating<u16> as BitOr<Saturating<u16>>>::Output",
              "text": "The resulting type after applying the | operator."
            },
            {
              "code": "pub fn bitor( self, other: &Saturating<u16>) -> <Saturating<u16> as BitOr<Saturating<u16>>>::Output",
              "text": "Performs the | operation."
            }
          ]
        },
        {
          "title": "impl<'_> BitOr<&'_ Saturating<u16>> for Saturating<u16>",
          "methods": [
            {
              "code": "type Output = <Saturating<u16> as BitOr<Saturating<u16>>>::Output",
              "text": "The resulting type after applying the | operator."
            },
            {
              "code": "pub fn bitor( self, other: &Saturating<u16>) -> <Saturating<u16> as BitOr<Saturating<u16>>>::Output",
              "text": "Performs the | operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> BitOr<&'_ Saturating<u32>> for &'_ Saturating<u32>",
          "methods": [
            {
              "code": "type Output = <Saturating<u32> as BitOr<Saturating<u32>>>::Output",
              "text": "The resulting type after applying the | operator."
            },
            {
              "code": "pub fn bitor( self, other: &Saturating<u32>) -> <Saturating<u32> as BitOr<Saturating<u32>>>::Output",
              "text": "Performs the | operation."
            }
          ]
        },
        {
          "title": "impl<'_> BitOr<&'_ Saturating<u32>> for Saturating<u32>",
          "methods": [
            {
              "code": "type Output = <Saturating<u32> as BitOr<Saturating<u32>>>::Output",
              "text": "The resulting type after applying the | operator."
            },
            {
              "code": "pub fn bitor( self, other: &Saturating<u32>) -> <Saturating<u32> as BitOr<Saturating<u32>>>::Output",
              "text": "Performs the | operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> BitOr<&'_ Saturating<u64>> for &'_ Saturating<u64>",
          "methods": [
            {
              "code": "type Output = <Saturating<u64> as BitOr<Saturating<u64>>>::Output",
              "text": "The resulting type after applying the | operator."
            },
            {
              "code": "pub fn bitor( self, other: &Saturating<u64>) -> <Saturating<u64> as BitOr<Saturating<u64>>>::Output",
              "text": "Performs the | operation."
            }
          ]
        },
        {
          "title": "impl<'_> BitOr<&'_ Saturating<u64>> for Saturating<u64>",
          "methods": [
            {
              "code": "type Output = <Saturating<u64> as BitOr<Saturating<u64>>>::Output",
              "text": "The resulting type after applying the | operator."
            },
            {
              "code": "pub fn bitor( self, other: &Saturating<u64>) -> <Saturating<u64> as BitOr<Saturating<u64>>>::Output",
              "text": "Performs the | operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> BitOr<&'_ Saturating<u8>> for &'_ Saturating<u8>",
          "methods": [
            {
              "code": "type Output = <Saturating<u8> as BitOr<Saturating<u8>>>::Output",
              "text": "The resulting type after applying the | operator."
            },
            {
              "code": "pub fn bitor( self, other: &Saturating<u8>) -> <Saturating<u8> as BitOr<Saturating<u8>>>::Output",
              "text": "Performs the | operation."
            }
          ]
        },
        {
          "title": "impl<'_> BitOr<&'_ Saturating<u8>> for Saturating<u8>",
          "methods": [
            {
              "code": "type Output = <Saturating<u8> as BitOr<Saturating<u8>>>::Output",
              "text": "The resulting type after applying the | operator."
            },
            {
              "code": "pub fn bitor( self, other: &Saturating<u8>) -> <Saturating<u8> as BitOr<Saturating<u8>>>::Output",
              "text": "Performs the | operation."
            }
          ]
        },
        {
          "title": "impl<'_> BitOr<&'_ Saturating<usize>> for Saturating<usize>",
          "methods": [
            {
              "code": "type Output = <Saturating<usize> as BitOr<Saturating<usize>>>::Output",
              "text": "The resulting type after applying the | operator."
            },
            {
              "code": "pub fn bitor( self, other: &Saturating<usize>) -> <Saturating<usize> as BitOr<Saturating<usize>>>::Output",
              "text": "Performs the | operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> BitOr<&'_ Saturating<usize>> for &'_ Saturating<usize>",
          "methods": [
            {
              "code": "type Output = <Saturating<usize> as BitOr<Saturating<usize>>>::Output",
              "text": "The resulting type after applying the | operator."
            },
            {
              "code": "pub fn bitor( self, other: &Saturating<usize>) -> <Saturating<usize> as BitOr<Saturating<usize>>>::Output",
              "text": "Performs the | operation."
            }
          ]
        },
        {
          "title": "impl<'a> BitOr<Saturating<i128>> for &'a Saturating<i128>",
          "methods": [
            {
              "code": "type Output = <Saturating<i128> as BitOr<Saturating<i128>>>::Output",
              "text": "The resulting type after applying the | operator."
            },
            {
              "code": "pub fn bitor( self, other: Saturating<i128>) -> <Saturating<i128> as BitOr<Saturating<i128>>>::Output",
              "text": "Performs the | operation."
            }
          ]
        },
        {
          "title": "impl BitOr<Saturating<i128>> for Saturating<i128>",
          "methods": [
            {
              "code": "type Output = Saturating<i128>",
              "text": "The resulting type after applying the | operator."
            },
            {
              "code": "pub fn bitor(self, other: Saturating<i128>) -> Saturating<i128>",
              "text": "Performs the | operation."
            }
          ]
        },
        {
          "title": "impl BitOr<Saturating<i16>> for Saturating<i16>",
          "methods": [
            {
              "code": "type Output = Saturating<i16>",
              "text": "The resulting type after applying the | operator."
            },
            {
              "code": "pub fn bitor(self, other: Saturating<i16>) -> Saturating<i16>",
              "text": "Performs the | operation."
            }
          ]
        },
        {
          "title": "impl<'a> BitOr<Saturating<i16>> for &'a Saturating<i16>",
          "methods": [
            {
              "code": "type Output = <Saturating<i16> as BitOr<Saturating<i16>>>::Output",
              "text": "The resulting type after applying the | operator."
            },
            {
              "code": "pub fn bitor( self, other: Saturating<i16>) -> <Saturating<i16> as BitOr<Saturating<i16>>>::Output",
              "text": "Performs the | operation."
            }
          ]
        },
        {
          "title": "impl BitOr<Saturating<i32>> for Saturating<i32>",
          "methods": [
            {
              "code": "type Output = Saturating<i32>",
              "text": "The resulting type after applying the | operator."
            },
            {
              "code": "pub fn bitor(self, other: Saturating<i32>) -> Saturating<i32>",
              "text": "Performs the | operation."
            }
          ]
        },
        {
          "title": "impl<'a> BitOr<Saturating<i32>> for &'a Saturating<i32>",
          "methods": [
            {
              "code": "type Output = <Saturating<i32> as BitOr<Saturating<i32>>>::Output",
              "text": "The resulting type after applying the | operator."
            },
            {
              "code": "pub fn bitor( self, other: Saturating<i32>) -> <Saturating<i32> as BitOr<Saturating<i32>>>::Output",
              "text": "Performs the | operation."
            }
          ]
        },
        {
          "title": "impl<'a> BitOr<Saturating<i64>> for &'a Saturating<i64>",
          "methods": [
            {
              "code": "type Output = <Saturating<i64> as BitOr<Saturating<i64>>>::Output",
              "text": "The resulting type after applying the | operator."
            },
            {
              "code": "pub fn bitor( self, other: Saturating<i64>) -> <Saturating<i64> as BitOr<Saturating<i64>>>::Output",
              "text": "Performs the | operation."
            }
          ]
        },
        {
          "title": "impl BitOr<Saturating<i64>> for Saturating<i64>",
          "methods": [
            {
              "code": "type Output = Saturating<i64>",
              "text": "The resulting type after applying the | operator."
            },
            {
              "code": "pub fn bitor(self, other: Saturating<i64>) -> Saturating<i64>",
              "text": "Performs the | operation."
            }
          ]
        },
        {
          "title": "impl BitOr<Saturating<i8>> for Saturating<i8>",
          "methods": [
            {
              "code": "type Output = Saturating<i8>",
              "text": "The resulting type after applying the | operator."
            },
            {
              "code": "pub fn bitor(self, other: Saturating<i8>) -> Saturating<i8>",
              "text": "Performs the | operation."
            }
          ]
        },
        {
          "title": "impl<'a> BitOr<Saturating<i8>> for &'a Saturating<i8>",
          "methods": [
            {
              "code": "type Output = <Saturating<i8> as BitOr<Saturating<i8>>>::Output",
              "text": "The resulting type after applying the | operator."
            },
            {
              "code": "pub fn bitor( self, other: Saturating<i8>) -> <Saturating<i8> as BitOr<Saturating<i8>>>::Output",
              "text": "Performs the | operation."
            }
          ]
        },
        {
          "title": "impl BitOr<Saturating<isize>> for Saturating<isize>",
          "methods": [
            {
              "code": "type Output = Saturating<isize>",
              "text": "The resulting type after applying the | operator."
            },
            {
              "code": "pub fn bitor(self, other: Saturating<isize>) -> Saturating<isize>",
              "text": "Performs the | operation."
            }
          ]
        },
        {
          "title": "impl<'a> BitOr<Saturating<isize>> for &'a Saturating<isize>",
          "methods": [
            {
              "code": "type Output = <Saturating<isize> as BitOr<Saturating<isize>>>::Output",
              "text": "The resulting type after applying the | operator."
            },
            {
              "code": "pub fn bitor( self, other: Saturating<isize>) -> <Saturating<isize> as BitOr<Saturating<isize>>>::Output",
              "text": "Performs the | operation."
            }
          ]
        },
        {
          "title": "impl<'a> BitOr<Saturating<u128>> for &'a Saturating<u128>",
          "methods": [
            {
              "code": "type Output = <Saturating<u128> as BitOr<Saturating<u128>>>::Output",
              "text": "The resulting type after applying the | operator."
            },
            {
              "code": "pub fn bitor( self, other: Saturating<u128>) -> <Saturating<u128> as BitOr<Saturating<u128>>>::Output",
              "text": "Performs the | operation."
            }
          ]
        },
        {
          "title": "impl BitOr<Saturating<u128>> for Saturating<u128>",
          "methods": [
            {
              "code": "type Output = Saturating<u128>",
              "text": "The resulting type after applying the | operator."
            },
            {
              "code": "pub fn bitor(self, other: Saturating<u128>) -> Saturating<u128>",
              "text": "Performs the | operation."
            }
          ]
        },
        {
          "title": "impl BitOr<Saturating<u16>> for Saturating<u16>",
          "methods": [
            {
              "code": "type Output = Saturating<u16>",
              "text": "The resulting type after applying the | operator."
            },
            {
              "code": "pub fn bitor(self, other: Saturating<u16>) -> Saturating<u16>",
              "text": "Performs the | operation."
            }
          ]
        },
        {
          "title": "impl<'a> BitOr<Saturating<u16>> for &'a Saturating<u16>",
          "methods": [
            {
              "code": "type Output = <Saturating<u16> as BitOr<Saturating<u16>>>::Output",
              "text": "The resulting type after applying the | operator."
            },
            {
              "code": "pub fn bitor( self, other: Saturating<u16>) -> <Saturating<u16> as BitOr<Saturating<u16>>>::Output",
              "text": "Performs the | operation."
            }
          ]
        },
        {
          "title": "impl BitOr<Saturating<u32>> for Saturating<u32>",
          "methods": [
            {
              "code": "type Output = Saturating<u32>",
              "text": "The resulting type after applying the | operator."
            },
            {
              "code": "pub fn bitor(self, other: Saturating<u32>) -> Saturating<u32>",
              "text": "Performs the | operation."
            }
          ]
        },
        {
          "title": "impl<'a> BitOr<Saturating<u32>> for &'a Saturating<u32>",
          "methods": [
            {
              "code": "type Output = <Saturating<u32> as BitOr<Saturating<u32>>>::Output",
              "text": "The resulting type after applying the | operator."
            },
            {
              "code": "pub fn bitor( self, other: Saturating<u32>) -> <Saturating<u32> as BitOr<Saturating<u32>>>::Output",
              "text": "Performs the | operation."
            }
          ]
        },
        {
          "title": "impl BitOr<Saturating<u64>> for Saturating<u64>",
          "methods": [
            {
              "code": "type Output = Saturating<u64>",
              "text": "The resulting type after applying the | operator."
            },
            {
              "code": "pub fn bitor(self, other: Saturating<u64>) -> Saturating<u64>",
              "text": "Performs the | operation."
            }
          ]
        },
        {
          "title": "impl<'a> BitOr<Saturating<u64>> for &'a Saturating<u64>",
          "methods": [
            {
              "code": "type Output = <Saturating<u64> as BitOr<Saturating<u64>>>::Output",
              "text": "The resulting type after applying the | operator."
            },
            {
              "code": "pub fn bitor( self, other: Saturating<u64>) -> <Saturating<u64> as BitOr<Saturating<u64>>>::Output",
              "text": "Performs the | operation."
            }
          ]
        },
        {
          "title": "impl<'a> BitOr<Saturating<u8>> for &'a Saturating<u8>",
          "methods": [
            {
              "code": "type Output = <Saturating<u8> as BitOr<Saturating<u8>>>::Output",
              "text": "The resulting type after applying the | operator."
            },
            {
              "code": "pub fn bitor( self, other: Saturating<u8>) -> <Saturating<u8> as BitOr<Saturating<u8>>>::Output",
              "text": "Performs the | operation."
            }
          ]
        },
        {
          "title": "impl BitOr<Saturating<u8>> for Saturating<u8>",
          "methods": [
            {
              "code": "type Output = Saturating<u8>",
              "text": "The resulting type after applying the | operator."
            },
            {
              "code": "pub fn bitor(self, other: Saturating<u8>) -> Saturating<u8>",
              "text": "Performs the | operation."
            }
          ]
        },
        {
          "title": "impl<'a> BitOr<Saturating<usize>> for &'a Saturating<usize>",
          "methods": [
            {
              "code": "type Output = <Saturating<usize> as BitOr<Saturating<usize>>>::Output",
              "text": "The resulting type after applying the | operator."
            },
            {
              "code": "pub fn bitor( self, other: Saturating<usize>) -> <Saturating<usize> as BitOr<Saturating<usize>>>::Output",
              "text": "Performs the | operation."
            }
          ]
        },
        {
          "title": "impl BitOr<Saturating<usize>> for Saturating<usize>",
          "methods": [
            {
              "code": "type Output = Saturating<usize>",
              "text": "The resulting type after applying the | operator."
            },
            {
              "code": "pub fn bitor(self, other: Saturating<usize>) -> Saturating<usize>",
              "text": "Performs the | operation."
            }
          ]
        },
        {
          "title": "impl<'_> BitOrAssign<&'_ Saturating<i128>> for Saturating<i128>",
          "methods": [
            {
              "code": "pub fn bitor_assign(&mut self, other: &Saturating<i128>)",
              "text": "Performs the |= operation."
            }
          ]
        },
        {
          "title": "impl<'_> BitOrAssign<&'_ Saturating<i16>> for Saturating<i16>",
          "methods": [
            {
              "code": "pub fn bitor_assign(&mut self, other: &Saturating<i16>)",
              "text": "Performs the |= operation."
            }
          ]
        },
        {
          "title": "impl<'_> BitOrAssign<&'_ Saturating<i32>> for Saturating<i32>",
          "methods": [
            {
              "code": "pub fn bitor_assign(&mut self, other: &Saturating<i32>)",
              "text": "Performs the |= operation."
            }
          ]
        },
        {
          "title": "impl<'_> BitOrAssign<&'_ Saturating<i64>> for Saturating<i64>",
          "methods": [
            {
              "code": "pub fn bitor_assign(&mut self, other: &Saturating<i64>)",
              "text": "Performs the |= operation."
            }
          ]
        },
        {
          "title": "impl<'_> BitOrAssign<&'_ Saturating<i8>> for Saturating<i8>",
          "methods": [
            {
              "code": "pub fn bitor_assign(&mut self, other: &Saturating<i8>)",
              "text": "Performs the |= operation."
            }
          ]
        },
        {
          "title": "impl<'_> BitOrAssign<&'_ Saturating<isize>> for Saturating<isize>",
          "methods": [
            {
              "code": "pub fn bitor_assign(&mut self, other: &Saturating<isize>)",
              "text": "Performs the |= operation."
            }
          ]
        },
        {
          "title": "impl<'_> BitOrAssign<&'_ Saturating<u128>> for Saturating<u128>",
          "methods": [
            {
              "code": "pub fn bitor_assign(&mut self, other: &Saturating<u128>)",
              "text": "Performs the |= operation."
            }
          ]
        },
        {
          "title": "impl<'_> BitOrAssign<&'_ Saturating<u16>> for Saturating<u16>",
          "methods": [
            {
              "code": "pub fn bitor_assign(&mut self, other: &Saturating<u16>)",
              "text": "Performs the |= operation."
            }
          ]
        },
        {
          "title": "impl<'_> BitOrAssign<&'_ Saturating<u32>> for Saturating<u32>",
          "methods": [
            {
              "code": "pub fn bitor_assign(&mut self, other: &Saturating<u32>)",
              "text": "Performs the |= operation."
            }
          ]
        },
        {
          "title": "impl<'_> BitOrAssign<&'_ Saturating<u64>> for Saturating<u64>",
          "methods": [
            {
              "code": "pub fn bitor_assign(&mut self, other: &Saturating<u64>)",
              "text": "Performs the |= operation."
            }
          ]
        },
        {
          "title": "impl<'_> BitOrAssign<&'_ Saturating<u8>> for Saturating<u8>",
          "methods": [
            {
              "code": "pub fn bitor_assign(&mut self, other: &Saturating<u8>)",
              "text": "Performs the |= operation."
            }
          ]
        },
        {
          "title": "impl<'_> BitOrAssign<&'_ Saturating<usize>> for Saturating<usize>",
          "methods": [
            {
              "code": "pub fn bitor_assign(&mut self, other: &Saturating<usize>)",
              "text": "Performs the |= operation."
            }
          ]
        },
        {
          "title": "impl BitOrAssign<Saturating<i128>> for Saturating<i128>",
          "methods": [
            {
              "code": "pub fn bitor_assign(&mut self, other: Saturating<i128>)",
              "text": "Performs the |= operation."
            }
          ]
        },
        {
          "title": "impl BitOrAssign<Saturating<i16>> for Saturating<i16>",
          "methods": [
            {
              "code": "pub fn bitor_assign(&mut self, other: Saturating<i16>)",
              "text": "Performs the |= operation."
            }
          ]
        },
        {
          "title": "impl BitOrAssign<Saturating<i32>> for Saturating<i32>",
          "methods": [
            {
              "code": "pub fn bitor_assign(&mut self, other: Saturating<i32>)",
              "text": "Performs the |= operation."
            }
          ]
        },
        {
          "title": "impl BitOrAssign<Saturating<i64>> for Saturating<i64>",
          "methods": [
            {
              "code": "pub fn bitor_assign(&mut self, other: Saturating<i64>)",
              "text": "Performs the |= operation."
            }
          ]
        },
        {
          "title": "impl BitOrAssign<Saturating<i8>> for Saturating<i8>",
          "methods": [
            {
              "code": "pub fn bitor_assign(&mut self, other: Saturating<i8>)",
              "text": "Performs the |= operation."
            }
          ]
        },
        {
          "title": "impl BitOrAssign<Saturating<isize>> for Saturating<isize>",
          "methods": [
            {
              "code": "pub fn bitor_assign(&mut self, other: Saturating<isize>)",
              "text": "Performs the |= operation."
            }
          ]
        },
        {
          "title": "impl BitOrAssign<Saturating<u128>> for Saturating<u128>",
          "methods": [
            {
              "code": "pub fn bitor_assign(&mut self, other: Saturating<u128>)",
              "text": "Performs the |= operation."
            }
          ]
        },
        {
          "title": "impl BitOrAssign<Saturating<u16>> for Saturating<u16>",
          "methods": [
            {
              "code": "pub fn bitor_assign(&mut self, other: Saturating<u16>)",
              "text": "Performs the |= operation."
            }
          ]
        },
        {
          "title": "impl BitOrAssign<Saturating<u32>> for Saturating<u32>",
          "methods": [
            {
              "code": "pub fn bitor_assign(&mut self, other: Saturating<u32>)",
              "text": "Performs the |= operation."
            }
          ]
        },
        {
          "title": "impl BitOrAssign<Saturating<u64>> for Saturating<u64>",
          "methods": [
            {
              "code": "pub fn bitor_assign(&mut self, other: Saturating<u64>)",
              "text": "Performs the |= operation."
            }
          ]
        },
        {
          "title": "impl BitOrAssign<Saturating<u8>> for Saturating<u8>",
          "methods": [
            {
              "code": "pub fn bitor_assign(&mut self, other: Saturating<u8>)",
              "text": "Performs the |= operation."
            }
          ]
        },
        {
          "title": "impl BitOrAssign<Saturating<usize>> for Saturating<usize>",
          "methods": [
            {
              "code": "pub fn bitor_assign(&mut self, other: Saturating<usize>)",
              "text": "Performs the |= operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> BitXor<&'_ Saturating<i128>> for &'_ Saturating<i128>",
          "methods": [
            {
              "code": "type Output = <Saturating<i128> as BitXor<Saturating<i128>>>::Output",
              "text": "The resulting type after applying the ^ operator."
            },
            {
              "code": "pub fn bitxor( self, other: &Saturating<i128>) -> <Saturating<i128> as BitXor<Saturating<i128>>>::Output",
              "text": "Performs the ^ operation."
            }
          ]
        },
        {
          "title": "impl<'_> BitXor<&'_ Saturating<i128>> for Saturating<i128>",
          "methods": [
            {
              "code": "type Output = <Saturating<i128> as BitXor<Saturating<i128>>>::Output",
              "text": "The resulting type after applying the ^ operator."
            },
            {
              "code": "pub fn bitxor( self, other: &Saturating<i128>) -> <Saturating<i128> as BitXor<Saturating<i128>>>::Output",
              "text": "Performs the ^ operation."
            }
          ]
        },
        {
          "title": "impl<'_> BitXor<&'_ Saturating<i16>> for Saturating<i16>",
          "methods": [
            {
              "code": "type Output = <Saturating<i16> as BitXor<Saturating<i16>>>::Output",
              "text": "The resulting type after applying the ^ operator."
            },
            {
              "code": "pub fn bitxor( self, other: &Saturating<i16>) -> <Saturating<i16> as BitXor<Saturating<i16>>>::Output",
              "text": "Performs the ^ operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> BitXor<&'_ Saturating<i16>> for &'_ Saturating<i16>",
          "methods": [
            {
              "code": "type Output = <Saturating<i16> as BitXor<Saturating<i16>>>::Output",
              "text": "The resulting type after applying the ^ operator."
            },
            {
              "code": "pub fn bitxor( self, other: &Saturating<i16>) -> <Saturating<i16> as BitXor<Saturating<i16>>>::Output",
              "text": "Performs the ^ operation."
            }
          ]
        },
        {
          "title": "impl<'_> BitXor<&'_ Saturating<i32>> for Saturating<i32>",
          "methods": [
            {
              "code": "type Output = <Saturating<i32> as BitXor<Saturating<i32>>>::Output",
              "text": "The resulting type after applying the ^ operator."
            },
            {
              "code": "pub fn bitxor( self, other: &Saturating<i32>) -> <Saturating<i32> as BitXor<Saturating<i32>>>::Output",
              "text": "Performs the ^ operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> BitXor<&'_ Saturating<i32>> for &'_ Saturating<i32>",
          "methods": [
            {
              "code": "type Output = <Saturating<i32> as BitXor<Saturating<i32>>>::Output",
              "text": "The resulting type after applying the ^ operator."
            },
            {
              "code": "pub fn bitxor( self, other: &Saturating<i32>) -> <Saturating<i32> as BitXor<Saturating<i32>>>::Output",
              "text": "Performs the ^ operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> BitXor<&'_ Saturating<i64>> for &'_ Saturating<i64>",
          "methods": [
            {
              "code": "type Output = <Saturating<i64> as BitXor<Saturating<i64>>>::Output",
              "text": "The resulting type after applying the ^ operator."
            },
            {
              "code": "pub fn bitxor( self, other: &Saturating<i64>) -> <Saturating<i64> as BitXor<Saturating<i64>>>::Output",
              "text": "Performs the ^ operation."
            }
          ]
        },
        {
          "title": "impl<'_> BitXor<&'_ Saturating<i64>> for Saturating<i64>",
          "methods": [
            {
              "code": "type Output = <Saturating<i64> as BitXor<Saturating<i64>>>::Output",
              "text": "The resulting type after applying the ^ operator."
            },
            {
              "code": "pub fn bitxor( self, other: &Saturating<i64>) -> <Saturating<i64> as BitXor<Saturating<i64>>>::Output",
              "text": "Performs the ^ operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> BitXor<&'_ Saturating<i8>> for &'_ Saturating<i8>",
          "methods": [
            {
              "code": "type Output = <Saturating<i8> as BitXor<Saturating<i8>>>::Output",
              "text": "The resulting type after applying the ^ operator."
            },
            {
              "code": "pub fn bitxor( self, other: &Saturating<i8>) -> <Saturating<i8> as BitXor<Saturating<i8>>>::Output",
              "text": "Performs the ^ operation."
            }
          ]
        },
        {
          "title": "impl<'_> BitXor<&'_ Saturating<i8>> for Saturating<i8>",
          "methods": [
            {
              "code": "type Output = <Saturating<i8> as BitXor<Saturating<i8>>>::Output",
              "text": "The resulting type after applying the ^ operator."
            },
            {
              "code": "pub fn bitxor( self, other: &Saturating<i8>) -> <Saturating<i8> as BitXor<Saturating<i8>>>::Output",
              "text": "Performs the ^ operation."
            }
          ]
        },
        {
          "title": "impl<'_> BitXor<&'_ Saturating<isize>> for Saturating<isize>",
          "methods": [
            {
              "code": "type Output = <Saturating<isize> as BitXor<Saturating<isize>>>::Output",
              "text": "The resulting type after applying the ^ operator."
            },
            {
              "code": "pub fn bitxor( self, other: &Saturating<isize>) -> <Saturating<isize> as BitXor<Saturating<isize>>>::Output",
              "text": "Performs the ^ operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> BitXor<&'_ Saturating<isize>> for &'_ Saturating<isize>",
          "methods": [
            {
              "code": "type Output = <Saturating<isize> as BitXor<Saturating<isize>>>::Output",
              "text": "The resulting type after applying the ^ operator."
            },
            {
              "code": "pub fn bitxor( self, other: &Saturating<isize>) -> <Saturating<isize> as BitXor<Saturating<isize>>>::Output",
              "text": "Performs the ^ operation."
            }
          ]
        },
        {
          "title": "impl<'_> BitXor<&'_ Saturating<u128>> for Saturating<u128>",
          "methods": [
            {
              "code": "type Output = <Saturating<u128> as BitXor<Saturating<u128>>>::Output",
              "text": "The resulting type after applying the ^ operator."
            },
            {
              "code": "pub fn bitxor( self, other: &Saturating<u128>) -> <Saturating<u128> as BitXor<Saturating<u128>>>::Output",
              "text": "Performs the ^ operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> BitXor<&'_ Saturating<u128>> for &'_ Saturating<u128>",
          "methods": [
            {
              "code": "type Output = <Saturating<u128> as BitXor<Saturating<u128>>>::Output",
              "text": "The resulting type after applying the ^ operator."
            },
            {
              "code": "pub fn bitxor( self, other: &Saturating<u128>) -> <Saturating<u128> as BitXor<Saturating<u128>>>::Output",
              "text": "Performs the ^ operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> BitXor<&'_ Saturating<u16>> for &'_ Saturating<u16>",
          "methods": [
            {
              "code": "type Output = <Saturating<u16> as BitXor<Saturating<u16>>>::Output",
              "text": "The resulting type after applying the ^ operator."
            },
            {
              "code": "pub fn bitxor( self, other: &Saturating<u16>) -> <Saturating<u16> as BitXor<Saturating<u16>>>::Output",
              "text": "Performs the ^ operation."
            }
          ]
        },
        {
          "title": "impl<'_> BitXor<&'_ Saturating<u16>> for Saturating<u16>",
          "methods": [
            {
              "code": "type Output = <Saturating<u16> as BitXor<Saturating<u16>>>::Output",
              "text": "The resulting type after applying the ^ operator."
            },
            {
              "code": "pub fn bitxor( self, other: &Saturating<u16>) -> <Saturating<u16> as BitXor<Saturating<u16>>>::Output",
              "text": "Performs the ^ operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> BitXor<&'_ Saturating<u32>> for &'_ Saturating<u32>",
          "methods": [
            {
              "code": "type Output = <Saturating<u32> as BitXor<Saturating<u32>>>::Output",
              "text": "The resulting type after applying the ^ operator."
            },
            {
              "code": "pub fn bitxor( self, other: &Saturating<u32>) -> <Saturating<u32> as BitXor<Saturating<u32>>>::Output",
              "text": "Performs the ^ operation."
            }
          ]
        },
        {
          "title": "impl<'_> BitXor<&'_ Saturating<u32>> for Saturating<u32>",
          "methods": [
            {
              "code": "type Output = <Saturating<u32> as BitXor<Saturating<u32>>>::Output",
              "text": "The resulting type after applying the ^ operator."
            },
            {
              "code": "pub fn bitxor( self, other: &Saturating<u32>) -> <Saturating<u32> as BitXor<Saturating<u32>>>::Output",
              "text": "Performs the ^ operation."
            }
          ]
        },
        {
          "title": "impl<'_> BitXor<&'_ Saturating<u64>> for Saturating<u64>",
          "methods": [
            {
              "code": "type Output = <Saturating<u64> as BitXor<Saturating<u64>>>::Output",
              "text": "The resulting type after applying the ^ operator."
            },
            {
              "code": "pub fn bitxor( self, other: &Saturating<u64>) -> <Saturating<u64> as BitXor<Saturating<u64>>>::Output",
              "text": "Performs the ^ operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> BitXor<&'_ Saturating<u64>> for &'_ Saturating<u64>",
          "methods": [
            {
              "code": "type Output = <Saturating<u64> as BitXor<Saturating<u64>>>::Output",
              "text": "The resulting type after applying the ^ operator."
            },
            {
              "code": "pub fn bitxor( self, other: &Saturating<u64>) -> <Saturating<u64> as BitXor<Saturating<u64>>>::Output",
              "text": "Performs the ^ operation."
            }
          ]
        },
        {
          "title": "impl<'_> BitXor<&'_ Saturating<u8>> for Saturating<u8>",
          "methods": [
            {
              "code": "type Output = <Saturating<u8> as BitXor<Saturating<u8>>>::Output",
              "text": "The resulting type after applying the ^ operator."
            },
            {
              "code": "pub fn bitxor( self, other: &Saturating<u8>) -> <Saturating<u8> as BitXor<Saturating<u8>>>::Output",
              "text": "Performs the ^ operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> BitXor<&'_ Saturating<u8>> for &'_ Saturating<u8>",
          "methods": [
            {
              "code": "type Output = <Saturating<u8> as BitXor<Saturating<u8>>>::Output",
              "text": "The resulting type after applying the ^ operator."
            },
            {
              "code": "pub fn bitxor( self, other: &Saturating<u8>) -> <Saturating<u8> as BitXor<Saturating<u8>>>::Output",
              "text": "Performs the ^ operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> BitXor<&'_ Saturating<usize>> for &'_ Saturating<usize>",
          "methods": [
            {
              "code": "type Output = <Saturating<usize> as BitXor<Saturating<usize>>>::Output",
              "text": "The resulting type after applying the ^ operator."
            },
            {
              "code": "pub fn bitxor( self, other: &Saturating<usize>) -> <Saturating<usize> as BitXor<Saturating<usize>>>::Output",
              "text": "Performs the ^ operation."
            }
          ]
        },
        {
          "title": "impl<'_> BitXor<&'_ Saturating<usize>> for Saturating<usize>",
          "methods": [
            {
              "code": "type Output = <Saturating<usize> as BitXor<Saturating<usize>>>::Output",
              "text": "The resulting type after applying the ^ operator."
            },
            {
              "code": "pub fn bitxor( self, other: &Saturating<usize>) -> <Saturating<usize> as BitXor<Saturating<usize>>>::Output",
              "text": "Performs the ^ operation."
            }
          ]
        },
        {
          "title": "impl<'a> BitXor<Saturating<i128>> for &'a Saturating<i128>",
          "methods": [
            {
              "code": "type Output = <Saturating<i128> as BitXor<Saturating<i128>>>::Output",
              "text": "The resulting type after applying the ^ operator."
            },
            {
              "code": "pub fn bitxor( self, other: Saturating<i128>) -> <Saturating<i128> as BitXor<Saturating<i128>>>::Output",
              "text": "Performs the ^ operation."
            }
          ]
        },
        {
          "title": "impl BitXor<Saturating<i128>> for Saturating<i128>",
          "methods": [
            {
              "code": "type Output = Saturating<i128>",
              "text": "The resulting type after applying the ^ operator."
            },
            {
              "code": "pub fn bitxor(self, other: Saturating<i128>) -> Saturating<i128>",
              "text": "Performs the ^ operation."
            }
          ]
        },
        {
          "title": "impl<'a> BitXor<Saturating<i16>> for &'a Saturating<i16>",
          "methods": [
            {
              "code": "type Output = <Saturating<i16> as BitXor<Saturating<i16>>>::Output",
              "text": "The resulting type after applying the ^ operator."
            },
            {
              "code": "pub fn bitxor( self, other: Saturating<i16>) -> <Saturating<i16> as BitXor<Saturating<i16>>>::Output",
              "text": "Performs the ^ operation."
            }
          ]
        },
        {
          "title": "impl BitXor<Saturating<i16>> for Saturating<i16>",
          "methods": [
            {
              "code": "type Output = Saturating<i16>",
              "text": "The resulting type after applying the ^ operator."
            },
            {
              "code": "pub fn bitxor(self, other: Saturating<i16>) -> Saturating<i16>",
              "text": "Performs the ^ operation."
            }
          ]
        },
        {
          "title": "impl<'a> BitXor<Saturating<i32>> for &'a Saturating<i32>",
          "methods": [
            {
              "code": "type Output = <Saturating<i32> as BitXor<Saturating<i32>>>::Output",
              "text": "The resulting type after applying the ^ operator."
            },
            {
              "code": "pub fn bitxor( self, other: Saturating<i32>) -> <Saturating<i32> as BitXor<Saturating<i32>>>::Output",
              "text": "Performs the ^ operation."
            }
          ]
        },
        {
          "title": "impl BitXor<Saturating<i32>> for Saturating<i32>",
          "methods": [
            {
              "code": "type Output = Saturating<i32>",
              "text": "The resulting type after applying the ^ operator."
            },
            {
              "code": "pub fn bitxor(self, other: Saturating<i32>) -> Saturating<i32>",
              "text": "Performs the ^ operation."
            }
          ]
        },
        {
          "title": "impl BitXor<Saturating<i64>> for Saturating<i64>",
          "methods": [
            {
              "code": "type Output = Saturating<i64>",
              "text": "The resulting type after applying the ^ operator."
            },
            {
              "code": "pub fn bitxor(self, other: Saturating<i64>) -> Saturating<i64>",
              "text": "Performs the ^ operation."
            }
          ]
        },
        {
          "title": "impl<'a> BitXor<Saturating<i64>> for &'a Saturating<i64>",
          "methods": [
            {
              "code": "type Output = <Saturating<i64> as BitXor<Saturating<i64>>>::Output",
              "text": "The resulting type after applying the ^ operator."
            },
            {
              "code": "pub fn bitxor( self, other: Saturating<i64>) -> <Saturating<i64> as BitXor<Saturating<i64>>>::Output",
              "text": "Performs the ^ operation."
            }
          ]
        },
        {
          "title": "impl BitXor<Saturating<i8>> for Saturating<i8>",
          "methods": [
            {
              "code": "type Output = Saturating<i8>",
              "text": "The resulting type after applying the ^ operator."
            },
            {
              "code": "pub fn bitxor(self, other: Saturating<i8>) -> Saturating<i8>",
              "text": "Performs the ^ operation."
            }
          ]
        },
        {
          "title": "impl<'a> BitXor<Saturating<i8>> for &'a Saturating<i8>",
          "methods": [
            {
              "code": "type Output = <Saturating<i8> as BitXor<Saturating<i8>>>::Output",
              "text": "The resulting type after applying the ^ operator."
            },
            {
              "code": "pub fn bitxor( self, other: Saturating<i8>) -> <Saturating<i8> as BitXor<Saturating<i8>>>::Output",
              "text": "Performs the ^ operation."
            }
          ]
        },
        {
          "title": "impl BitXor<Saturating<isize>> for Saturating<isize>",
          "methods": [
            {
              "code": "type Output = Saturating<isize>",
              "text": "The resulting type after applying the ^ operator."
            },
            {
              "code": "pub fn bitxor(self, other: Saturating<isize>) -> Saturating<isize>",
              "text": "Performs the ^ operation."
            }
          ]
        },
        {
          "title": "impl<'a> BitXor<Saturating<isize>> for &'a Saturating<isize>",
          "methods": [
            {
              "code": "type Output = <Saturating<isize> as BitXor<Saturating<isize>>>::Output",
              "text": "The resulting type after applying the ^ operator."
            },
            {
              "code": "pub fn bitxor( self, other: Saturating<isize>) -> <Saturating<isize> as BitXor<Saturating<isize>>>::Output",
              "text": "Performs the ^ operation."
            }
          ]
        },
        {
          "title": "impl<'a> BitXor<Saturating<u128>> for &'a Saturating<u128>",
          "methods": [
            {
              "code": "type Output = <Saturating<u128> as BitXor<Saturating<u128>>>::Output",
              "text": "The resulting type after applying the ^ operator."
            },
            {
              "code": "pub fn bitxor( self, other: Saturating<u128>) -> <Saturating<u128> as BitXor<Saturating<u128>>>::Output",
              "text": "Performs the ^ operation."
            }
          ]
        },
        {
          "title": "impl BitXor<Saturating<u128>> for Saturating<u128>",
          "methods": [
            {
              "code": "type Output = Saturating<u128>",
              "text": "The resulting type after applying the ^ operator."
            },
            {
              "code": "pub fn bitxor(self, other: Saturating<u128>) -> Saturating<u128>",
              "text": "Performs the ^ operation."
            }
          ]
        },
        {
          "title": "impl BitXor<Saturating<u16>> for Saturating<u16>",
          "methods": [
            {
              "code": "type Output = Saturating<u16>",
              "text": "The resulting type after applying the ^ operator."
            },
            {
              "code": "pub fn bitxor(self, other: Saturating<u16>) -> Saturating<u16>",
              "text": "Performs the ^ operation."
            }
          ]
        },
        {
          "title": "impl<'a> BitXor<Saturating<u16>> for &'a Saturating<u16>",
          "methods": [
            {
              "code": "type Output = <Saturating<u16> as BitXor<Saturating<u16>>>::Output",
              "text": "The resulting type after applying the ^ operator."
            },
            {
              "code": "pub fn bitxor( self, other: Saturating<u16>) -> <Saturating<u16> as BitXor<Saturating<u16>>>::Output",
              "text": "Performs the ^ operation."
            }
          ]
        },
        {
          "title": "impl<'a> BitXor<Saturating<u32>> for &'a Saturating<u32>",
          "methods": [
            {
              "code": "type Output = <Saturating<u32> as BitXor<Saturating<u32>>>::Output",
              "text": "The resulting type after applying the ^ operator."
            },
            {
              "code": "pub fn bitxor( self, other: Saturating<u32>) -> <Saturating<u32> as BitXor<Saturating<u32>>>::Output",
              "text": "Performs the ^ operation."
            }
          ]
        },
        {
          "title": "impl BitXor<Saturating<u32>> for Saturating<u32>",
          "methods": [
            {
              "code": "type Output = Saturating<u32>",
              "text": "The resulting type after applying the ^ operator."
            },
            {
              "code": "pub fn bitxor(self, other: Saturating<u32>) -> Saturating<u32>",
              "text": "Performs the ^ operation."
            }
          ]
        },
        {
          "title": "impl BitXor<Saturating<u64>> for Saturating<u64>",
          "methods": [
            {
              "code": "type Output = Saturating<u64>",
              "text": "The resulting type after applying the ^ operator."
            },
            {
              "code": "pub fn bitxor(self, other: Saturating<u64>) -> Saturating<u64>",
              "text": "Performs the ^ operation."
            }
          ]
        },
        {
          "title": "impl<'a> BitXor<Saturating<u64>> for &'a Saturating<u64>",
          "methods": [
            {
              "code": "type Output = <Saturating<u64> as BitXor<Saturating<u64>>>::Output",
              "text": "The resulting type after applying the ^ operator."
            },
            {
              "code": "pub fn bitxor( self, other: Saturating<u64>) -> <Saturating<u64> as BitXor<Saturating<u64>>>::Output",
              "text": "Performs the ^ operation."
            }
          ]
        },
        {
          "title": "impl BitXor<Saturating<u8>> for Saturating<u8>",
          "methods": [
            {
              "code": "type Output = Saturating<u8>",
              "text": "The resulting type after applying the ^ operator."
            },
            {
              "code": "pub fn bitxor(self, other: Saturating<u8>) -> Saturating<u8>",
              "text": "Performs the ^ operation."
            }
          ]
        },
        {
          "title": "impl<'a> BitXor<Saturating<u8>> for &'a Saturating<u8>",
          "methods": [
            {
              "code": "type Output = <Saturating<u8> as BitXor<Saturating<u8>>>::Output",
              "text": "The resulting type after applying the ^ operator."
            },
            {
              "code": "pub fn bitxor( self, other: Saturating<u8>) -> <Saturating<u8> as BitXor<Saturating<u8>>>::Output",
              "text": "Performs the ^ operation."
            }
          ]
        },
        {
          "title": "impl<'a> BitXor<Saturating<usize>> for &'a Saturating<usize>",
          "methods": [
            {
              "code": "type Output = <Saturating<usize> as BitXor<Saturating<usize>>>::Output",
              "text": "The resulting type after applying the ^ operator."
            },
            {
              "code": "pub fn bitxor( self, other: Saturating<usize>) -> <Saturating<usize> as BitXor<Saturating<usize>>>::Output",
              "text": "Performs the ^ operation."
            }
          ]
        },
        {
          "title": "impl BitXor<Saturating<usize>> for Saturating<usize>",
          "methods": [
            {
              "code": "type Output = Saturating<usize>",
              "text": "The resulting type after applying the ^ operator."
            },
            {
              "code": "pub fn bitxor(self, other: Saturating<usize>) -> Saturating<usize>",
              "text": "Performs the ^ operation."
            }
          ]
        },
        {
          "title": "impl<'_> BitXorAssign<&'_ Saturating<i128>> for Saturating<i128>",
          "methods": [
            {
              "code": "pub fn bitxor_assign(&mut self, other: &Saturating<i128>)",
              "text": "Performs the ^= operation."
            }
          ]
        },
        {
          "title": "impl<'_> BitXorAssign<&'_ Saturating<i16>> for Saturating<i16>",
          "methods": [
            {
              "code": "pub fn bitxor_assign(&mut self, other: &Saturating<i16>)",
              "text": "Performs the ^= operation."
            }
          ]
        },
        {
          "title": "impl<'_> BitXorAssign<&'_ Saturating<i32>> for Saturating<i32>",
          "methods": [
            {
              "code": "pub fn bitxor_assign(&mut self, other: &Saturating<i32>)",
              "text": "Performs the ^= operation."
            }
          ]
        },
        {
          "title": "impl<'_> BitXorAssign<&'_ Saturating<i64>> for Saturating<i64>",
          "methods": [
            {
              "code": "pub fn bitxor_assign(&mut self, other: &Saturating<i64>)",
              "text": "Performs the ^= operation."
            }
          ]
        },
        {
          "title": "impl<'_> BitXorAssign<&'_ Saturating<i8>> for Saturating<i8>",
          "methods": [
            {
              "code": "pub fn bitxor_assign(&mut self, other: &Saturating<i8>)",
              "text": "Performs the ^= operation."
            }
          ]
        },
        {
          "title": "impl<'_> BitXorAssign<&'_ Saturating<isize>> for Saturating<isize>",
          "methods": [
            {
              "code": "pub fn bitxor_assign(&mut self, other: &Saturating<isize>)",
              "text": "Performs the ^= operation."
            }
          ]
        },
        {
          "title": "impl<'_> BitXorAssign<&'_ Saturating<u128>> for Saturating<u128>",
          "methods": [
            {
              "code": "pub fn bitxor_assign(&mut self, other: &Saturating<u128>)",
              "text": "Performs the ^= operation."
            }
          ]
        },
        {
          "title": "impl<'_> BitXorAssign<&'_ Saturating<u16>> for Saturating<u16>",
          "methods": [
            {
              "code": "pub fn bitxor_assign(&mut self, other: &Saturating<u16>)",
              "text": "Performs the ^= operation."
            }
          ]
        },
        {
          "title": "impl<'_> BitXorAssign<&'_ Saturating<u32>> for Saturating<u32>",
          "methods": [
            {
              "code": "pub fn bitxor_assign(&mut self, other: &Saturating<u32>)",
              "text": "Performs the ^= operation."
            }
          ]
        },
        {
          "title": "impl<'_> BitXorAssign<&'_ Saturating<u64>> for Saturating<u64>",
          "methods": [
            {
              "code": "pub fn bitxor_assign(&mut self, other: &Saturating<u64>)",
              "text": "Performs the ^= operation."
            }
          ]
        },
        {
          "title": "impl<'_> BitXorAssign<&'_ Saturating<u8>> for Saturating<u8>",
          "methods": [
            {
              "code": "pub fn bitxor_assign(&mut self, other: &Saturating<u8>)",
              "text": "Performs the ^= operation."
            }
          ]
        },
        {
          "title": "impl<'_> BitXorAssign<&'_ Saturating<usize>> for Saturating<usize>",
          "methods": [
            {
              "code": "pub fn bitxor_assign(&mut self, other: &Saturating<usize>)",
              "text": "Performs the ^= operation."
            }
          ]
        },
        {
          "title": "impl BitXorAssign<Saturating<i128>> for Saturating<i128>",
          "methods": [
            {
              "code": "pub fn bitxor_assign(&mut self, other: Saturating<i128>)",
              "text": "Performs the ^= operation."
            }
          ]
        },
        {
          "title": "impl BitXorAssign<Saturating<i16>> for Saturating<i16>",
          "methods": [
            {
              "code": "pub fn bitxor_assign(&mut self, other: Saturating<i16>)",
              "text": "Performs the ^= operation."
            }
          ]
        },
        {
          "title": "impl BitXorAssign<Saturating<i32>> for Saturating<i32>",
          "methods": [
            {
              "code": "pub fn bitxor_assign(&mut self, other: Saturating<i32>)",
              "text": "Performs the ^= operation."
            }
          ]
        },
        {
          "title": "impl BitXorAssign<Saturating<i64>> for Saturating<i64>",
          "methods": [
            {
              "code": "pub fn bitxor_assign(&mut self, other: Saturating<i64>)",
              "text": "Performs the ^= operation."
            }
          ]
        },
        {
          "title": "impl BitXorAssign<Saturating<i8>> for Saturating<i8>",
          "methods": [
            {
              "code": "pub fn bitxor_assign(&mut self, other: Saturating<i8>)",
              "text": "Performs the ^= operation."
            }
          ]
        },
        {
          "title": "impl BitXorAssign<Saturating<isize>> for Saturating<isize>",
          "methods": [
            {
              "code": "pub fn bitxor_assign(&mut self, other: Saturating<isize>)",
              "text": "Performs the ^= operation."
            }
          ]
        },
        {
          "title": "impl BitXorAssign<Saturating<u128>> for Saturating<u128>",
          "methods": [
            {
              "code": "pub fn bitxor_assign(&mut self, other: Saturating<u128>)",
              "text": "Performs the ^= operation."
            }
          ]
        },
        {
          "title": "impl BitXorAssign<Saturating<u16>> for Saturating<u16>",
          "methods": [
            {
              "code": "pub fn bitxor_assign(&mut self, other: Saturating<u16>)",
              "text": "Performs the ^= operation."
            }
          ]
        },
        {
          "title": "impl BitXorAssign<Saturating<u32>> for Saturating<u32>",
          "methods": [
            {
              "code": "pub fn bitxor_assign(&mut self, other: Saturating<u32>)",
              "text": "Performs the ^= operation."
            }
          ]
        },
        {
          "title": "impl BitXorAssign<Saturating<u64>> for Saturating<u64>",
          "methods": [
            {
              "code": "pub fn bitxor_assign(&mut self, other: Saturating<u64>)",
              "text": "Performs the ^= operation."
            }
          ]
        },
        {
          "title": "impl BitXorAssign<Saturating<u8>> for Saturating<u8>",
          "methods": [
            {
              "code": "pub fn bitxor_assign(&mut self, other: Saturating<u8>)",
              "text": "Performs the ^= operation."
            }
          ]
        },
        {
          "title": "impl BitXorAssign<Saturating<usize>> for Saturating<usize>",
          "methods": [
            {
              "code": "pub fn bitxor_assign(&mut self, other: Saturating<usize>)",
              "text": "Performs the ^= operation."
            }
          ]
        },
        {
          "title": "impl<T> Clone for Saturating<T> where T: Clone,",
          "methods": [
            {
              "code": "pub fn clone(&self) -> Saturating<T>",
              "text": "Returns a copy of the value."
            },
            {
              "code": "fn clone_from(&mut self, source: &Self)",
              "text": "Performs copy-assignment from source."
            }
          ]
        },
        {
          "title": "impl<T> Debug for Saturating<T> where T: Debug,",
          "methods": [
            {
              "code": "pub fn fmt(&self, f: &mut Formatter<'_>) -> Result<(), Error>",
              "text": "Formats the value using the given formatter."
            }
          ]
        },
        {
          "title": "impl<T> Default for Saturating<T> where T: Default,",
          "methods": [
            {
              "code": "pub fn default() -> Saturating<T>",
              "text": "Returns the “default value” for a type."
            }
          ]
        },
        {
          "title": "impl<T> Display for Saturating<T> where T: Display,",
          "methods": [
            {
              "code": "pub fn fmt(&self, f: &mut Formatter<'_>) -> Result<(), Error>",
              "text": "Formats the value using the given formatter."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Div<&'_ Saturating<i128>> for &'_ Saturating<i128>",
          "methods": [
            {
              "code": "type Output = <Saturating<i128> as Div<Saturating<i128>>>::Output",
              "text": "The resulting type after applying the / operator."
            },
            {
              "code": "pub fn div( self, other: &Saturating<i128>) -> <Saturating<i128> as Div<Saturating<i128>>>::Output",
              "text": "Performs the / operation."
            }
          ]
        },
        {
          "title": "impl<'_> Div<&'_ Saturating<i128>> for Saturating<i128>",
          "methods": [
            {
              "code": "type Output = <Saturating<i128> as Div<Saturating<i128>>>::Output",
              "text": "The resulting type after applying the / operator."
            },
            {
              "code": "pub fn div( self, other: &Saturating<i128>) -> <Saturating<i128> as Div<Saturating<i128>>>::Output",
              "text": "Performs the / operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Div<&'_ Saturating<i16>> for &'_ Saturating<i16>",
          "methods": [
            {
              "code": "type Output = <Saturating<i16> as Div<Saturating<i16>>>::Output",
              "text": "The resulting type after applying the / operator."
            },
            {
              "code": "pub fn div( self, other: &Saturating<i16>) -> <Saturating<i16> as Div<Saturating<i16>>>::Output",
              "text": "Performs the / operation."
            }
          ]
        },
        {
          "title": "impl<'_> Div<&'_ Saturating<i16>> for Saturating<i16>",
          "methods": [
            {
              "code": "type Output = <Saturating<i16> as Div<Saturating<i16>>>::Output",
              "text": "The resulting type after applying the / operator."
            },
            {
              "code": "pub fn div( self, other: &Saturating<i16>) -> <Saturating<i16> as Div<Saturating<i16>>>::Output",
              "text": "Performs the / operation."
            }
          ]
        },
        {
          "title": "impl<'_> Div<&'_ Saturating<i32>> for Saturating<i32>",
          "methods": [
            {
              "code": "type Output = <Saturating<i32> as Div<Saturating<i32>>>::Output",
              "text": "The resulting type after applying the / operator."
            },
            {
              "code": "pub fn div( self, other: &Saturating<i32>) -> <Saturating<i32> as Div<Saturating<i32>>>::Output",
              "text": "Performs the / operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Div<&'_ Saturating<i32>> for &'_ Saturating<i32>",
          "methods": [
            {
              "code": "type Output = <Saturating<i32> as Div<Saturating<i32>>>::Output",
              "text": "The resulting type after applying the / operator."
            },
            {
              "code": "pub fn div( self, other: &Saturating<i32>) -> <Saturating<i32> as Div<Saturating<i32>>>::Output",
              "text": "Performs the / operation."
            }
          ]
        },
        {
          "title": "impl<'_> Div<&'_ Saturating<i64>> for Saturating<i64>",
          "methods": [
            {
              "code": "type Output = <Saturating<i64> as Div<Saturating<i64>>>::Output",
              "text": "The resulting type after applying the / operator."
            },
            {
              "code": "pub fn div( self, other: &Saturating<i64>) -> <Saturating<i64> as Div<Saturating<i64>>>::Output",
              "text": "Performs the / operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Div<&'_ Saturating<i64>> for &'_ Saturating<i64>",
          "methods": [
            {
              "code": "type Output = <Saturating<i64> as Div<Saturating<i64>>>::Output",
              "text": "The resulting type after applying the / operator."
            },
            {
              "code": "pub fn div( self, other: &Saturating<i64>) -> <Saturating<i64> as Div<Saturating<i64>>>::Output",
              "text": "Performs the / operation."
            }
          ]
        },
        {
          "title": "impl<'_> Div<&'_ Saturating<i8>> for Saturating<i8>",
          "methods": [
            {
              "code": "type Output = <Saturating<i8> as Div<Saturating<i8>>>::Output",
              "text": "The resulting type after applying the / operator."
            },
            {
              "code": "pub fn div( self, other: &Saturating<i8>) -> <Saturating<i8> as Div<Saturating<i8>>>::Output",
              "text": "Performs the / operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Div<&'_ Saturating<i8>> for &'_ Saturating<i8>",
          "methods": [
            {
              "code": "type Output = <Saturating<i8> as Div<Saturating<i8>>>::Output",
              "text": "The resulting type after applying the / operator."
            },
            {
              "code": "pub fn div( self, other: &Saturating<i8>) -> <Saturating<i8> as Div<Saturating<i8>>>::Output",
              "text": "Performs the / operation."
            }
          ]
        },
        {
          "title": "impl<'_> Div<&'_ Saturating<isize>> for Saturating<isize>",
          "methods": [
            {
              "code": "type Output = <Saturating<isize> as Div<Saturating<isize>>>::Output",
              "text": "The resulting type after applying the / operator."
            },
            {
              "code": "pub fn div( self, other: &Saturating<isize>) -> <Saturating<isize> as Div<Saturating<isize>>>::Output",
              "text": "Performs the / operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Div<&'_ Saturating<isize>> for &'_ Saturating<isize>",
          "methods": [
            {
              "code": "type Output = <Saturating<isize> as Div<Saturating<isize>>>::Output",
              "text": "The resulting type after applying the / operator."
            },
            {
              "code": "pub fn div( self, other: &Saturating<isize>) -> <Saturating<isize> as Div<Saturating<isize>>>::Output",
              "text": "Performs the / operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Div<&'_ Saturating<u128>> for &'_ Saturating<u128>",
          "methods": [
            {
              "code": "type Output = <Saturating<u128> as Div<Saturating<u128>>>::Output",
              "text": "The resulting type after applying the / operator."
            },
            {
              "code": "pub fn div( self, other: &Saturating<u128>) -> <Saturating<u128> as Div<Saturating<u128>>>::Output",
              "text": "Performs the / operation."
            }
          ]
        },
        {
          "title": "impl<'_> Div<&'_ Saturating<u128>> for Saturating<u128>",
          "methods": [
            {
              "code": "type Output = <Saturating<u128> as Div<Saturating<u128>>>::Output",
              "text": "The resulting type after applying the / operator."
            },
            {
              "code": "pub fn div( self, other: &Saturating<u128>) -> <Saturating<u128> as Div<Saturating<u128>>>::Output",
              "text": "Performs the / operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Div<&'_ Saturating<u16>> for &'_ Saturating<u16>",
          "methods": [
            {
              "code": "type Output = <Saturating<u16> as Div<Saturating<u16>>>::Output",
              "text": "The resulting type after applying the / operator."
            },
            {
              "code": "pub fn div( self, other: &Saturating<u16>) -> <Saturating<u16> as Div<Saturating<u16>>>::Output",
              "text": "Performs the / operation."
            }
          ]
        },
        {
          "title": "impl<'_> Div<&'_ Saturating<u16>> for Saturating<u16>",
          "methods": [
            {
              "code": "type Output = <Saturating<u16> as Div<Saturating<u16>>>::Output",
              "text": "The resulting type after applying the / operator."
            },
            {
              "code": "pub fn div( self, other: &Saturating<u16>) -> <Saturating<u16> as Div<Saturating<u16>>>::Output",
              "text": "Performs the / operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Div<&'_ Saturating<u32>> for &'_ Saturating<u32>",
          "methods": [
            {
              "code": "type Output = <Saturating<u32> as Div<Saturating<u32>>>::Output",
              "text": "The resulting type after applying the / operator."
            },
            {
              "code": "pub fn div( self, other: &Saturating<u32>) -> <Saturating<u32> as Div<Saturating<u32>>>::Output",
              "text": "Performs the / operation."
            }
          ]
        },
        {
          "title": "impl<'_> Div<&'_ Saturating<u32>> for Saturating<u32>",
          "methods": [
            {
              "code": "type Output = <Saturating<u32> as Div<Saturating<u32>>>::Output",
              "text": "The resulting type after applying the / operator."
            },
            {
              "code": "pub fn div( self, other: &Saturating<u32>) -> <Saturating<u32> as Div<Saturating<u32>>>::Output",
              "text": "Performs the / operation."
            }
          ]
        },
        {
          "title": "impl<'_> Div<&'_ Saturating<u64>> for Saturating<u64>",
          "methods": [
            {
              "code": "type Output = <Saturating<u64> as Div<Saturating<u64>>>::Output",
              "text": "The resulting type after applying the / operator."
            },
            {
              "code": "pub fn div( self, other: &Saturating<u64>) -> <Saturating<u64> as Div<Saturating<u64>>>::Output",
              "text": "Performs the / operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Div<&'_ Saturating<u64>> for &'_ Saturating<u64>",
          "methods": [
            {
              "code": "type Output = <Saturating<u64> as Div<Saturating<u64>>>::Output",
              "text": "The resulting type after applying the / operator."
            },
            {
              "code": "pub fn div( self, other: &Saturating<u64>) -> <Saturating<u64> as Div<Saturating<u64>>>::Output",
              "text": "Performs the / operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Div<&'_ Saturating<u8>> for &'_ Saturating<u8>",
          "methods": [
            {
              "code": "type Output = <Saturating<u8> as Div<Saturating<u8>>>::Output",
              "text": "The resulting type after applying the / operator."
            },
            {
              "code": "pub fn div( self, other: &Saturating<u8>) -> <Saturating<u8> as Div<Saturating<u8>>>::Output",
              "text": "Performs the / operation."
            }
          ]
        },
        {
          "title": "impl<'_> Div<&'_ Saturating<u8>> for Saturating<u8>",
          "methods": [
            {
              "code": "type Output = <Saturating<u8> as Div<Saturating<u8>>>::Output",
              "text": "The resulting type after applying the / operator."
            },
            {
              "code": "pub fn div( self, other: &Saturating<u8>) -> <Saturating<u8> as Div<Saturating<u8>>>::Output",
              "text": "Performs the / operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Div<&'_ Saturating<usize>> for &'_ Saturating<usize>",
          "methods": [
            {
              "code": "type Output = <Saturating<usize> as Div<Saturating<usize>>>::Output",
              "text": "The resulting type after applying the / operator."
            },
            {
              "code": "pub fn div( self, other: &Saturating<usize>) -> <Saturating<usize> as Div<Saturating<usize>>>::Output",
              "text": "Performs the / operation."
            }
          ]
        },
        {
          "title": "impl<'_> Div<&'_ Saturating<usize>> for Saturating<usize>",
          "methods": [
            {
              "code": "type Output = <Saturating<usize> as Div<Saturating<usize>>>::Output",
              "text": "The resulting type after applying the / operator."
            },
            {
              "code": "pub fn div( self, other: &Saturating<usize>) -> <Saturating<usize> as Div<Saturating<usize>>>::Output",
              "text": "Performs the / operation."
            }
          ]
        },
        {
          "title": "impl Div<Saturating<i128>> for Saturating<i128>",
          "methods": [
            {
              "code": "type Output = Saturating<i128>",
              "text": "The resulting type after applying the / operator."
            },
            {
              "code": "pub fn div(self, other: Saturating<i128>) -> Saturating<i128>",
              "text": "Performs the / operation."
            }
          ]
        },
        {
          "title": "impl<'a> Div<Saturating<i128>> for &'a Saturating<i128>",
          "methods": [
            {
              "code": "type Output = <Saturating<i128> as Div<Saturating<i128>>>::Output",
              "text": "The resulting type after applying the / operator."
            },
            {
              "code": "pub fn div( self, other: Saturating<i128>) -> <Saturating<i128> as Div<Saturating<i128>>>::Output",
              "text": "Performs the / operation."
            }
          ]
        },
        {
          "title": "impl Div<Saturating<i16>> for Saturating<i16>",
          "methods": [
            {
              "code": "type Output = Saturating<i16>",
              "text": "The resulting type after applying the / operator."
            },
            {
              "code": "pub fn div(self, other: Saturating<i16>) -> Saturating<i16>",
              "text": "Performs the / operation."
            }
          ]
        },
        {
          "title": "impl<'a> Div<Saturating<i16>> for &'a Saturating<i16>",
          "methods": [
            {
              "code": "type Output = <Saturating<i16> as Div<Saturating<i16>>>::Output",
              "text": "The resulting type after applying the / operator."
            },
            {
              "code": "pub fn div( self, other: Saturating<i16>) -> <Saturating<i16> as Div<Saturating<i16>>>::Output",
              "text": "Performs the / operation."
            }
          ]
        },
        {
          "title": "impl Div<Saturating<i32>> for Saturating<i32>",
          "methods": [
            {
              "code": "type Output = Saturating<i32>",
              "text": "The resulting type after applying the / operator."
            },
            {
              "code": "pub fn div(self, other: Saturating<i32>) -> Saturating<i32>",
              "text": "Performs the / operation."
            }
          ]
        },
        {
          "title": "impl<'a> Div<Saturating<i32>> for &'a Saturating<i32>",
          "methods": [
            {
              "code": "type Output = <Saturating<i32> as Div<Saturating<i32>>>::Output",
              "text": "The resulting type after applying the / operator."
            },
            {
              "code": "pub fn div( self, other: Saturating<i32>) -> <Saturating<i32> as Div<Saturating<i32>>>::Output",
              "text": "Performs the / operation."
            }
          ]
        },
        {
          "title": "impl<'a> Div<Saturating<i64>> for &'a Saturating<i64>",
          "methods": [
            {
              "code": "type Output = <Saturating<i64> as Div<Saturating<i64>>>::Output",
              "text": "The resulting type after applying the / operator."
            },
            {
              "code": "pub fn div( self, other: Saturating<i64>) -> <Saturating<i64> as Div<Saturating<i64>>>::Output",
              "text": "Performs the / operation."
            }
          ]
        },
        {
          "title": "impl Div<Saturating<i64>> for Saturating<i64>",
          "methods": [
            {
              "code": "type Output = Saturating<i64>",
              "text": "The resulting type after applying the / operator."
            },
            {
              "code": "pub fn div(self, other: Saturating<i64>) -> Saturating<i64>",
              "text": "Performs the / operation."
            }
          ]
        },
        {
          "title": "impl Div<Saturating<i8>> for Saturating<i8>",
          "methods": [
            {
              "code": "type Output = Saturating<i8>",
              "text": "The resulting type after applying the / operator."
            },
            {
              "code": "pub fn div(self, other: Saturating<i8>) -> Saturating<i8>",
              "text": "Performs the / operation."
            }
          ]
        },
        {
          "title": "impl<'a> Div<Saturating<i8>> for &'a Saturating<i8>",
          "methods": [
            {
              "code": "type Output = <Saturating<i8> as Div<Saturating<i8>>>::Output",
              "text": "The resulting type after applying the / operator."
            },
            {
              "code": "pub fn div( self, other: Saturating<i8>) -> <Saturating<i8> as Div<Saturating<i8>>>::Output",
              "text": "Performs the / operation."
            }
          ]
        },
        {
          "title": "impl<'a> Div<Saturating<isize>> for &'a Saturating<isize>",
          "methods": [
            {
              "code": "type Output = <Saturating<isize> as Div<Saturating<isize>>>::Output",
              "text": "The resulting type after applying the / operator."
            },
            {
              "code": "pub fn div( self, other: Saturating<isize>) -> <Saturating<isize> as Div<Saturating<isize>>>::Output",
              "text": "Performs the / operation."
            }
          ]
        },
        {
          "title": "impl Div<Saturating<isize>> for Saturating<isize>",
          "methods": [
            {
              "code": "type Output = Saturating<isize>",
              "text": "The resulting type after applying the / operator."
            },
            {
              "code": "pub fn div(self, other: Saturating<isize>) -> Saturating<isize>",
              "text": "Performs the / operation."
            }
          ]
        },
        {
          "title": "impl Div<Saturating<u128>> for Saturating<u128>",
          "methods": [
            {
              "code": "type Output = Saturating<u128>",
              "text": "The resulting type after applying the / operator."
            },
            {
              "code": "pub fn div(self, other: Saturating<u128>) -> Saturating<u128>",
              "text": "Performs the / operation."
            }
          ]
        },
        {
          "title": "impl<'a> Div<Saturating<u128>> for &'a Saturating<u128>",
          "methods": [
            {
              "code": "type Output = <Saturating<u128> as Div<Saturating<u128>>>::Output",
              "text": "The resulting type after applying the / operator."
            },
            {
              "code": "pub fn div( self, other: Saturating<u128>) -> <Saturating<u128> as Div<Saturating<u128>>>::Output",
              "text": "Performs the / operation."
            }
          ]
        },
        {
          "title": "impl Div<Saturating<u16>> for Saturating<u16>",
          "methods": [
            {
              "code": "type Output = Saturating<u16>",
              "text": "The resulting type after applying the / operator."
            },
            {
              "code": "pub fn div(self, other: Saturating<u16>) -> Saturating<u16>",
              "text": "Performs the / operation."
            }
          ]
        },
        {
          "title": "impl<'a> Div<Saturating<u16>> for &'a Saturating<u16>",
          "methods": [
            {
              "code": "type Output = <Saturating<u16> as Div<Saturating<u16>>>::Output",
              "text": "The resulting type after applying the / operator."
            },
            {
              "code": "pub fn div( self, other: Saturating<u16>) -> <Saturating<u16> as Div<Saturating<u16>>>::Output",
              "text": "Performs the / operation."
            }
          ]
        },
        {
          "title": "impl<'a> Div<Saturating<u32>> for &'a Saturating<u32>",
          "methods": [
            {
              "code": "type Output = <Saturating<u32> as Div<Saturating<u32>>>::Output",
              "text": "The resulting type after applying the / operator."
            },
            {
              "code": "pub fn div( self, other: Saturating<u32>) -> <Saturating<u32> as Div<Saturating<u32>>>::Output",
              "text": "Performs the / operation."
            }
          ]
        },
        {
          "title": "impl Div<Saturating<u32>> for Saturating<u32>",
          "methods": [
            {
              "code": "type Output = Saturating<u32>",
              "text": "The resulting type after applying the / operator."
            },
            {
              "code": "pub fn div(self, other: Saturating<u32>) -> Saturating<u32>",
              "text": "Performs the / operation."
            }
          ]
        },
        {
          "title": "impl<'a> Div<Saturating<u64>> for &'a Saturating<u64>",
          "methods": [
            {
              "code": "type Output = <Saturating<u64> as Div<Saturating<u64>>>::Output",
              "text": "The resulting type after applying the / operator."
            },
            {
              "code": "pub fn div( self, other: Saturating<u64>) -> <Saturating<u64> as Div<Saturating<u64>>>::Output",
              "text": "Performs the / operation."
            }
          ]
        },
        {
          "title": "impl Div<Saturating<u64>> for Saturating<u64>",
          "methods": [
            {
              "code": "type Output = Saturating<u64>",
              "text": "The resulting type after applying the / operator."
            },
            {
              "code": "pub fn div(self, other: Saturating<u64>) -> Saturating<u64>",
              "text": "Performs the / operation."
            }
          ]
        },
        {
          "title": "impl Div<Saturating<u8>> for Saturating<u8>",
          "methods": [
            {
              "code": "type Output = Saturating<u8>",
              "text": "The resulting type after applying the / operator."
            },
            {
              "code": "pub fn div(self, other: Saturating<u8>) -> Saturating<u8>",
              "text": "Performs the / operation."
            }
          ]
        },
        {
          "title": "impl<'a> Div<Saturating<u8>> for &'a Saturating<u8>",
          "methods": [
            {
              "code": "type Output = <Saturating<u8> as Div<Saturating<u8>>>::Output",
              "text": "The resulting type after applying the / operator."
            },
            {
              "code": "pub fn div( self, other: Saturating<u8>) -> <Saturating<u8> as Div<Saturating<u8>>>::Output",
              "text": "Performs the / operation."
            }
          ]
        },
        {
          "title": "impl<'a> Div<Saturating<usize>> for &'a Saturating<usize>",
          "methods": [
            {
              "code": "type Output = <Saturating<usize> as Div<Saturating<usize>>>::Output",
              "text": "The resulting type after applying the / operator."
            },
            {
              "code": "pub fn div( self, other: Saturating<usize>) -> <Saturating<usize> as Div<Saturating<usize>>>::Output",
              "text": "Performs the / operation."
            }
          ]
        },
        {
          "title": "impl Div<Saturating<usize>> for Saturating<usize>",
          "methods": [
            {
              "code": "type Output = Saturating<usize>",
              "text": "The resulting type after applying the / operator."
            },
            {
              "code": "pub fn div(self, other: Saturating<usize>) -> Saturating<usize>",
              "text": "Performs the / operation."
            }
          ]
        },
        {
          "title": "impl<'_> DivAssign<&'_ Saturating<i128>> for Saturating<i128>",
          "methods": [
            {
              "code": "pub fn div_assign(&mut self, other: &Saturating<i128>)",
              "text": "Performs the /= operation."
            }
          ]
        },
        {
          "title": "impl<'_> DivAssign<&'_ Saturating<i16>> for Saturating<i16>",
          "methods": [
            {
              "code": "pub fn div_assign(&mut self, other: &Saturating<i16>)",
              "text": "Performs the /= operation."
            }
          ]
        },
        {
          "title": "impl<'_> DivAssign<&'_ Saturating<i32>> for Saturating<i32>",
          "methods": [
            {
              "code": "pub fn div_assign(&mut self, other: &Saturating<i32>)",
              "text": "Performs the /= operation."
            }
          ]
        },
        {
          "title": "impl<'_> DivAssign<&'_ Saturating<i64>> for Saturating<i64>",
          "methods": [
            {
              "code": "pub fn div_assign(&mut self, other: &Saturating<i64>)",
              "text": "Performs the /= operation."
            }
          ]
        },
        {
          "title": "impl<'_> DivAssign<&'_ Saturating<i8>> for Saturating<i8>",
          "methods": [
            {
              "code": "pub fn div_assign(&mut self, other: &Saturating<i8>)",
              "text": "Performs the /= operation."
            }
          ]
        },
        {
          "title": "impl<'_> DivAssign<&'_ Saturating<isize>> for Saturating<isize>",
          "methods": [
            {
              "code": "pub fn div_assign(&mut self, other: &Saturating<isize>)",
              "text": "Performs the /= operation."
            }
          ]
        },
        {
          "title": "impl<'_> DivAssign<&'_ Saturating<u128>> for Saturating<u128>",
          "methods": [
            {
              "code": "pub fn div_assign(&mut self, other: &Saturating<u128>)",
              "text": "Performs the /= operation."
            }
          ]
        },
        {
          "title": "impl<'_> DivAssign<&'_ Saturating<u16>> for Saturating<u16>",
          "methods": [
            {
              "code": "pub fn div_assign(&mut self, other: &Saturating<u16>)",
              "text": "Performs the /= operation."
            }
          ]
        },
        {
          "title": "impl<'_> DivAssign<&'_ Saturating<u32>> for Saturating<u32>",
          "methods": [
            {
              "code": "pub fn div_assign(&mut self, other: &Saturating<u32>)",
              "text": "Performs the /= operation."
            }
          ]
        },
        {
          "title": "impl<'_> DivAssign<&'_ Saturating<u64>> for Saturating<u64>",
          "methods": [
            {
              "code": "pub fn div_assign(&mut self, other: &Saturating<u64>)",
              "text": "Performs the /= operation."
            }
          ]
        },
        {
          "title": "impl<'_> DivAssign<&'_ Saturating<u8>> for Saturating<u8>",
          "methods": [
            {
              "code": "pub fn div_assign(&mut self, other: &Saturating<u8>)",
              "text": "Performs the /= operation."
            }
          ]
        },
        {
          "title": "impl<'_> DivAssign<&'_ Saturating<usize>> for Saturating<usize>",
          "methods": [
            {
              "code": "pub fn div_assign(&mut self, other: &Saturating<usize>)",
              "text": "Performs the /= operation."
            }
          ]
        },
        {
          "title": "impl DivAssign<Saturating<i128>> for Saturating<i128>",
          "methods": [
            {
              "code": "pub fn div_assign(&mut self, other: Saturating<i128>)",
              "text": "Performs the /= operation."
            }
          ]
        },
        {
          "title": "impl DivAssign<Saturating<i16>> for Saturating<i16>",
          "methods": [
            {
              "code": "pub fn div_assign(&mut self, other: Saturating<i16>)",
              "text": "Performs the /= operation."
            }
          ]
        },
        {
          "title": "impl DivAssign<Saturating<i32>> for Saturating<i32>",
          "methods": [
            {
              "code": "pub fn div_assign(&mut self, other: Saturating<i32>)",
              "text": "Performs the /= operation."
            }
          ]
        },
        {
          "title": "impl DivAssign<Saturating<i64>> for Saturating<i64>",
          "methods": [
            {
              "code": "pub fn div_assign(&mut self, other: Saturating<i64>)",
              "text": "Performs the /= operation."
            }
          ]
        },
        {
          "title": "impl DivAssign<Saturating<i8>> for Saturating<i8>",
          "methods": [
            {
              "code": "pub fn div_assign(&mut self, other: Saturating<i8>)",
              "text": "Performs the /= operation."
            }
          ]
        },
        {
          "title": "impl DivAssign<Saturating<isize>> for Saturating<isize>",
          "methods": [
            {
              "code": "pub fn div_assign(&mut self, other: Saturating<isize>)",
              "text": "Performs the /= operation."
            }
          ]
        },
        {
          "title": "impl DivAssign<Saturating<u128>> for Saturating<u128>",
          "methods": [
            {
              "code": "pub fn div_assign(&mut self, other: Saturating<u128>)",
              "text": "Performs the /= operation."
            }
          ]
        },
        {
          "title": "impl DivAssign<Saturating<u16>> for Saturating<u16>",
          "methods": [
            {
              "code": "pub fn div_assign(&mut self, other: Saturating<u16>)",
              "text": "Performs the /= operation."
            }
          ]
        },
        {
          "title": "impl DivAssign<Saturating<u32>> for Saturating<u32>",
          "methods": [
            {
              "code": "pub fn div_assign(&mut self, other: Saturating<u32>)",
              "text": "Performs the /= operation."
            }
          ]
        },
        {
          "title": "impl DivAssign<Saturating<u64>> for Saturating<u64>",
          "methods": [
            {
              "code": "pub fn div_assign(&mut self, other: Saturating<u64>)",
              "text": "Performs the /= operation."
            }
          ]
        },
        {
          "title": "impl DivAssign<Saturating<u8>> for Saturating<u8>",
          "methods": [
            {
              "code": "pub fn div_assign(&mut self, other: Saturating<u8>)",
              "text": "Performs the /= operation."
            }
          ]
        },
        {
          "title": "impl DivAssign<Saturating<usize>> for Saturating<usize>",
          "methods": [
            {
              "code": "pub fn div_assign(&mut self, other: Saturating<usize>)",
              "text": "Performs the /= operation."
            }
          ]
        },
        {
          "title": "impl<T> Hash for Saturating<T> where T: Hash,",
          "methods": [
            {
              "code": "pub fn hash<__H>(&self, state: &mut __H) where __H: Hasher,",
              "text": "Feeds this value into the given Hasher."
            },
            {
              "code": "fn hash_slice<H>(data: &[Self], state: &mut H) where H: Hasher,",
              "text": "Feeds a slice of this type into the given Hasher."
            }
          ]
        },
        {
          "title": "impl<T> LowerHex for Saturating<T> where T: LowerHex,",
          "methods": [
            {
              "code": "pub fn fmt(&self, f: &mut Formatter<'_>) -> Result<(), Error>",
              "text": "Formats the value using the given formatter."
            }
          ]
        },
        {
          "title": "impl<'_> Mul<&'_ Saturating<i128>> for Saturating<i128>",
          "methods": [
            {
              "code": "type Output = <Saturating<i128> as Mul<Saturating<i128>>>::Output",
              "text": "The resulting type after applying the * operator."
            },
            {
              "code": "pub fn mul( self, other: &Saturating<i128>) -> <Saturating<i128> as Mul<Saturating<i128>>>::Output",
              "text": "Performs the * operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Mul<&'_ Saturating<i128>> for &'_ Saturating<i128>",
          "methods": [
            {
              "code": "type Output = <Saturating<i128> as Mul<Saturating<i128>>>::Output",
              "text": "The resulting type after applying the * operator."
            },
            {
              "code": "pub fn mul( self, other: &Saturating<i128>) -> <Saturating<i128> as Mul<Saturating<i128>>>::Output",
              "text": "Performs the * operation."
            }
          ]
        },
        {
          "title": "impl<'_> Mul<&'_ Saturating<i16>> for Saturating<i16>",
          "methods": [
            {
              "code": "type Output = <Saturating<i16> as Mul<Saturating<i16>>>::Output",
              "text": "The resulting type after applying the * operator."
            },
            {
              "code": "pub fn mul( self, other: &Saturating<i16>) -> <Saturating<i16> as Mul<Saturating<i16>>>::Output",
              "text": "Performs the * operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Mul<&'_ Saturating<i16>> for &'_ Saturating<i16>",
          "methods": [
            {
              "code": "type Output = <Saturating<i16> as Mul<Saturating<i16>>>::Output",
              "text": "The resulting type after applying the * operator."
            },
            {
              "code": "pub fn mul( self, other: &Saturating<i16>) -> <Saturating<i16> as Mul<Saturating<i16>>>::Output",
              "text": "Performs the * operation."
            }
          ]
        },
        {
          "title": "impl<'_> Mul<&'_ Saturating<i32>> for Saturating<i32>",
          "methods": [
            {
              "code": "type Output = <Saturating<i32> as Mul<Saturating<i32>>>::Output",
              "text": "The resulting type after applying the * operator."
            },
            {
              "code": "pub fn mul( self, other: &Saturating<i32>) -> <Saturating<i32> as Mul<Saturating<i32>>>::Output",
              "text": "Performs the * operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Mul<&'_ Saturating<i32>> for &'_ Saturating<i32>",
          "methods": [
            {
              "code": "type Output = <Saturating<i32> as Mul<Saturating<i32>>>::Output",
              "text": "The resulting type after applying the * operator."
            },
            {
              "code": "pub fn mul( self, other: &Saturating<i32>) -> <Saturating<i32> as Mul<Saturating<i32>>>::Output",
              "text": "Performs the * operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Mul<&'_ Saturating<i64>> for &'_ Saturating<i64>",
          "methods": [
            {
              "code": "type Output = <Saturating<i64> as Mul<Saturating<i64>>>::Output",
              "text": "The resulting type after applying the * operator."
            },
            {
              "code": "pub fn mul( self, other: &Saturating<i64>) -> <Saturating<i64> as Mul<Saturating<i64>>>::Output",
              "text": "Performs the * operation."
            }
          ]
        },
        {
          "title": "impl<'_> Mul<&'_ Saturating<i64>> for Saturating<i64>",
          "methods": [
            {
              "code": "type Output = <Saturating<i64> as Mul<Saturating<i64>>>::Output",
              "text": "The resulting type after applying the * operator."
            },
            {
              "code": "pub fn mul( self, other: &Saturating<i64>) -> <Saturating<i64> as Mul<Saturating<i64>>>::Output",
              "text": "Performs the * operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Mul<&'_ Saturating<i8>> for &'_ Saturating<i8>",
          "methods": [
            {
              "code": "type Output = <Saturating<i8> as Mul<Saturating<i8>>>::Output",
              "text": "The resulting type after applying the * operator."
            },
            {
              "code": "pub fn mul( self, other: &Saturating<i8>) -> <Saturating<i8> as Mul<Saturating<i8>>>::Output",
              "text": "Performs the * operation."
            }
          ]
        },
        {
          "title": "impl<'_> Mul<&'_ Saturating<i8>> for Saturating<i8>",
          "methods": [
            {
              "code": "type Output = <Saturating<i8> as Mul<Saturating<i8>>>::Output",
              "text": "The resulting type after applying the * operator."
            },
            {
              "code": "pub fn mul( self, other: &Saturating<i8>) -> <Saturating<i8> as Mul<Saturating<i8>>>::Output",
              "text": "Performs the * operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Mul<&'_ Saturating<isize>> for &'_ Saturating<isize>",
          "methods": [
            {
              "code": "type Output = <Saturating<isize> as Mul<Saturating<isize>>>::Output",
              "text": "The resulting type after applying the * operator."
            },
            {
              "code": "pub fn mul( self, other: &Saturating<isize>) -> <Saturating<isize> as Mul<Saturating<isize>>>::Output",
              "text": "Performs the * operation."
            }
          ]
        },
        {
          "title": "impl<'_> Mul<&'_ Saturating<isize>> for Saturating<isize>",
          "methods": [
            {
              "code": "type Output = <Saturating<isize> as Mul<Saturating<isize>>>::Output",
              "text": "The resulting type after applying the * operator."
            },
            {
              "code": "pub fn mul( self, other: &Saturating<isize>) -> <Saturating<isize> as Mul<Saturating<isize>>>::Output",
              "text": "Performs the * operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Mul<&'_ Saturating<u128>> for &'_ Saturating<u128>",
          "methods": [
            {
              "code": "type Output = <Saturating<u128> as Mul<Saturating<u128>>>::Output",
              "text": "The resulting type after applying the * operator."
            },
            {
              "code": "pub fn mul( self, other: &Saturating<u128>) -> <Saturating<u128> as Mul<Saturating<u128>>>::Output",
              "text": "Performs the * operation."
            }
          ]
        },
        {
          "title": "impl<'_> Mul<&'_ Saturating<u128>> for Saturating<u128>",
          "methods": [
            {
              "code": "type Output = <Saturating<u128> as Mul<Saturating<u128>>>::Output",
              "text": "The resulting type after applying the * operator."
            },
            {
              "code": "pub fn mul( self, other: &Saturating<u128>) -> <Saturating<u128> as Mul<Saturating<u128>>>::Output",
              "text": "Performs the * operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Mul<&'_ Saturating<u16>> for &'_ Saturating<u16>",
          "methods": [
            {
              "code": "type Output = <Saturating<u16> as Mul<Saturating<u16>>>::Output",
              "text": "The resulting type after applying the * operator."
            },
            {
              "code": "pub fn mul( self, other: &Saturating<u16>) -> <Saturating<u16> as Mul<Saturating<u16>>>::Output",
              "text": "Performs the * operation."
            }
          ]
        },
        {
          "title": "impl<'_> Mul<&'_ Saturating<u16>> for Saturating<u16>",
          "methods": [
            {
              "code": "type Output = <Saturating<u16> as Mul<Saturating<u16>>>::Output",
              "text": "The resulting type after applying the * operator."
            },
            {
              "code": "pub fn mul( self, other: &Saturating<u16>) -> <Saturating<u16> as Mul<Saturating<u16>>>::Output",
              "text": "Performs the * operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Mul<&'_ Saturating<u32>> for &'_ Saturating<u32>",
          "methods": [
            {
              "code": "type Output = <Saturating<u32> as Mul<Saturating<u32>>>::Output",
              "text": "The resulting type after applying the * operator."
            },
            {
              "code": "pub fn mul( self, other: &Saturating<u32>) -> <Saturating<u32> as Mul<Saturating<u32>>>::Output",
              "text": "Performs the * operation."
            }
          ]
        },
        {
          "title": "impl<'_> Mul<&'_ Saturating<u32>> for Saturating<u32>",
          "methods": [
            {
              "code": "type Output = <Saturating<u32> as Mul<Saturating<u32>>>::Output",
              "text": "The resulting type after applying the * operator."
            },
            {
              "code": "pub fn mul( self, other: &Saturating<u32>) -> <Saturating<u32> as Mul<Saturating<u32>>>::Output",
              "text": "Performs the * operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Mul<&'_ Saturating<u64>> for &'_ Saturating<u64>",
          "methods": [
            {
              "code": "type Output = <Saturating<u64> as Mul<Saturating<u64>>>::Output",
              "text": "The resulting type after applying the * operator."
            },
            {
              "code": "pub fn mul( self, other: &Saturating<u64>) -> <Saturating<u64> as Mul<Saturating<u64>>>::Output",
              "text": "Performs the * operation."
            }
          ]
        },
        {
          "title": "impl<'_> Mul<&'_ Saturating<u64>> for Saturating<u64>",
          "methods": [
            {
              "code": "type Output = <Saturating<u64> as Mul<Saturating<u64>>>::Output",
              "text": "The resulting type after applying the * operator."
            },
            {
              "code": "pub fn mul( self, other: &Saturating<u64>) -> <Saturating<u64> as Mul<Saturating<u64>>>::Output",
              "text": "Performs the * operation."
            }
          ]
        },
        {
          "title": "impl<'_> Mul<&'_ Saturating<u8>> for Saturating<u8>",
          "methods": [
            {
              "code": "type Output = <Saturating<u8> as Mul<Saturating<u8>>>::Output",
              "text": "The resulting type after applying the * operator."
            },
            {
              "code": "pub fn mul( self, other: &Saturating<u8>) -> <Saturating<u8> as Mul<Saturating<u8>>>::Output",
              "text": "Performs the * operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Mul<&'_ Saturating<u8>> for &'_ Saturating<u8>",
          "methods": [
            {
              "code": "type Output = <Saturating<u8> as Mul<Saturating<u8>>>::Output",
              "text": "The resulting type after applying the * operator."
            },
            {
              "code": "pub fn mul( self, other: &Saturating<u8>) -> <Saturating<u8> as Mul<Saturating<u8>>>::Output",
              "text": "Performs the * operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Mul<&'_ Saturating<usize>> for &'_ Saturating<usize>",
          "methods": [
            {
              "code": "type Output = <Saturating<usize> as Mul<Saturating<usize>>>::Output",
              "text": "The resulting type after applying the * operator."
            },
            {
              "code": "pub fn mul( self, other: &Saturating<usize>) -> <Saturating<usize> as Mul<Saturating<usize>>>::Output",
              "text": "Performs the * operation."
            }
          ]
        },
        {
          "title": "impl<'_> Mul<&'_ Saturating<usize>> for Saturating<usize>",
          "methods": [
            {
              "code": "type Output = <Saturating<usize> as Mul<Saturating<usize>>>::Output",
              "text": "The resulting type after applying the * operator."
            },
            {
              "code": "pub fn mul( self, other: &Saturating<usize>) -> <Saturating<usize> as Mul<Saturating<usize>>>::Output",
              "text": "Performs the * operation."
            }
          ]
        },
        {
          "title": "impl<'a> Mul<Saturating<i128>> for &'a Saturating<i128>",
          "methods": [
            {
              "code": "type Output = <Saturating<i128> as Mul<Saturating<i128>>>::Output",
              "text": "The resulting type after applying the * operator."
            },
            {
              "code": "pub fn mul( self, other: Saturating<i128>) -> <Saturating<i128> as Mul<Saturating<i128>>>::Output",
              "text": "Performs the * operation."
            }
          ]
        },
        {
          "title": "impl Mul<Saturating<i128>> for Saturating<i128>",
          "methods": [
            {
              "code": "type Output = Saturating<i128>",
              "text": "The resulting type after applying the * operator."
            },
            {
              "code": "pub fn mul(self, other: Saturating<i128>) -> Saturating<i128>",
              "text": "Performs the * operation."
            }
          ]
        },
        {
          "title": "impl<'a> Mul<Saturating<i16>> for &'a Saturating<i16>",
          "methods": [
            {
              "code": "type Output = <Saturating<i16> as Mul<Saturating<i16>>>::Output",
              "text": "The resulting type after applying the * operator."
            },
            {
              "code": "pub fn mul( self, other: Saturating<i16>) -> <Saturating<i16> as Mul<Saturating<i16>>>::Output",
              "text": "Performs the * operation."
            }
          ]
        },
        {
          "title": "impl Mul<Saturating<i16>> for Saturating<i16>",
          "methods": [
            {
              "code": "type Output = Saturating<i16>",
              "text": "The resulting type after applying the * operator."
            },
            {
              "code": "pub fn mul(self, other: Saturating<i16>) -> Saturating<i16>",
              "text": "Performs the * operation."
            }
          ]
        },
        {
          "title": "impl Mul<Saturating<i32>> for Saturating<i32>",
          "methods": [
            {
              "code": "type Output = Saturating<i32>",
              "text": "The resulting type after applying the * operator."
            },
            {
              "code": "pub fn mul(self, other: Saturating<i32>) -> Saturating<i32>",
              "text": "Performs the * operation."
            }
          ]
        },
        {
          "title": "impl<'a> Mul<Saturating<i32>> for &'a Saturating<i32>",
          "methods": [
            {
              "code": "type Output = <Saturating<i32> as Mul<Saturating<i32>>>::Output",
              "text": "The resulting type after applying the * operator."
            },
            {
              "code": "pub fn mul( self, other: Saturating<i32>) -> <Saturating<i32> as Mul<Saturating<i32>>>::Output",
              "text": "Performs the * operation."
            }
          ]
        },
        {
          "title": "impl<'a> Mul<Saturating<i64>> for &'a Saturating<i64>",
          "methods": [
            {
              "code": "type Output = <Saturating<i64> as Mul<Saturating<i64>>>::Output",
              "text": "The resulting type after applying the * operator."
            },
            {
              "code": "pub fn mul( self, other: Saturating<i64>) -> <Saturating<i64> as Mul<Saturating<i64>>>::Output",
              "text": "Performs the * operation."
            }
          ]
        },
        {
          "title": "impl Mul<Saturating<i64>> for Saturating<i64>",
          "methods": [
            {
              "code": "type Output = Saturating<i64>",
              "text": "The resulting type after applying the * operator."
            },
            {
              "code": "pub fn mul(self, other: Saturating<i64>) -> Saturating<i64>",
              "text": "Performs the * operation."
            }
          ]
        },
        {
          "title": "impl Mul<Saturating<i8>> for Saturating<i8>",
          "methods": [
            {
              "code": "type Output = Saturating<i8>",
              "text": "The resulting type after applying the * operator."
            },
            {
              "code": "pub fn mul(self, other: Saturating<i8>) -> Saturating<i8>",
              "text": "Performs the * operation."
            }
          ]
        },
        {
          "title": "impl<'a> Mul<Saturating<i8>> for &'a Saturating<i8>",
          "methods": [
            {
              "code": "type Output = <Saturating<i8> as Mul<Saturating<i8>>>::Output",
              "text": "The resulting type after applying the * operator."
            },
            {
              "code": "pub fn mul( self, other: Saturating<i8>) -> <Saturating<i8> as Mul<Saturating<i8>>>::Output",
              "text": "Performs the * operation."
            }
          ]
        },
        {
          "title": "impl<'a> Mul<Saturating<isize>> for &'a Saturating<isize>",
          "methods": [
            {
              "code": "type Output = <Saturating<isize> as Mul<Saturating<isize>>>::Output",
              "text": "The resulting type after applying the * operator."
            },
            {
              "code": "pub fn mul( self, other: Saturating<isize>) -> <Saturating<isize> as Mul<Saturating<isize>>>::Output",
              "text": "Performs the * operation."
            }
          ]
        },
        {
          "title": "impl Mul<Saturating<isize>> for Saturating<isize>",
          "methods": [
            {
              "code": "type Output = Saturating<isize>",
              "text": "The resulting type after applying the * operator."
            },
            {
              "code": "pub fn mul(self, other: Saturating<isize>) -> Saturating<isize>",
              "text": "Performs the * operation."
            }
          ]
        },
        {
          "title": "impl Mul<Saturating<u128>> for Saturating<u128>",
          "methods": [
            {
              "code": "type Output = Saturating<u128>",
              "text": "The resulting type after applying the * operator."
            },
            {
              "code": "pub fn mul(self, other: Saturating<u128>) -> Saturating<u128>",
              "text": "Performs the * operation."
            }
          ]
        },
        {
          "title": "impl<'a> Mul<Saturating<u128>> for &'a Saturating<u128>",
          "methods": [
            {
              "code": "type Output = <Saturating<u128> as Mul<Saturating<u128>>>::Output",
              "text": "The resulting type after applying the * operator."
            },
            {
              "code": "pub fn mul( self, other: Saturating<u128>) -> <Saturating<u128> as Mul<Saturating<u128>>>::Output",
              "text": "Performs the * operation."
            }
          ]
        },
        {
          "title": "impl Mul<Saturating<u16>> for Saturating<u16>",
          "methods": [
            {
              "code": "type Output = Saturating<u16>",
              "text": "The resulting type after applying the * operator."
            },
            {
              "code": "pub fn mul(self, other: Saturating<u16>) -> Saturating<u16>",
              "text": "Performs the * operation."
            }
          ]
        },
        {
          "title": "impl<'a> Mul<Saturating<u16>> for &'a Saturating<u16>",
          "methods": [
            {
              "code": "type Output = <Saturating<u16> as Mul<Saturating<u16>>>::Output",
              "text": "The resulting type after applying the * operator."
            },
            {
              "code": "pub fn mul( self, other: Saturating<u16>) -> <Saturating<u16> as Mul<Saturating<u16>>>::Output",
              "text": "Performs the * operation."
            }
          ]
        },
        {
          "title": "impl<'a> Mul<Saturating<u32>> for &'a Saturating<u32>",
          "methods": [
            {
              "code": "type Output = <Saturating<u32> as Mul<Saturating<u32>>>::Output",
              "text": "The resulting type after applying the * operator."
            },
            {
              "code": "pub fn mul( self, other: Saturating<u32>) -> <Saturating<u32> as Mul<Saturating<u32>>>::Output",
              "text": "Performs the * operation."
            }
          ]
        },
        {
          "title": "impl Mul<Saturating<u32>> for Saturating<u32>",
          "methods": [
            {
              "code": "type Output = Saturating<u32>",
              "text": "The resulting type after applying the * operator."
            },
            {
              "code": "pub fn mul(self, other: Saturating<u32>) -> Saturating<u32>",
              "text": "Performs the * operation."
            }
          ]
        },
        {
          "title": "impl<'a> Mul<Saturating<u64>> for &'a Saturating<u64>",
          "methods": [
            {
              "code": "type Output = <Saturating<u64> as Mul<Saturating<u64>>>::Output",
              "text": "The resulting type after applying the * operator."
            },
            {
              "code": "pub fn mul( self, other: Saturating<u64>) -> <Saturating<u64> as Mul<Saturating<u64>>>::Output",
              "text": "Performs the * operation."
            }
          ]
        },
        {
          "title": "impl Mul<Saturating<u64>> for Saturating<u64>",
          "methods": [
            {
              "code": "type Output = Saturating<u64>",
              "text": "The resulting type after applying the * operator."
            },
            {
              "code": "pub fn mul(self, other: Saturating<u64>) -> Saturating<u64>",
              "text": "Performs the * operation."
            }
          ]
        },
        {
          "title": "impl Mul<Saturating<u8>> for Saturating<u8>",
          "methods": [
            {
              "code": "type Output = Saturating<u8>",
              "text": "The resulting type after applying the * operator."
            },
            {
              "code": "pub fn mul(self, other: Saturating<u8>) -> Saturating<u8>",
              "text": "Performs the * operation."
            }
          ]
        },
        {
          "title": "impl<'a> Mul<Saturating<u8>> for &'a Saturating<u8>",
          "methods": [
            {
              "code": "type Output = <Saturating<u8> as Mul<Saturating<u8>>>::Output",
              "text": "The resulting type after applying the * operator."
            },
            {
              "code": "pub fn mul( self, other: Saturating<u8>) -> <Saturating<u8> as Mul<Saturating<u8>>>::Output",
              "text": "Performs the * operation."
            }
          ]
        },
        {
          "title": "impl<'a> Mul<Saturating<usize>> for &'a Saturating<usize>",
          "methods": [
            {
              "code": "type Output = <Saturating<usize> as Mul<Saturating<usize>>>::Output",
              "text": "The resulting type after applying the * operator."
            },
            {
              "code": "pub fn mul( self, other: Saturating<usize>) -> <Saturating<usize> as Mul<Saturating<usize>>>::Output",
              "text": "Performs the * operation."
            }
          ]
        },
        {
          "title": "impl Mul<Saturating<usize>> for Saturating<usize>",
          "methods": [
            {
              "code": "type Output = Saturating<usize>",
              "text": "The resulting type after applying the * operator."
            },
            {
              "code": "pub fn mul(self, other: Saturating<usize>) -> Saturating<usize>",
              "text": "Performs the * operation."
            }
          ]
        },
        {
          "title": "impl<'_> MulAssign<&'_ Saturating<i128>> for Saturating<i128>",
          "methods": [
            {
              "code": "pub fn mul_assign(&mut self, other: &Saturating<i128>)",
              "text": "Performs the *= operation."
            }
          ]
        },
        {
          "title": "impl<'_> MulAssign<&'_ Saturating<i16>> for Saturating<i16>",
          "methods": [
            {
              "code": "pub fn mul_assign(&mut self, other: &Saturating<i16>)",
              "text": "Performs the *= operation."
            }
          ]
        },
        {
          "title": "impl<'_> MulAssign<&'_ Saturating<i32>> for Saturating<i32>",
          "methods": [
            {
              "code": "pub fn mul_assign(&mut self, other: &Saturating<i32>)",
              "text": "Performs the *= operation."
            }
          ]
        },
        {
          "title": "impl<'_> MulAssign<&'_ Saturating<i64>> for Saturating<i64>",
          "methods": [
            {
              "code": "pub fn mul_assign(&mut self, other: &Saturating<i64>)",
              "text": "Performs the *= operation."
            }
          ]
        },
        {
          "title": "impl<'_> MulAssign<&'_ Saturating<i8>> for Saturating<i8>",
          "methods": [
            {
              "code": "pub fn mul_assign(&mut self, other: &Saturating<i8>)",
              "text": "Performs the *= operation."
            }
          ]
        },
        {
          "title": "impl<'_> MulAssign<&'_ Saturating<isize>> for Saturating<isize>",
          "methods": [
            {
              "code": "pub fn mul_assign(&mut self, other: &Saturating<isize>)",
              "text": "Performs the *= operation."
            }
          ]
        },
        {
          "title": "impl<'_> MulAssign<&'_ Saturating<u128>> for Saturating<u128>",
          "methods": [
            {
              "code": "pub fn mul_assign(&mut self, other: &Saturating<u128>)",
              "text": "Performs the *= operation."
            }
          ]
        },
        {
          "title": "impl<'_> MulAssign<&'_ Saturating<u16>> for Saturating<u16>",
          "methods": [
            {
              "code": "pub fn mul_assign(&mut self, other: &Saturating<u16>)",
              "text": "Performs the *= operation."
            }
          ]
        },
        {
          "title": "impl<'_> MulAssign<&'_ Saturating<u32>> for Saturating<u32>",
          "methods": [
            {
              "code": "pub fn mul_assign(&mut self, other: &Saturating<u32>)",
              "text": "Performs the *= operation."
            }
          ]
        },
        {
          "title": "impl<'_> MulAssign<&'_ Saturating<u64>> for Saturating<u64>",
          "methods": [
            {
              "code": "pub fn mul_assign(&mut self, other: &Saturating<u64>)",
              "text": "Performs the *= operation."
            }
          ]
        },
        {
          "title": "impl<'_> MulAssign<&'_ Saturating<u8>> for Saturating<u8>",
          "methods": [
            {
              "code": "pub fn mul_assign(&mut self, other: &Saturating<u8>)",
              "text": "Performs the *= operation."
            }
          ]
        },
        {
          "title": "impl<'_> MulAssign<&'_ Saturating<usize>> for Saturating<usize>",
          "methods": [
            {
              "code": "pub fn mul_assign(&mut self, other: &Saturating<usize>)",
              "text": "Performs the *= operation."
            }
          ]
        },
        {
          "title": "impl MulAssign<Saturating<i128>> for Saturating<i128>",
          "methods": [
            {
              "code": "pub fn mul_assign(&mut self, other: Saturating<i128>)",
              "text": "Performs the *= operation."
            }
          ]
        },
        {
          "title": "impl MulAssign<Saturating<i16>> for Saturating<i16>",
          "methods": [
            {
              "code": "pub fn mul_assign(&mut self, other: Saturating<i16>)",
              "text": "Performs the *= operation."
            }
          ]
        },
        {
          "title": "impl MulAssign<Saturating<i32>> for Saturating<i32>",
          "methods": [
            {
              "code": "pub fn mul_assign(&mut self, other: Saturating<i32>)",
              "text": "Performs the *= operation."
            }
          ]
        },
        {
          "title": "impl MulAssign<Saturating<i64>> for Saturating<i64>",
          "methods": [
            {
              "code": "pub fn mul_assign(&mut self, other: Saturating<i64>)",
              "text": "Performs the *= operation."
            }
          ]
        },
        {
          "title": "impl MulAssign<Saturating<i8>> for Saturating<i8>",
          "methods": [
            {
              "code": "pub fn mul_assign(&mut self, other: Saturating<i8>)",
              "text": "Performs the *= operation."
            }
          ]
        },
        {
          "title": "impl MulAssign<Saturating<isize>> for Saturating<isize>",
          "methods": [
            {
              "code": "pub fn mul_assign(&mut self, other: Saturating<isize>)",
              "text": "Performs the *= operation."
            }
          ]
        },
        {
          "title": "impl MulAssign<Saturating<u128>> for Saturating<u128>",
          "methods": [
            {
              "code": "pub fn mul_assign(&mut self, other: Saturating<u128>)",
              "text": "Performs the *= operation."
            }
          ]
        },
        {
          "title": "impl MulAssign<Saturating<u16>> for Saturating<u16>",
          "methods": [
            {
              "code": "pub fn mul_assign(&mut self, other: Saturating<u16>)",
              "text": "Performs the *= operation."
            }
          ]
        },
        {
          "title": "impl MulAssign<Saturating<u32>> for Saturating<u32>",
          "methods": [
            {
              "code": "pub fn mul_assign(&mut self, other: Saturating<u32>)",
              "text": "Performs the *= operation."
            }
          ]
        },
        {
          "title": "impl MulAssign<Saturating<u64>> for Saturating<u64>",
          "methods": [
            {
              "code": "pub fn mul_assign(&mut self, other: Saturating<u64>)",
              "text": "Performs the *= operation."
            }
          ]
        },
        {
          "title": "impl MulAssign<Saturating<u8>> for Saturating<u8>",
          "methods": [
            {
              "code": "pub fn mul_assign(&mut self, other: Saturating<u8>)",
              "text": "Performs the *= operation."
            }
          ]
        },
        {
          "title": "impl MulAssign<Saturating<usize>> for Saturating<usize>",
          "methods": [
            {
              "code": "pub fn mul_assign(&mut self, other: Saturating<usize>)",
              "text": "Performs the *= operation."
            }
          ]
        },
        {
          "title": "impl Neg for Saturating<i32>",
          "methods": [
            {
              "code": "type Output = Saturating<i32>",
              "text": "The resulting type after applying the - operator."
            },
            {
              "code": "pub fn neg(self) -> Saturating<i32>",
              "text": "Performs the unary - operation."
            }
          ]
        },
        {
          "title": "impl Neg for Saturating<i128>",
          "methods": [
            {
              "code": "type Output = Saturating<i128>",
              "text": "The resulting type after applying the - operator."
            },
            {
              "code": "pub fn neg(self) -> Saturating<i128>",
              "text": "Performs the unary - operation."
            }
          ]
        },
        {
          "title": "impl<'_> Neg for &'_ Saturating<i16>",
          "methods": [
            {
              "code": "type Output = <Saturating<i16> as Neg>::Output",
              "text": "The resulting type after applying the - operator."
            },
            {
              "code": "pub fn neg(self) -> <Saturating<i16> as Neg>::Output",
              "text": "Performs the unary - operation."
            }
          ]
        },
        {
          "title": "impl<'_> Neg for &'_ Saturating<i64>",
          "methods": [
            {
              "code": "type Output = <Saturating<i64> as Neg>::Output",
              "text": "The resulting type after applying the - operator."
            },
            {
              "code": "pub fn neg(self) -> <Saturating<i64> as Neg>::Output",
              "text": "Performs the unary - operation."
            }
          ]
        },
        {
          "title": "impl Neg for Saturating<i16>",
          "methods": [
            {
              "code": "type Output = Saturating<i16>",
              "text": "The resulting type after applying the - operator."
            },
            {
              "code": "pub fn neg(self) -> Saturating<i16>",
              "text": "Performs the unary - operation."
            }
          ]
        },
        {
          "title": "impl Neg for Saturating<i64>",
          "methods": [
            {
              "code": "type Output = Saturating<i64>",
              "text": "The resulting type after applying the - operator."
            },
            {
              "code": "pub fn neg(self) -> Saturating<i64>",
              "text": "Performs the unary - operation."
            }
          ]
        },
        {
          "title": "impl<'_> Neg for &'_ Saturating<isize>",
          "methods": [
            {
              "code": "type Output = <Saturating<isize> as Neg>::Output",
              "text": "The resulting type after applying the - operator."
            },
            {
              "code": "pub fn neg(self) -> <Saturating<isize> as Neg>::Output",
              "text": "Performs the unary - operation."
            }
          ]
        },
        {
          "title": "impl Neg for Saturating<isize>",
          "methods": [
            {
              "code": "type Output = Saturating<isize>",
              "text": "The resulting type after applying the - operator."
            },
            {
              "code": "pub fn neg(self) -> Saturating<isize>",
              "text": "Performs the unary - operation."
            }
          ]
        },
        {
          "title": "impl<'_> Neg for &'_ Saturating<i32>",
          "methods": [
            {
              "code": "type Output = <Saturating<i32> as Neg>::Output",
              "text": "The resulting type after applying the - operator."
            },
            {
              "code": "pub fn neg(self) -> <Saturating<i32> as Neg>::Output",
              "text": "Performs the unary - operation."
            }
          ]
        },
        {
          "title": "impl<'_> Neg for &'_ Saturating<i128>",
          "methods": [
            {
              "code": "type Output = <Saturating<i128> as Neg>::Output",
              "text": "The resulting type after applying the - operator."
            },
            {
              "code": "pub fn neg(self) -> <Saturating<i128> as Neg>::Output",
              "text": "Performs the unary - operation."
            }
          ]
        },
        {
          "title": "impl Neg for Saturating<i8>",
          "methods": [
            {
              "code": "type Output = Saturating<i8>",
              "text": "The resulting type after applying the - operator."
            },
            {
              "code": "pub fn neg(self) -> Saturating<i8>",
              "text": "Performs the unary - operation."
            }
          ]
        },
        {
          "title": "impl<'_> Neg for &'_ Saturating<i8>",
          "methods": [
            {
              "code": "type Output = <Saturating<i8> as Neg>::Output",
              "text": "The resulting type after applying the - operator."
            },
            {
              "code": "pub fn neg(self) -> <Saturating<i8> as Neg>::Output",
              "text": "Performs the unary - operation."
            }
          ]
        },
        {
          "title": "impl Not for Saturating<i64>",
          "methods": [
            {
              "code": "type Output = Saturating<i64>",
              "text": "The resulting type after applying the ! operator."
            },
            {
              "code": "pub fn not(self) -> Saturating<i64>",
              "text": "Performs the unary ! operation."
            }
          ]
        },
        {
          "title": "impl Not for Saturating<i128>",
          "methods": [
            {
              "code": "type Output = Saturating<i128>",
              "text": "The resulting type after applying the ! operator."
            },
            {
              "code": "pub fn not(self) -> Saturating<i128>",
              "text": "Performs the unary ! operation."
            }
          ]
        },
        {
          "title": "impl Not for Saturating<i8>",
          "methods": [
            {
              "code": "type Output = Saturating<i8>",
              "text": "The resulting type after applying the ! operator."
            },
            {
              "code": "pub fn not(self) -> Saturating<i8>",
              "text": "Performs the unary ! operation."
            }
          ]
        },
        {
          "title": "impl<'_> Not for &'_ Saturating<i32>",
          "methods": [
            {
              "code": "type Output = <Saturating<i32> as Not>::Output",
              "text": "The resulting type after applying the ! operator."
            },
            {
              "code": "pub fn not(self) -> <Saturating<i32> as Not>::Output",
              "text": "Performs the unary ! operation."
            }
          ]
        },
        {
          "title": "impl Not for Saturating<i32>",
          "methods": [
            {
              "code": "type Output = Saturating<i32>",
              "text": "The resulting type after applying the ! operator."
            },
            {
              "code": "pub fn not(self) -> Saturating<i32>",
              "text": "Performs the unary ! operation."
            }
          ]
        },
        {
          "title": "impl<'_> Not for &'_ Saturating<u128>",
          "methods": [
            {
              "code": "type Output = <Saturating<u128> as Not>::Output",
              "text": "The resulting type after applying the ! operator."
            },
            {
              "code": "pub fn not(self) -> <Saturating<u128> as Not>::Output",
              "text": "Performs the unary ! operation."
            }
          ]
        },
        {
          "title": "impl Not for Saturating<u8>",
          "methods": [
            {
              "code": "type Output = Saturating<u8>",
              "text": "The resulting type after applying the ! operator."
            },
            {
              "code": "pub fn not(self) -> Saturating<u8>",
              "text": "Performs the unary ! operation."
            }
          ]
        },
        {
          "title": "impl<'_> Not for &'_ Saturating<u32>",
          "methods": [
            {
              "code": "type Output = <Saturating<u32> as Not>::Output",
              "text": "The resulting type after applying the ! operator."
            },
            {
              "code": "pub fn not(self) -> <Saturating<u32> as Not>::Output",
              "text": "Performs the unary ! operation."
            }
          ]
        },
        {
          "title": "impl Not for Saturating<usize>",
          "methods": [
            {
              "code": "type Output = Saturating<usize>",
              "text": "The resulting type after applying the ! operator."
            },
            {
              "code": "pub fn not(self) -> Saturating<usize>",
              "text": "Performs the unary ! operation."
            }
          ]
        },
        {
          "title": "impl Not for Saturating<u16>",
          "methods": [
            {
              "code": "type Output = Saturating<u16>",
              "text": "The resulting type after applying the ! operator."
            },
            {
              "code": "pub fn not(self) -> Saturating<u16>",
              "text": "Performs the unary ! operation."
            }
          ]
        },
        {
          "title": "impl<'_> Not for &'_ Saturating<i64>",
          "methods": [
            {
              "code": "type Output = <Saturating<i64> as Not>::Output",
              "text": "The resulting type after applying the ! operator."
            },
            {
              "code": "pub fn not(self) -> <Saturating<i64> as Not>::Output",
              "text": "Performs the unary ! operation."
            }
          ]
        },
        {
          "title": "impl Not for Saturating<u32>",
          "methods": [
            {
              "code": "type Output = Saturating<u32>",
              "text": "The resulting type after applying the ! operator."
            },
            {
              "code": "pub fn not(self) -> Saturating<u32>",
              "text": "Performs the unary ! operation."
            }
          ]
        },
        {
          "title": "impl<'_> Not for &'_ Saturating<u64>",
          "methods": [
            {
              "code": "type Output = <Saturating<u64> as Not>::Output",
              "text": "The resulting type after applying the ! operator."
            },
            {
              "code": "pub fn not(self) -> <Saturating<u64> as Not>::Output",
              "text": "Performs the unary ! operation."
            }
          ]
        },
        {
          "title": "impl<'_> Not for &'_ Saturating<i128>",
          "methods": [
            {
              "code": "type Output = <Saturating<i128> as Not>::Output",
              "text": "The resulting type after applying the ! operator."
            },
            {
              "code": "pub fn not(self) -> <Saturating<i128> as Not>::Output",
              "text": "Performs the unary ! operation."
            }
          ]
        },
        {
          "title": "impl Not for Saturating<isize>",
          "methods": [
            {
              "code": "type Output = Saturating<isize>",
              "text": "The resulting type after applying the ! operator."
            },
            {
              "code": "pub fn not(self) -> Saturating<isize>",
              "text": "Performs the unary ! operation."
            }
          ]
        },
        {
          "title": "impl<'_> Not for &'_ Saturating<i8>",
          "methods": [
            {
              "code": "type Output = <Saturating<i8> as Not>::Output",
              "text": "The resulting type after applying the ! operator."
            },
            {
              "code": "pub fn not(self) -> <Saturating<i8> as Not>::Output",
              "text": "Performs the unary ! operation."
            }
          ]
        },
        {
          "title": "impl Not for Saturating<u64>",
          "methods": [
            {
              "code": "type Output = Saturating<u64>",
              "text": "The resulting type after applying the ! operator."
            },
            {
              "code": "pub fn not(self) -> Saturating<u64>",
              "text": "Performs the unary ! operation."
            }
          ]
        },
        {
          "title": "impl<'_> Not for &'_ Saturating<i16>",
          "methods": [
            {
              "code": "type Output = <Saturating<i16> as Not>::Output",
              "text": "The resulting type after applying the ! operator."
            },
            {
              "code": "pub fn not(self) -> <Saturating<i16> as Not>::Output",
              "text": "Performs the unary ! operation."
            }
          ]
        },
        {
          "title": "impl<'_> Not for &'_ Saturating<usize>",
          "methods": [
            {
              "code": "type Output = <Saturating<usize> as Not>::Output",
              "text": "The resulting type after applying the ! operator."
            },
            {
              "code": "pub fn not(self) -> <Saturating<usize> as Not>::Output",
              "text": "Performs the unary ! operation."
            }
          ]
        },
        {
          "title": "impl<'_> Not for &'_ Saturating<u8>",
          "methods": [
            {
              "code": "type Output = <Saturating<u8> as Not>::Output",
              "text": "The resulting type after applying the ! operator."
            },
            {
              "code": "pub fn not(self) -> <Saturating<u8> as Not>::Output",
              "text": "Performs the unary ! operation."
            }
          ]
        },
        {
          "title": "impl<'_> Not for &'_ Saturating<u16>",
          "methods": [
            {
              "code": "type Output = <Saturating<u16> as Not>::Output",
              "text": "The resulting type after applying the ! operator."
            },
            {
              "code": "pub fn not(self) -> <Saturating<u16> as Not>::Output",
              "text": "Performs the unary ! operation."
            }
          ]
        },
        {
          "title": "impl Not for Saturating<i16>",
          "methods": [
            {
              "code": "type Output = Saturating<i16>",
              "text": "The resulting type after applying the ! operator."
            },
            {
              "code": "pub fn not(self) -> Saturating<i16>",
              "text": "Performs the unary ! operation."
            }
          ]
        },
        {
          "title": "impl<'_> Not for &'_ Saturating<isize>",
          "methods": [
            {
              "code": "type Output = <Saturating<isize> as Not>::Output",
              "text": "The resulting type after applying the ! operator."
            },
            {
              "code": "pub fn not(self) -> <Saturating<isize> as Not>::Output",
              "text": "Performs the unary ! operation."
            }
          ]
        },
        {
          "title": "impl Not for Saturating<u128>",
          "methods": [
            {
              "code": "type Output = Saturating<u128>",
              "text": "The resulting type after applying the ! operator."
            },
            {
              "code": "pub fn not(self) -> Saturating<u128>",
              "text": "Performs the unary ! operation."
            }
          ]
        },
        {
          "title": "impl<T> Octal for Saturating<T> where T: Octal,",
          "methods": [
            {
              "code": "pub fn fmt(&self, f: &mut Formatter<'_>) -> Result<(), Error>",
              "text": "Formats the value using the given formatter."
            }
          ]
        },
        {
          "title": "impl<T> Ord for Saturating<T> where T: Ord,",
          "methods": [
            {
              "code": "pub fn cmp(&self, other: &Saturating<T>) -> Ordering",
              "text": "This method returns an Ordering between self and other."
            },
            {
              "code": "fn max(self, other: Self) -> Self",
              "text": "Compares and returns the maximum of two values."
            },
            {
              "code": "fn min(self, other: Self) -> Self",
              "text": "Compares and returns the minimum of two values."
            },
            {
              "code": "fn clamp(self, min: Self, max: Self) -> Self",
              "text": "Restrict a value to a certain interval."
            }
          ]
        },
        {
          "title": "impl<T> PartialEq<Saturating<T>> for Saturating<T> where T: PartialEq<T>,",
          "methods": [
            {
              "code": "pub fn eq(&self, other: &Saturating<T>) -> bool",
              "text": "This method tests for self and other values to be equal, and is used by ==."
            },
            {
              "code": "pub fn ne(&self, other: &Saturating<T>) -> bool",
              "text": "This method tests for !=."
            }
          ]
        },
        {
          "title": "impl<T> PartialOrd<Saturating<T>> for Saturating<T> where T: PartialOrd<T>,",
          "methods": [
            {
              "code": "pub fn partial_cmp(&self, other: &Saturating<T>) -> Option<Ordering>",
              "text": "This method returns an ordering between self and other values if one exists."
            },
            {
              "code": "fn lt(&self, other: &Rhs) -> bool",
              "text": "This method tests less than (for self and other) and is used by the < operator."
            },
            {
              "code": "fn le(&self, other: &Rhs) -> bool",
              "text": "This method tests less than or equal to (for self and other) and is used by the <= operator."
            },
            {
              "code": "fn gt(&self, other: &Rhs) -> bool",
              "text": "This method tests greater than (for self and other) and is used by the > operator."
            },
            {
              "code": "fn ge(&self, other: &Rhs) -> bool",
              "text": "This method tests greater than or equal to (for self and other) and is used by the >= operator."
            }
          ]
        },
        {
          "title": "impl<'_> Rem<&'_ Saturating<i128>> for Saturating<i128>",
          "methods": [
            {
              "code": "type Output = <Saturating<i128> as Rem<Saturating<i128>>>::Output",
              "text": "The resulting type after applying the % operator."
            },
            {
              "code": "pub fn rem( self, other: &Saturating<i128>) -> <Saturating<i128> as Rem<Saturating<i128>>>::Output",
              "text": "Performs the % operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Rem<&'_ Saturating<i128>> for &'_ Saturating<i128>",
          "methods": [
            {
              "code": "type Output = <Saturating<i128> as Rem<Saturating<i128>>>::Output",
              "text": "The resulting type after applying the % operator."
            },
            {
              "code": "pub fn rem( self, other: &Saturating<i128>) -> <Saturating<i128> as Rem<Saturating<i128>>>::Output",
              "text": "Performs the % operation."
            }
          ]
        },
        {
          "title": "impl<'_> Rem<&'_ Saturating<i16>> for Saturating<i16>",
          "methods": [
            {
              "code": "type Output = <Saturating<i16> as Rem<Saturating<i16>>>::Output",
              "text": "The resulting type after applying the % operator."
            },
            {
              "code": "pub fn rem( self, other: &Saturating<i16>) -> <Saturating<i16> as Rem<Saturating<i16>>>::Output",
              "text": "Performs the % operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Rem<&'_ Saturating<i16>> for &'_ Saturating<i16>",
          "methods": [
            {
              "code": "type Output = <Saturating<i16> as Rem<Saturating<i16>>>::Output",
              "text": "The resulting type after applying the % operator."
            },
            {
              "code": "pub fn rem( self, other: &Saturating<i16>) -> <Saturating<i16> as Rem<Saturating<i16>>>::Output",
              "text": "Performs the % operation."
            }
          ]
        },
        {
          "title": "impl<'_> Rem<&'_ Saturating<i32>> for Saturating<i32>",
          "methods": [
            {
              "code": "type Output = <Saturating<i32> as Rem<Saturating<i32>>>::Output",
              "text": "The resulting type after applying the % operator."
            },
            {
              "code": "pub fn rem( self, other: &Saturating<i32>) -> <Saturating<i32> as Rem<Saturating<i32>>>::Output",
              "text": "Performs the % operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Rem<&'_ Saturating<i32>> for &'_ Saturating<i32>",
          "methods": [
            {
              "code": "type Output = <Saturating<i32> as Rem<Saturating<i32>>>::Output",
              "text": "The resulting type after applying the % operator."
            },
            {
              "code": "pub fn rem( self, other: &Saturating<i32>) -> <Saturating<i32> as Rem<Saturating<i32>>>::Output",
              "text": "Performs the % operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Rem<&'_ Saturating<i64>> for &'_ Saturating<i64>",
          "methods": [
            {
              "code": "type Output = <Saturating<i64> as Rem<Saturating<i64>>>::Output",
              "text": "The resulting type after applying the % operator."
            },
            {
              "code": "pub fn rem( self, other: &Saturating<i64>) -> <Saturating<i64> as Rem<Saturating<i64>>>::Output",
              "text": "Performs the % operation."
            }
          ]
        },
        {
          "title": "impl<'_> Rem<&'_ Saturating<i64>> for Saturating<i64>",
          "methods": [
            {
              "code": "type Output = <Saturating<i64> as Rem<Saturating<i64>>>::Output",
              "text": "The resulting type after applying the % operator."
            },
            {
              "code": "pub fn rem( self, other: &Saturating<i64>) -> <Saturating<i64> as Rem<Saturating<i64>>>::Output",
              "text": "Performs the % operation."
            }
          ]
        },
        {
          "title": "impl<'_> Rem<&'_ Saturating<i8>> for Saturating<i8>",
          "methods": [
            {
              "code": "type Output = <Saturating<i8> as Rem<Saturating<i8>>>::Output",
              "text": "The resulting type after applying the % operator."
            },
            {
              "code": "pub fn rem( self, other: &Saturating<i8>) -> <Saturating<i8> as Rem<Saturating<i8>>>::Output",
              "text": "Performs the % operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Rem<&'_ Saturating<i8>> for &'_ Saturating<i8>",
          "methods": [
            {
              "code": "type Output = <Saturating<i8> as Rem<Saturating<i8>>>::Output",
              "text": "The resulting type after applying the % operator."
            },
            {
              "code": "pub fn rem( self, other: &Saturating<i8>) -> <Saturating<i8> as Rem<Saturating<i8>>>::Output",
              "text": "Performs the % operation."
            }
          ]
        },
        {
          "title": "impl<'_> Rem<&'_ Saturating<isize>> for Saturating<isize>",
          "methods": [
            {
              "code": "type Output = <Saturating<isize> as Rem<Saturating<isize>>>::Output",
              "text": "The resulting type after applying the % operator."
            },
            {
              "code": "pub fn rem( self, other: &Saturating<isize>) -> <Saturating<isize> as Rem<Saturating<isize>>>::Output",
              "text": "Performs the % operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Rem<&'_ Saturating<isize>> for &'_ Saturating<isize>",
          "methods": [
            {
              "code": "type Output = <Saturating<isize> as Rem<Saturating<isize>>>::Output",
              "text": "The resulting type after applying the % operator."
            },
            {
              "code": "pub fn rem( self, other: &Saturating<isize>) -> <Saturating<isize> as Rem<Saturating<isize>>>::Output",
              "text": "Performs the % operation."
            }
          ]
        },
        {
          "title": "impl<'_> Rem<&'_ Saturating<u128>> for Saturating<u128>",
          "methods": [
            {
              "code": "type Output = <Saturating<u128> as Rem<Saturating<u128>>>::Output",
              "text": "The resulting type after applying the % operator."
            },
            {
              "code": "pub fn rem( self, other: &Saturating<u128>) -> <Saturating<u128> as Rem<Saturating<u128>>>::Output",
              "text": "Performs the % operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Rem<&'_ Saturating<u128>> for &'_ Saturating<u128>",
          "methods": [
            {
              "code": "type Output = <Saturating<u128> as Rem<Saturating<u128>>>::Output",
              "text": "The resulting type after applying the % operator."
            },
            {
              "code": "pub fn rem( self, other: &Saturating<u128>) -> <Saturating<u128> as Rem<Saturating<u128>>>::Output",
              "text": "Performs the % operation."
            }
          ]
        },
        {
          "title": "impl<'_> Rem<&'_ Saturating<u16>> for Saturating<u16>",
          "methods": [
            {
              "code": "type Output = <Saturating<u16> as Rem<Saturating<u16>>>::Output",
              "text": "The resulting type after applying the % operator."
            },
            {
              "code": "pub fn rem( self, other: &Saturating<u16>) -> <Saturating<u16> as Rem<Saturating<u16>>>::Output",
              "text": "Performs the % operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Rem<&'_ Saturating<u16>> for &'_ Saturating<u16>",
          "methods": [
            {
              "code": "type Output = <Saturating<u16> as Rem<Saturating<u16>>>::Output",
              "text": "The resulting type after applying the % operator."
            },
            {
              "code": "pub fn rem( self, other: &Saturating<u16>) -> <Saturating<u16> as Rem<Saturating<u16>>>::Output",
              "text": "Performs the % operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Rem<&'_ Saturating<u32>> for &'_ Saturating<u32>",
          "methods": [
            {
              "code": "type Output = <Saturating<u32> as Rem<Saturating<u32>>>::Output",
              "text": "The resulting type after applying the % operator."
            },
            {
              "code": "pub fn rem( self, other: &Saturating<u32>) -> <Saturating<u32> as Rem<Saturating<u32>>>::Output",
              "text": "Performs the % operation."
            }
          ]
        },
        {
          "title": "impl<'_> Rem<&'_ Saturating<u32>> for Saturating<u32>",
          "methods": [
            {
              "code": "type Output = <Saturating<u32> as Rem<Saturating<u32>>>::Output",
              "text": "The resulting type after applying the % operator."
            },
            {
              "code": "pub fn rem( self, other: &Saturating<u32>) -> <Saturating<u32> as Rem<Saturating<u32>>>::Output",
              "text": "Performs the % operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Rem<&'_ Saturating<u64>> for &'_ Saturating<u64>",
          "methods": [
            {
              "code": "type Output = <Saturating<u64> as Rem<Saturating<u64>>>::Output",
              "text": "The resulting type after applying the % operator."
            },
            {
              "code": "pub fn rem( self, other: &Saturating<u64>) -> <Saturating<u64> as Rem<Saturating<u64>>>::Output",
              "text": "Performs the % operation."
            }
          ]
        },
        {
          "title": "impl<'_> Rem<&'_ Saturating<u64>> for Saturating<u64>",
          "methods": [
            {
              "code": "type Output = <Saturating<u64> as Rem<Saturating<u64>>>::Output",
              "text": "The resulting type after applying the % operator."
            },
            {
              "code": "pub fn rem( self, other: &Saturating<u64>) -> <Saturating<u64> as Rem<Saturating<u64>>>::Output",
              "text": "Performs the % operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Rem<&'_ Saturating<u8>> for &'_ Saturating<u8>",
          "methods": [
            {
              "code": "type Output = <Saturating<u8> as Rem<Saturating<u8>>>::Output",
              "text": "The resulting type after applying the % operator."
            },
            {
              "code": "pub fn rem( self, other: &Saturating<u8>) -> <Saturating<u8> as Rem<Saturating<u8>>>::Output",
              "text": "Performs the % operation."
            }
          ]
        },
        {
          "title": "impl<'_> Rem<&'_ Saturating<u8>> for Saturating<u8>",
          "methods": [
            {
              "code": "type Output = <Saturating<u8> as Rem<Saturating<u8>>>::Output",
              "text": "The resulting type after applying the % operator."
            },
            {
              "code": "pub fn rem( self, other: &Saturating<u8>) -> <Saturating<u8> as Rem<Saturating<u8>>>::Output",
              "text": "Performs the % operation."
            }
          ]
        },
        {
          "title": "impl<'_> Rem<&'_ Saturating<usize>> for Saturating<usize>",
          "methods": [
            {
              "code": "type Output = <Saturating<usize> as Rem<Saturating<usize>>>::Output",
              "text": "The resulting type after applying the % operator."
            },
            {
              "code": "pub fn rem( self, other: &Saturating<usize>) -> <Saturating<usize> as Rem<Saturating<usize>>>::Output",
              "text": "Performs the % operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Rem<&'_ Saturating<usize>> for &'_ Saturating<usize>",
          "methods": [
            {
              "code": "type Output = <Saturating<usize> as Rem<Saturating<usize>>>::Output",
              "text": "The resulting type after applying the % operator."
            },
            {
              "code": "pub fn rem( self, other: &Saturating<usize>) -> <Saturating<usize> as Rem<Saturating<usize>>>::Output",
              "text": "Performs the % operation."
            }
          ]
        },
        {
          "title": "impl<'a> Rem<Saturating<i128>> for &'a Saturating<i128>",
          "methods": [
            {
              "code": "type Output = <Saturating<i128> as Rem<Saturating<i128>>>::Output",
              "text": "The resulting type after applying the % operator."
            },
            {
              "code": "pub fn rem( self, other: Saturating<i128>) -> <Saturating<i128> as Rem<Saturating<i128>>>::Output",
              "text": "Performs the % operation."
            }
          ]
        },
        {
          "title": "impl Rem<Saturating<i128>> for Saturating<i128>",
          "methods": [
            {
              "code": "type Output = Saturating<i128>",
              "text": "The resulting type after applying the % operator."
            },
            {
              "code": "pub fn rem(self, other: Saturating<i128>) -> Saturating<i128>",
              "text": "Performs the % operation."
            }
          ]
        },
        {
          "title": "impl Rem<Saturating<i16>> for Saturating<i16>",
          "methods": [
            {
              "code": "type Output = Saturating<i16>",
              "text": "The resulting type after applying the % operator."
            },
            {
              "code": "pub fn rem(self, other: Saturating<i16>) -> Saturating<i16>",
              "text": "Performs the % operation."
            }
          ]
        },
        {
          "title": "impl<'a> Rem<Saturating<i16>> for &'a Saturating<i16>",
          "methods": [
            {
              "code": "type Output = <Saturating<i16> as Rem<Saturating<i16>>>::Output",
              "text": "The resulting type after applying the % operator."
            },
            {
              "code": "pub fn rem( self, other: Saturating<i16>) -> <Saturating<i16> as Rem<Saturating<i16>>>::Output",
              "text": "Performs the % operation."
            }
          ]
        },
        {
          "title": "impl<'a> Rem<Saturating<i32>> for &'a Saturating<i32>",
          "methods": [
            {
              "code": "type Output = <Saturating<i32> as Rem<Saturating<i32>>>::Output",
              "text": "The resulting type after applying the % operator."
            },
            {
              "code": "pub fn rem( self, other: Saturating<i32>) -> <Saturating<i32> as Rem<Saturating<i32>>>::Output",
              "text": "Performs the % operation."
            }
          ]
        },
        {
          "title": "impl Rem<Saturating<i32>> for Saturating<i32>",
          "methods": [
            {
              "code": "type Output = Saturating<i32>",
              "text": "The resulting type after applying the % operator."
            },
            {
              "code": "pub fn rem(self, other: Saturating<i32>) -> Saturating<i32>",
              "text": "Performs the % operation."
            }
          ]
        },
        {
          "title": "impl Rem<Saturating<i64>> for Saturating<i64>",
          "methods": [
            {
              "code": "type Output = Saturating<i64>",
              "text": "The resulting type after applying the % operator."
            },
            {
              "code": "pub fn rem(self, other: Saturating<i64>) -> Saturating<i64>",
              "text": "Performs the % operation."
            }
          ]
        },
        {
          "title": "impl<'a> Rem<Saturating<i64>> for &'a Saturating<i64>",
          "methods": [
            {
              "code": "type Output = <Saturating<i64> as Rem<Saturating<i64>>>::Output",
              "text": "The resulting type after applying the % operator."
            },
            {
              "code": "pub fn rem( self, other: Saturating<i64>) -> <Saturating<i64> as Rem<Saturating<i64>>>::Output",
              "text": "Performs the % operation."
            }
          ]
        },
        {
          "title": "impl Rem<Saturating<i8>> for Saturating<i8>",
          "methods": [
            {
              "code": "type Output = Saturating<i8>",
              "text": "The resulting type after applying the % operator."
            },
            {
              "code": "pub fn rem(self, other: Saturating<i8>) -> Saturating<i8>",
              "text": "Performs the % operation."
            }
          ]
        },
        {
          "title": "impl<'a> Rem<Saturating<i8>> for &'a Saturating<i8>",
          "methods": [
            {
              "code": "type Output = <Saturating<i8> as Rem<Saturating<i8>>>::Output",
              "text": "The resulting type after applying the % operator."
            },
            {
              "code": "pub fn rem( self, other: Saturating<i8>) -> <Saturating<i8> as Rem<Saturating<i8>>>::Output",
              "text": "Performs the % operation."
            }
          ]
        },
        {
          "title": "impl Rem<Saturating<isize>> for Saturating<isize>",
          "methods": [
            {
              "code": "type Output = Saturating<isize>",
              "text": "The resulting type after applying the % operator."
            },
            {
              "code": "pub fn rem(self, other: Saturating<isize>) -> Saturating<isize>",
              "text": "Performs the % operation."
            }
          ]
        },
        {
          "title": "impl<'a> Rem<Saturating<isize>> for &'a Saturating<isize>",
          "methods": [
            {
              "code": "type Output = <Saturating<isize> as Rem<Saturating<isize>>>::Output",
              "text": "The resulting type after applying the % operator."
            },
            {
              "code": "pub fn rem( self, other: Saturating<isize>) -> <Saturating<isize> as Rem<Saturating<isize>>>::Output",
              "text": "Performs the % operation."
            }
          ]
        },
        {
          "title": "impl<'a> Rem<Saturating<u128>> for &'a Saturating<u128>",
          "methods": [
            {
              "code": "type Output = <Saturating<u128> as Rem<Saturating<u128>>>::Output",
              "text": "The resulting type after applying the % operator."
            },
            {
              "code": "pub fn rem( self, other: Saturating<u128>) -> <Saturating<u128> as Rem<Saturating<u128>>>::Output",
              "text": "Performs the % operation."
            }
          ]
        },
        {
          "title": "impl Rem<Saturating<u128>> for Saturating<u128>",
          "methods": [
            {
              "code": "type Output = Saturating<u128>",
              "text": "The resulting type after applying the % operator."
            },
            {
              "code": "pub fn rem(self, other: Saturating<u128>) -> Saturating<u128>",
              "text": "Performs the % operation."
            }
          ]
        },
        {
          "title": "impl Rem<Saturating<u16>> for Saturating<u16>",
          "methods": [
            {
              "code": "type Output = Saturating<u16>",
              "text": "The resulting type after applying the % operator."
            },
            {
              "code": "pub fn rem(self, other: Saturating<u16>) -> Saturating<u16>",
              "text": "Performs the % operation."
            }
          ]
        },
        {
          "title": "impl<'a> Rem<Saturating<u16>> for &'a Saturating<u16>",
          "methods": [
            {
              "code": "type Output = <Saturating<u16> as Rem<Saturating<u16>>>::Output",
              "text": "The resulting type after applying the % operator."
            },
            {
              "code": "pub fn rem( self, other: Saturating<u16>) -> <Saturating<u16> as Rem<Saturating<u16>>>::Output",
              "text": "Performs the % operation."
            }
          ]
        },
        {
          "title": "impl Rem<Saturating<u32>> for Saturating<u32>",
          "methods": [
            {
              "code": "type Output = Saturating<u32>",
              "text": "The resulting type after applying the % operator."
            },
            {
              "code": "pub fn rem(self, other: Saturating<u32>) -> Saturating<u32>",
              "text": "Performs the % operation."
            }
          ]
        },
        {
          "title": "impl<'a> Rem<Saturating<u32>> for &'a Saturating<u32>",
          "methods": [
            {
              "code": "type Output = <Saturating<u32> as Rem<Saturating<u32>>>::Output",
              "text": "The resulting type after applying the % operator."
            },
            {
              "code": "pub fn rem( self, other: Saturating<u32>) -> <Saturating<u32> as Rem<Saturating<u32>>>::Output",
              "text": "Performs the % operation."
            }
          ]
        },
        {
          "title": "impl<'a> Rem<Saturating<u64>> for &'a Saturating<u64>",
          "methods": [
            {
              "code": "type Output = <Saturating<u64> as Rem<Saturating<u64>>>::Output",
              "text": "The resulting type after applying the % operator."
            },
            {
              "code": "pub fn rem( self, other: Saturating<u64>) -> <Saturating<u64> as Rem<Saturating<u64>>>::Output",
              "text": "Performs the % operation."
            }
          ]
        },
        {
          "title": "impl Rem<Saturating<u64>> for Saturating<u64>",
          "methods": [
            {
              "code": "type Output = Saturating<u64>",
              "text": "The resulting type after applying the % operator."
            },
            {
              "code": "pub fn rem(self, other: Saturating<u64>) -> Saturating<u64>",
              "text": "Performs the % operation."
            }
          ]
        },
        {
          "title": "impl<'a> Rem<Saturating<u8>> for &'a Saturating<u8>",
          "methods": [
            {
              "code": "type Output = <Saturating<u8> as Rem<Saturating<u8>>>::Output",
              "text": "The resulting type after applying the % operator."
            },
            {
              "code": "pub fn rem( self, other: Saturating<u8>) -> <Saturating<u8> as Rem<Saturating<u8>>>::Output",
              "text": "Performs the % operation."
            }
          ]
        },
        {
          "title": "impl Rem<Saturating<u8>> for Saturating<u8>",
          "methods": [
            {
              "code": "type Output = Saturating<u8>",
              "text": "The resulting type after applying the % operator."
            },
            {
              "code": "pub fn rem(self, other: Saturating<u8>) -> Saturating<u8>",
              "text": "Performs the % operation."
            }
          ]
        },
        {
          "title": "impl<'a> Rem<Saturating<usize>> for &'a Saturating<usize>",
          "methods": [
            {
              "code": "type Output = <Saturating<usize> as Rem<Saturating<usize>>>::Output",
              "text": "The resulting type after applying the % operator."
            },
            {
              "code": "pub fn rem( self, other: Saturating<usize>) -> <Saturating<usize> as Rem<Saturating<usize>>>::Output",
              "text": "Performs the % operation."
            }
          ]
        },
        {
          "title": "impl Rem<Saturating<usize>> for Saturating<usize>",
          "methods": [
            {
              "code": "type Output = Saturating<usize>",
              "text": "The resulting type after applying the % operator."
            },
            {
              "code": "pub fn rem(self, other: Saturating<usize>) -> Saturating<usize>",
              "text": "Performs the % operation."
            }
          ]
        },
        {
          "title": "impl<'_> RemAssign<&'_ Saturating<i128>> for Saturating<i128>",
          "methods": [
            {
              "code": "pub fn rem_assign(&mut self, other: &Saturating<i128>)",
              "text": "Performs the %= operation."
            }
          ]
        },
        {
          "title": "impl<'_> RemAssign<&'_ Saturating<i16>> for Saturating<i16>",
          "methods": [
            {
              "code": "pub fn rem_assign(&mut self, other: &Saturating<i16>)",
              "text": "Performs the %= operation."
            }
          ]
        },
        {
          "title": "impl<'_> RemAssign<&'_ Saturating<i32>> for Saturating<i32>",
          "methods": [
            {
              "code": "pub fn rem_assign(&mut self, other: &Saturating<i32>)",
              "text": "Performs the %= operation."
            }
          ]
        },
        {
          "title": "impl<'_> RemAssign<&'_ Saturating<i64>> for Saturating<i64>",
          "methods": [
            {
              "code": "pub fn rem_assign(&mut self, other: &Saturating<i64>)",
              "text": "Performs the %= operation."
            }
          ]
        },
        {
          "title": "impl<'_> RemAssign<&'_ Saturating<i8>> for Saturating<i8>",
          "methods": [
            {
              "code": "pub fn rem_assign(&mut self, other: &Saturating<i8>)",
              "text": "Performs the %= operation."
            }
          ]
        },
        {
          "title": "impl<'_> RemAssign<&'_ Saturating<isize>> for Saturating<isize>",
          "methods": [
            {
              "code": "pub fn rem_assign(&mut self, other: &Saturating<isize>)",
              "text": "Performs the %= operation."
            }
          ]
        },
        {
          "title": "impl<'_> RemAssign<&'_ Saturating<u128>> for Saturating<u128>",
          "methods": [
            {
              "code": "pub fn rem_assign(&mut self, other: &Saturating<u128>)",
              "text": "Performs the %= operation."
            }
          ]
        },
        {
          "title": "impl<'_> RemAssign<&'_ Saturating<u16>> for Saturating<u16>",
          "methods": [
            {
              "code": "pub fn rem_assign(&mut self, other: &Saturating<u16>)",
              "text": "Performs the %= operation."
            }
          ]
        },
        {
          "title": "impl<'_> RemAssign<&'_ Saturating<u32>> for Saturating<u32>",
          "methods": [
            {
              "code": "pub fn rem_assign(&mut self, other: &Saturating<u32>)",
              "text": "Performs the %= operation."
            }
          ]
        },
        {
          "title": "impl<'_> RemAssign<&'_ Saturating<u64>> for Saturating<u64>",
          "methods": [
            {
              "code": "pub fn rem_assign(&mut self, other: &Saturating<u64>)",
              "text": "Performs the %= operation."
            }
          ]
        },
        {
          "title": "impl<'_> RemAssign<&'_ Saturating<u8>> for Saturating<u8>",
          "methods": [
            {
              "code": "pub fn rem_assign(&mut self, other: &Saturating<u8>)",
              "text": "Performs the %= operation."
            }
          ]
        },
        {
          "title": "impl<'_> RemAssign<&'_ Saturating<usize>> for Saturating<usize>",
          "methods": [
            {
              "code": "pub fn rem_assign(&mut self, other: &Saturating<usize>)",
              "text": "Performs the %= operation."
            }
          ]
        },
        {
          "title": "impl RemAssign<Saturating<i128>> for Saturating<i128>",
          "methods": [
            {
              "code": "pub fn rem_assign(&mut self, other: Saturating<i128>)",
              "text": "Performs the %= operation."
            }
          ]
        },
        {
          "title": "impl RemAssign<Saturating<i16>> for Saturating<i16>",
          "methods": [
            {
              "code": "pub fn rem_assign(&mut self, other: Saturating<i16>)",
              "text": "Performs the %= operation."
            }
          ]
        },
        {
          "title": "impl RemAssign<Saturating<i32>> for Saturating<i32>",
          "methods": [
            {
              "code": "pub fn rem_assign(&mut self, other: Saturating<i32>)",
              "text": "Performs the %= operation."
            }
          ]
        },
        {
          "title": "impl RemAssign<Saturating<i64>> for Saturating<i64>",
          "methods": [
            {
              "code": "pub fn rem_assign(&mut self, other: Saturating<i64>)",
              "text": "Performs the %= operation."
            }
          ]
        },
        {
          "title": "impl RemAssign<Saturating<i8>> for Saturating<i8>",
          "methods": [
            {
              "code": "pub fn rem_assign(&mut self, other: Saturating<i8>)",
              "text": "Performs the %= operation."
            }
          ]
        },
        {
          "title": "impl RemAssign<Saturating<isize>> for Saturating<isize>",
          "methods": [
            {
              "code": "pub fn rem_assign(&mut self, other: Saturating<isize>)",
              "text": "Performs the %= operation."
            }
          ]
        },
        {
          "title": "impl RemAssign<Saturating<u128>> for Saturating<u128>",
          "methods": [
            {
              "code": "pub fn rem_assign(&mut self, other: Saturating<u128>)",
              "text": "Performs the %= operation."
            }
          ]
        },
        {
          "title": "impl RemAssign<Saturating<u16>> for Saturating<u16>",
          "methods": [
            {
              "code": "pub fn rem_assign(&mut self, other: Saturating<u16>)",
              "text": "Performs the %= operation."
            }
          ]
        },
        {
          "title": "impl RemAssign<Saturating<u32>> for Saturating<u32>",
          "methods": [
            {
              "code": "pub fn rem_assign(&mut self, other: Saturating<u32>)",
              "text": "Performs the %= operation."
            }
          ]
        },
        {
          "title": "impl RemAssign<Saturating<u64>> for Saturating<u64>",
          "methods": [
            {
              "code": "pub fn rem_assign(&mut self, other: Saturating<u64>)",
              "text": "Performs the %= operation."
            }
          ]
        },
        {
          "title": "impl RemAssign<Saturating<u8>> for Saturating<u8>",
          "methods": [
            {
              "code": "pub fn rem_assign(&mut self, other: Saturating<u8>)",
              "text": "Performs the %= operation."
            }
          ]
        },
        {
          "title": "impl RemAssign<Saturating<usize>> for Saturating<usize>",
          "methods": [
            {
              "code": "pub fn rem_assign(&mut self, other: Saturating<usize>)",
              "text": "Performs the %= operation."
            }
          ]
        },
        {
          "title": "impl<'_> Shl<&'_ usize> for Saturating<isize>",
          "methods": [
            {
              "code": "type Output = <Saturating<isize> as Shl<usize>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: &usize) -> <Saturating<isize> as Shl<usize>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'_> Shl<&'_ usize> for Saturating<i16>",
          "methods": [
            {
              "code": "type Output = <Saturating<i16> as Shl<usize>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: &usize) -> <Saturating<i16> as Shl<usize>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'_> Shl<&'_ usize> for Saturating<usize>",
          "methods": [
            {
              "code": "type Output = <Saturating<usize> as Shl<usize>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: &usize) -> <Saturating<usize> as Shl<usize>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Shl<&'_ usize> for &'_ Saturating<u16>",
          "methods": [
            {
              "code": "type Output = <Saturating<u16> as Shl<usize>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: &usize) -> <Saturating<u16> as Shl<usize>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'_> Shl<&'_ usize> for Saturating<i8>",
          "methods": [
            {
              "code": "type Output = <Saturating<i8> as Shl<usize>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: &usize) -> <Saturating<i8> as Shl<usize>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'_> Shl<&'_ usize> for Saturating<u32>",
          "methods": [
            {
              "code": "type Output = <Saturating<u32> as Shl<usize>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: &usize) -> <Saturating<u32> as Shl<usize>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'_> Shl<&'_ usize> for Saturating<u8>",
          "methods": [
            {
              "code": "type Output = <Saturating<u8> as Shl<usize>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: &usize) -> <Saturating<u8> as Shl<usize>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'_> Shl<&'_ usize> for Saturating<i32>",
          "methods": [
            {
              "code": "type Output = <Saturating<i32> as Shl<usize>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: &usize) -> <Saturating<i32> as Shl<usize>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Shl<&'_ usize> for &'_ Saturating<i16>",
          "methods": [
            {
              "code": "type Output = <Saturating<i16> as Shl<usize>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: &usize) -> <Saturating<i16> as Shl<usize>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Shl<&'_ usize> for &'_ Saturating<i64>",
          "methods": [
            {
              "code": "type Output = <Saturating<i64> as Shl<usize>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: &usize) -> <Saturating<i64> as Shl<usize>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Shl<&'_ usize> for &'_ Saturating<u32>",
          "methods": [
            {
              "code": "type Output = <Saturating<u32> as Shl<usize>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: &usize) -> <Saturating<u32> as Shl<usize>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'_> Shl<&'_ usize> for Saturating<u16>",
          "methods": [
            {
              "code": "type Output = <Saturating<u16> as Shl<usize>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: &usize) -> <Saturating<u16> as Shl<usize>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Shl<&'_ usize> for &'_ Saturating<usize>",
          "methods": [
            {
              "code": "type Output = <Saturating<usize> as Shl<usize>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: &usize) -> <Saturating<usize> as Shl<usize>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'_> Shl<&'_ usize> for Saturating<u64>",
          "methods": [
            {
              "code": "type Output = <Saturating<u64> as Shl<usize>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: &usize) -> <Saturating<u64> as Shl<usize>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Shl<&'_ usize> for &'_ Saturating<u8>",
          "methods": [
            {
              "code": "type Output = <Saturating<u8> as Shl<usize>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: &usize) -> <Saturating<u8> as Shl<usize>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'_> Shl<&'_ usize> for Saturating<i64>",
          "methods": [
            {
              "code": "type Output = <Saturating<i64> as Shl<usize>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: &usize) -> <Saturating<i64> as Shl<usize>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Shl<&'_ usize> for &'_ Saturating<i128>",
          "methods": [
            {
              "code": "type Output = <Saturating<i128> as Shl<usize>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: &usize) -> <Saturating<i128> as Shl<usize>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Shl<&'_ usize> for &'_ Saturating<isize>",
          "methods": [
            {
              "code": "type Output = <Saturating<isize> as Shl<usize>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: &usize) -> <Saturating<isize> as Shl<usize>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Shl<&'_ usize> for &'_ Saturating<u64>",
          "methods": [
            {
              "code": "type Output = <Saturating<u64> as Shl<usize>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: &usize) -> <Saturating<u64> as Shl<usize>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'_> Shl<&'_ usize> for Saturating<i128>",
          "methods": [
            {
              "code": "type Output = <Saturating<i128> as Shl<usize>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: &usize) -> <Saturating<i128> as Shl<usize>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'_> Shl<&'_ usize> for Saturating<u128>",
          "methods": [
            {
              "code": "type Output = <Saturating<u128> as Shl<usize>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: &usize) -> <Saturating<u128> as Shl<usize>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Shl<&'_ usize> for &'_ Saturating<i8>",
          "methods": [
            {
              "code": "type Output = <Saturating<i8> as Shl<usize>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: &usize) -> <Saturating<i8> as Shl<usize>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Shl<&'_ usize> for &'_ Saturating<i32>",
          "methods": [
            {
              "code": "type Output = <Saturating<i32> as Shl<usize>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: &usize) -> <Saturating<i32> as Shl<usize>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Shl<&'_ usize> for &'_ Saturating<u128>",
          "methods": [
            {
              "code": "type Output = <Saturating<u128> as Shl<usize>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: &usize) -> <Saturating<u128> as Shl<usize>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl Shl<usize> for Saturating<i64>",
          "methods": [
            {
              "code": "type Output = Saturating<i64>",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: usize) -> Saturating<i64>",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl Shl<usize> for Saturating<i16>",
          "methods": [
            {
              "code": "type Output = Saturating<i16>",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: usize) -> Saturating<i16>",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl Shl<usize> for Saturating<isize>",
          "methods": [
            {
              "code": "type Output = Saturating<isize>",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: usize) -> Saturating<isize>",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl Shl<usize> for Saturating<u16>",
          "methods": [
            {
              "code": "type Output = Saturating<u16>",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: usize) -> Saturating<u16>",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl Shl<usize> for Saturating<u128>",
          "methods": [
            {
              "code": "type Output = Saturating<u128>",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: usize) -> Saturating<u128>",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'a> Shl<usize> for &'a Saturating<i16>",
          "methods": [
            {
              "code": "type Output = <Saturating<i16> as Shl<usize>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: usize) -> <Saturating<i16> as Shl<usize>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'a> Shl<usize> for &'a Saturating<u128>",
          "methods": [
            {
              "code": "type Output = <Saturating<u128> as Shl<usize>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: usize) -> <Saturating<u128> as Shl<usize>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'a> Shl<usize> for &'a Saturating<usize>",
          "methods": [
            {
              "code": "type Output = <Saturating<usize> as Shl<usize>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: usize) -> <Saturating<usize> as Shl<usize>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl Shl<usize> for Saturating<usize>",
          "methods": [
            {
              "code": "type Output = Saturating<usize>",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: usize) -> Saturating<usize>",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl Shl<usize> for Saturating<i128>",
          "methods": [
            {
              "code": "type Output = Saturating<i128>",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: usize) -> Saturating<i128>",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'a> Shl<usize> for &'a Saturating<i32>",
          "methods": [
            {
              "code": "type Output = <Saturating<i32> as Shl<usize>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: usize) -> <Saturating<i32> as Shl<usize>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'a> Shl<usize> for &'a Saturating<u32>",
          "methods": [
            {
              "code": "type Output = <Saturating<u32> as Shl<usize>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: usize) -> <Saturating<u32> as Shl<usize>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'a> Shl<usize> for &'a Saturating<isize>",
          "methods": [
            {
              "code": "type Output = <Saturating<isize> as Shl<usize>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: usize) -> <Saturating<isize> as Shl<usize>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl Shl<usize> for Saturating<u8>",
          "methods": [
            {
              "code": "type Output = Saturating<u8>",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: usize) -> Saturating<u8>",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'a> Shl<usize> for &'a Saturating<i64>",
          "methods": [
            {
              "code": "type Output = <Saturating<i64> as Shl<usize>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: usize) -> <Saturating<i64> as Shl<usize>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'a> Shl<usize> for &'a Saturating<i128>",
          "methods": [
            {
              "code": "type Output = <Saturating<i128> as Shl<usize>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: usize) -> <Saturating<i128> as Shl<usize>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'a> Shl<usize> for &'a Saturating<i8>",
          "methods": [
            {
              "code": "type Output = <Saturating<i8> as Shl<usize>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: usize) -> <Saturating<i8> as Shl<usize>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl Shl<usize> for Saturating<u32>",
          "methods": [
            {
              "code": "type Output = Saturating<u32>",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: usize) -> Saturating<u32>",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'a> Shl<usize> for &'a Saturating<u64>",
          "methods": [
            {
              "code": "type Output = <Saturating<u64> as Shl<usize>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: usize) -> <Saturating<u64> as Shl<usize>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'a> Shl<usize> for &'a Saturating<u16>",
          "methods": [
            {
              "code": "type Output = <Saturating<u16> as Shl<usize>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: usize) -> <Saturating<u16> as Shl<usize>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl Shl<usize> for Saturating<i32>",
          "methods": [
            {
              "code": "type Output = Saturating<i32>",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: usize) -> Saturating<i32>",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl Shl<usize> for Saturating<i8>",
          "methods": [
            {
              "code": "type Output = Saturating<i8>",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: usize) -> Saturating<i8>",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'a> Shl<usize> for &'a Saturating<u8>",
          "methods": [
            {
              "code": "type Output = <Saturating<u8> as Shl<usize>>::Output",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: usize) -> <Saturating<u8> as Shl<usize>>::Output",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl Shl<usize> for Saturating<u64>",
          "methods": [
            {
              "code": "type Output = Saturating<u64>",
              "text": "The resulting type after applying the << operator."
            },
            {
              "code": "pub fn shl(self, other: usize) -> Saturating<u64>",
              "text": "Performs the << operation."
            }
          ]
        },
        {
          "title": "impl<'_> ShlAssign<&'_ usize> for Saturating<i128>",
          "methods": [
            {
              "code": "pub fn shl_assign(&mut self, other: &usize)",
              "text": "Performs the <<= operation."
            }
          ]
        },
        {
          "title": "impl<'_> ShlAssign<&'_ usize> for Saturating<u64>",
          "methods": [
            {
              "code": "pub fn shl_assign(&mut self, other: &usize)",
              "text": "Performs the <<= operation."
            }
          ]
        },
        {
          "title": "impl<'_> ShlAssign<&'_ usize> for Saturating<u128>",
          "methods": [
            {
              "code": "pub fn shl_assign(&mut self, other: &usize)",
              "text": "Performs the <<= operation."
            }
          ]
        },
        {
          "title": "impl<'_> ShlAssign<&'_ usize> for Saturating<u32>",
          "methods": [
            {
              "code": "pub fn shl_assign(&mut self, other: &usize)",
              "text": "Performs the <<= operation."
            }
          ]
        },
        {
          "title": "impl<'_> ShlAssign<&'_ usize> for Saturating<u16>",
          "methods": [
            {
              "code": "pub fn shl_assign(&mut self, other: &usize)",
              "text": "Performs the <<= operation."
            }
          ]
        },
        {
          "title": "impl<'_> ShlAssign<&'_ usize> for Saturating<i16>",
          "methods": [
            {
              "code": "pub fn shl_assign(&mut self, other: &usize)",
              "text": "Performs the <<= operation."
            }
          ]
        },
        {
          "title": "impl<'_> ShlAssign<&'_ usize> for Saturating<u8>",
          "methods": [
            {
              "code": "pub fn shl_assign(&mut self, other: &usize)",
              "text": "Performs the <<= operation."
            }
          ]
        },
        {
          "title": "impl<'_> ShlAssign<&'_ usize> for Saturating<i8>",
          "methods": [
            {
              "code": "pub fn shl_assign(&mut self, other: &usize)",
              "text": "Performs the <<= operation."
            }
          ]
        },
        {
          "title": "impl<'_> ShlAssign<&'_ usize> for Saturating<i64>",
          "methods": [
            {
              "code": "pub fn shl_assign(&mut self, other: &usize)",
              "text": "Performs the <<= operation."
            }
          ]
        },
        {
          "title": "impl<'_> ShlAssign<&'_ usize> for Saturating<isize>",
          "methods": [
            {
              "code": "pub fn shl_assign(&mut self, other: &usize)",
              "text": "Performs the <<= operation."
            }
          ]
        },
        {
          "title": "impl<'_> ShlAssign<&'_ usize> for Saturating<usize>",
          "methods": [
            {
              "code": "pub fn shl_assign(&mut self, other: &usize)",
              "text": "Performs the <<= operation."
            }
          ]
        },
        {
          "title": "impl<'_> ShlAssign<&'_ usize> for Saturating<i32>",
          "methods": [
            {
              "code": "pub fn shl_assign(&mut self, other: &usize)",
              "text": "Performs the <<= operation."
            }
          ]
        },
        {
          "title": "impl ShlAssign<usize> for Saturating<i16>",
          "methods": [
            {
              "code": "pub fn shl_assign(&mut self, other: usize)",
              "text": "Performs the <<= operation."
            }
          ]
        },
        {
          "title": "impl ShlAssign<usize> for Saturating<u16>",
          "methods": [
            {
              "code": "pub fn shl_assign(&mut self, other: usize)",
              "text": "Performs the <<= operation."
            }
          ]
        },
        {
          "title": "impl ShlAssign<usize> for Saturating<i8>",
          "methods": [
            {
              "code": "pub fn shl_assign(&mut self, other: usize)",
              "text": "Performs the <<= operation."
            }
          ]
        },
        {
          "title": "impl ShlAssign<usize> for Saturating<i32>",
          "methods": [
            {
              "code": "pub fn shl_assign(&mut self, other: usize)",
              "text": "Performs the <<= operation."
            }
          ]
        },
        {
          "title": "impl ShlAssign<usize> for Saturating<u8>",
          "methods": [
            {
              "code": "pub fn shl_assign(&mut self, other: usize)",
              "text": "Performs the <<= operation."
            }
          ]
        },
        {
          "title": "impl ShlAssign<usize> for Saturating<u32>",
          "methods": [
            {
              "code": "pub fn shl_assign(&mut self, other: usize)",
              "text": "Performs the <<= operation."
            }
          ]
        },
        {
          "title": "impl ShlAssign<usize> for Saturating<i128>",
          "methods": [
            {
              "code": "pub fn shl_assign(&mut self, other: usize)",
              "text": "Performs the <<= operation."
            }
          ]
        },
        {
          "title": "impl ShlAssign<usize> for Saturating<i64>",
          "methods": [
            {
              "code": "pub fn shl_assign(&mut self, other: usize)",
              "text": "Performs the <<= operation."
            }
          ]
        },
        {
          "title": "impl ShlAssign<usize> for Saturating<isize>",
          "methods": [
            {
              "code": "pub fn shl_assign(&mut self, other: usize)",
              "text": "Performs the <<= operation."
            }
          ]
        },
        {
          "title": "impl ShlAssign<usize> for Saturating<u128>",
          "methods": [
            {
              "code": "pub fn shl_assign(&mut self, other: usize)",
              "text": "Performs the <<= operation."
            }
          ]
        },
        {
          "title": "impl ShlAssign<usize> for Saturating<u64>",
          "methods": [
            {
              "code": "pub fn shl_assign(&mut self, other: usize)",
              "text": "Performs the <<= operation."
            }
          ]
        },
        {
          "title": "impl ShlAssign<usize> for Saturating<usize>",
          "methods": [
            {
              "code": "pub fn shl_assign(&mut self, other: usize)",
              "text": "Performs the <<= operation."
            }
          ]
        },
        {
          "title": "impl<'_> Shr<&'_ usize> for Saturating<i64>",
          "methods": [
            {
              "code": "type Output = <Saturating<i64> as Shr<usize>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: &usize) -> <Saturating<i64> as Shr<usize>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'_> Shr<&'_ usize> for Saturating<u32>",
          "methods": [
            {
              "code": "type Output = <Saturating<u32> as Shr<usize>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: &usize) -> <Saturating<u32> as Shr<usize>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'_> Shr<&'_ usize> for Saturating<i8>",
          "methods": [
            {
              "code": "type Output = <Saturating<i8> as Shr<usize>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: &usize) -> <Saturating<i8> as Shr<usize>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Shr<&'_ usize> for &'_ Saturating<usize>",
          "methods": [
            {
              "code": "type Output = <Saturating<usize> as Shr<usize>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: &usize) -> <Saturating<usize> as Shr<usize>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Shr<&'_ usize> for &'_ Saturating<u128>",
          "methods": [
            {
              "code": "type Output = <Saturating<u128> as Shr<usize>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: &usize) -> <Saturating<u128> as Shr<usize>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'_> Shr<&'_ usize> for Saturating<u16>",
          "methods": [
            {
              "code": "type Output = <Saturating<u16> as Shr<usize>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: &usize) -> <Saturating<u16> as Shr<usize>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'_> Shr<&'_ usize> for Saturating<usize>",
          "methods": [
            {
              "code": "type Output = <Saturating<usize> as Shr<usize>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: &usize) -> <Saturating<usize> as Shr<usize>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Shr<&'_ usize> for &'_ Saturating<i128>",
          "methods": [
            {
              "code": "type Output = <Saturating<i128> as Shr<usize>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: &usize) -> <Saturating<i128> as Shr<usize>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Shr<&'_ usize> for &'_ Saturating<u8>",
          "methods": [
            {
              "code": "type Output = <Saturating<u8> as Shr<usize>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: &usize) -> <Saturating<u8> as Shr<usize>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Shr<&'_ usize> for &'_ Saturating<i64>",
          "methods": [
            {
              "code": "type Output = <Saturating<i64> as Shr<usize>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: &usize) -> <Saturating<i64> as Shr<usize>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'_> Shr<&'_ usize> for Saturating<u8>",
          "methods": [
            {
              "code": "type Output = <Saturating<u8> as Shr<usize>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: &usize) -> <Saturating<u8> as Shr<usize>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'_> Shr<&'_ usize> for Saturating<u64>",
          "methods": [
            {
              "code": "type Output = <Saturating<u64> as Shr<usize>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: &usize) -> <Saturating<u64> as Shr<usize>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Shr<&'_ usize> for &'_ Saturating<i8>",
          "methods": [
            {
              "code": "type Output = <Saturating<i8> as Shr<usize>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: &usize) -> <Saturating<i8> as Shr<usize>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'_> Shr<&'_ usize> for Saturating<u128>",
          "methods": [
            {
              "code": "type Output = <Saturating<u128> as Shr<usize>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: &usize) -> <Saturating<u128> as Shr<usize>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Shr<&'_ usize> for &'_ Saturating<u16>",
          "methods": [
            {
              "code": "type Output = <Saturating<u16> as Shr<usize>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: &usize) -> <Saturating<u16> as Shr<usize>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Shr<&'_ usize> for &'_ Saturating<u64>",
          "methods": [
            {
              "code": "type Output = <Saturating<u64> as Shr<usize>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: &usize) -> <Saturating<u64> as Shr<usize>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Shr<&'_ usize> for &'_ Saturating<i16>",
          "methods": [
            {
              "code": "type Output = <Saturating<i16> as Shr<usize>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: &usize) -> <Saturating<i16> as Shr<usize>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Shr<&'_ usize> for &'_ Saturating<isize>",
          "methods": [
            {
              "code": "type Output = <Saturating<isize> as Shr<usize>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: &usize) -> <Saturating<isize> as Shr<usize>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Shr<&'_ usize> for &'_ Saturating<i32>",
          "methods": [
            {
              "code": "type Output = <Saturating<i32> as Shr<usize>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: &usize) -> <Saturating<i32> as Shr<usize>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'_> Shr<&'_ usize> for Saturating<isize>",
          "methods": [
            {
              "code": "type Output = <Saturating<isize> as Shr<usize>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: &usize) -> <Saturating<isize> as Shr<usize>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'_> Shr<&'_ usize> for Saturating<i32>",
          "methods": [
            {
              "code": "type Output = <Saturating<i32> as Shr<usize>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: &usize) -> <Saturating<i32> as Shr<usize>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'_> Shr<&'_ usize> for Saturating<i16>",
          "methods": [
            {
              "code": "type Output = <Saturating<i16> as Shr<usize>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: &usize) -> <Saturating<i16> as Shr<usize>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'_> Shr<&'_ usize> for Saturating<i128>",
          "methods": [
            {
              "code": "type Output = <Saturating<i128> as Shr<usize>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: &usize) -> <Saturating<i128> as Shr<usize>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Shr<&'_ usize> for &'_ Saturating<u32>",
          "methods": [
            {
              "code": "type Output = <Saturating<u32> as Shr<usize>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: &usize) -> <Saturating<u32> as Shr<usize>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'a> Shr<usize> for &'a Saturating<u64>",
          "methods": [
            {
              "code": "type Output = <Saturating<u64> as Shr<usize>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: usize) -> <Saturating<u64> as Shr<usize>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'a> Shr<usize> for &'a Saturating<i128>",
          "methods": [
            {
              "code": "type Output = <Saturating<i128> as Shr<usize>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: usize) -> <Saturating<i128> as Shr<usize>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl Shr<usize> for Saturating<u128>",
          "methods": [
            {
              "code": "type Output = Saturating<u128>",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: usize) -> Saturating<u128>",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'a> Shr<usize> for &'a Saturating<u128>",
          "methods": [
            {
              "code": "type Output = <Saturating<u128> as Shr<usize>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: usize) -> <Saturating<u128> as Shr<usize>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl Shr<usize> for Saturating<isize>",
          "methods": [
            {
              "code": "type Output = Saturating<isize>",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: usize) -> Saturating<isize>",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl Shr<usize> for Saturating<u16>",
          "methods": [
            {
              "code": "type Output = Saturating<u16>",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: usize) -> Saturating<u16>",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl Shr<usize> for Saturating<i128>",
          "methods": [
            {
              "code": "type Output = Saturating<i128>",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: usize) -> Saturating<i128>",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'a> Shr<usize> for &'a Saturating<u32>",
          "methods": [
            {
              "code": "type Output = <Saturating<u32> as Shr<usize>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: usize) -> <Saturating<u32> as Shr<usize>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl Shr<usize> for Saturating<u8>",
          "methods": [
            {
              "code": "type Output = Saturating<u8>",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: usize) -> Saturating<u8>",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'a> Shr<usize> for &'a Saturating<u8>",
          "methods": [
            {
              "code": "type Output = <Saturating<u8> as Shr<usize>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: usize) -> <Saturating<u8> as Shr<usize>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'a> Shr<usize> for &'a Saturating<i64>",
          "methods": [
            {
              "code": "type Output = <Saturating<i64> as Shr<usize>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: usize) -> <Saturating<i64> as Shr<usize>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl Shr<usize> for Saturating<u64>",
          "methods": [
            {
              "code": "type Output = Saturating<u64>",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: usize) -> Saturating<u64>",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'a> Shr<usize> for &'a Saturating<usize>",
          "methods": [
            {
              "code": "type Output = <Saturating<usize> as Shr<usize>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: usize) -> <Saturating<usize> as Shr<usize>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl Shr<usize> for Saturating<u32>",
          "methods": [
            {
              "code": "type Output = Saturating<u32>",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: usize) -> Saturating<u32>",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'a> Shr<usize> for &'a Saturating<u16>",
          "methods": [
            {
              "code": "type Output = <Saturating<u16> as Shr<usize>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: usize) -> <Saturating<u16> as Shr<usize>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl Shr<usize> for Saturating<i8>",
          "methods": [
            {
              "code": "type Output = Saturating<i8>",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: usize) -> Saturating<i8>",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl Shr<usize> for Saturating<usize>",
          "methods": [
            {
              "code": "type Output = Saturating<usize>",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: usize) -> Saturating<usize>",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl Shr<usize> for Saturating<i64>",
          "methods": [
            {
              "code": "type Output = Saturating<i64>",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: usize) -> Saturating<i64>",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl Shr<usize> for Saturating<i16>",
          "methods": [
            {
              "code": "type Output = Saturating<i16>",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: usize) -> Saturating<i16>",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl Shr<usize> for Saturating<i32>",
          "methods": [
            {
              "code": "type Output = Saturating<i32>",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: usize) -> Saturating<i32>",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'a> Shr<usize> for &'a Saturating<i32>",
          "methods": [
            {
              "code": "type Output = <Saturating<i32> as Shr<usize>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: usize) -> <Saturating<i32> as Shr<usize>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'a> Shr<usize> for &'a Saturating<i16>",
          "methods": [
            {
              "code": "type Output = <Saturating<i16> as Shr<usize>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: usize) -> <Saturating<i16> as Shr<usize>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'a> Shr<usize> for &'a Saturating<i8>",
          "methods": [
            {
              "code": "type Output = <Saturating<i8> as Shr<usize>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: usize) -> <Saturating<i8> as Shr<usize>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'a> Shr<usize> for &'a Saturating<isize>",
          "methods": [
            {
              "code": "type Output = <Saturating<isize> as Shr<usize>>::Output",
              "text": "The resulting type after applying the >> operator."
            },
            {
              "code": "pub fn shr(self, other: usize) -> <Saturating<isize> as Shr<usize>>::Output",
              "text": "Performs the >> operation."
            }
          ]
        },
        {
          "title": "impl<'_> ShrAssign<&'_ usize> for Saturating<i64>",
          "methods": [
            {
              "code": "pub fn shr_assign(&mut self, other: &usize)",
              "text": "Performs the >>= operation."
            }
          ]
        },
        {
          "title": "impl<'_> ShrAssign<&'_ usize> for Saturating<i128>",
          "methods": [
            {
              "code": "pub fn shr_assign(&mut self, other: &usize)",
              "text": "Performs the >>= operation."
            }
          ]
        },
        {
          "title": "impl<'_> ShrAssign<&'_ usize> for Saturating<u16>",
          "methods": [
            {
              "code": "pub fn shr_assign(&mut self, other: &usize)",
              "text": "Performs the >>= operation."
            }
          ]
        },
        {
          "title": "impl<'_> ShrAssign<&'_ usize> for Saturating<i32>",
          "methods": [
            {
              "code": "pub fn shr_assign(&mut self, other: &usize)",
              "text": "Performs the >>= operation."
            }
          ]
        },
        {
          "title": "impl<'_> ShrAssign<&'_ usize> for Saturating<i8>",
          "methods": [
            {
              "code": "pub fn shr_assign(&mut self, other: &usize)",
              "text": "Performs the >>= operation."
            }
          ]
        },
        {
          "title": "impl<'_> ShrAssign<&'_ usize> for Saturating<u128>",
          "methods": [
            {
              "code": "pub fn shr_assign(&mut self, other: &usize)",
              "text": "Performs the >>= operation."
            }
          ]
        },
        {
          "title": "impl<'_> ShrAssign<&'_ usize> for Saturating<u8>",
          "methods": [
            {
              "code": "pub fn shr_assign(&mut self, other: &usize)",
              "text": "Performs the >>= operation."
            }
          ]
        },
        {
          "title": "impl<'_> ShrAssign<&'_ usize> for Saturating<u32>",
          "methods": [
            {
              "code": "pub fn shr_assign(&mut self, other: &usize)",
              "text": "Performs the >>= operation."
            }
          ]
        },
        {
          "title": "impl<'_> ShrAssign<&'_ usize> for Saturating<i16>",
          "methods": [
            {
              "code": "pub fn shr_assign(&mut self, other: &usize)",
              "text": "Performs the >>= operation."
            }
          ]
        },
        {
          "title": "impl<'_> ShrAssign<&'_ usize> for Saturating<u64>",
          "methods": [
            {
              "code": "pub fn shr_assign(&mut self, other: &usize)",
              "text": "Performs the >>= operation."
            }
          ]
        },
        {
          "title": "impl<'_> ShrAssign<&'_ usize> for Saturating<usize>",
          "methods": [
            {
              "code": "pub fn shr_assign(&mut self, other: &usize)",
              "text": "Performs the >>= operation."
            }
          ]
        },
        {
          "title": "impl<'_> ShrAssign<&'_ usize> for Saturating<isize>",
          "methods": [
            {
              "code": "pub fn shr_assign(&mut self, other: &usize)",
              "text": "Performs the >>= operation."
            }
          ]
        },
        {
          "title": "impl ShrAssign<usize> for Saturating<i128>",
          "methods": [
            {
              "code": "pub fn shr_assign(&mut self, other: usize)",
              "text": "Performs the >>= operation."
            }
          ]
        },
        {
          "title": "impl ShrAssign<usize> for Saturating<u32>",
          "methods": [
            {
              "code": "pub fn shr_assign(&mut self, other: usize)",
              "text": "Performs the >>= operation."
            }
          ]
        },
        {
          "title": "impl ShrAssign<usize> for Saturating<isize>",
          "methods": [
            {
              "code": "pub fn shr_assign(&mut self, other: usize)",
              "text": "Performs the >>= operation."
            }
          ]
        },
        {
          "title": "impl ShrAssign<usize> for Saturating<u16>",
          "methods": [
            {
              "code": "pub fn shr_assign(&mut self, other: usize)",
              "text": "Performs the >>= operation."
            }
          ]
        },
        {
          "title": "impl ShrAssign<usize> for Saturating<u64>",
          "methods": [
            {
              "code": "pub fn shr_assign(&mut self, other: usize)",
              "text": "Performs the >>= operation."
            }
          ]
        },
        {
          "title": "impl ShrAssign<usize> for Saturating<u8>",
          "methods": [
            {
              "code": "pub fn shr_assign(&mut self, other: usize)",
              "text": "Performs the >>= operation."
            }
          ]
        },
        {
          "title": "impl ShrAssign<usize> for Saturating<i8>",
          "methods": [
            {
              "code": "pub fn shr_assign(&mut self, other: usize)",
              "text": "Performs the >>= operation."
            }
          ]
        },
        {
          "title": "impl ShrAssign<usize> for Saturating<i32>",
          "methods": [
            {
              "code": "pub fn shr_assign(&mut self, other: usize)",
              "text": "Performs the >>= operation."
            }
          ]
        },
        {
          "title": "impl ShrAssign<usize> for Saturating<i16>",
          "methods": [
            {
              "code": "pub fn shr_assign(&mut self, other: usize)",
              "text": "Performs the >>= operation."
            }
          ]
        },
        {
          "title": "impl ShrAssign<usize> for Saturating<u128>",
          "methods": [
            {
              "code": "pub fn shr_assign(&mut self, other: usize)",
              "text": "Performs the >>= operation."
            }
          ]
        },
        {
          "title": "impl ShrAssign<usize> for Saturating<i64>",
          "methods": [
            {
              "code": "pub fn shr_assign(&mut self, other: usize)",
              "text": "Performs the >>= operation."
            }
          ]
        },
        {
          "title": "impl ShrAssign<usize> for Saturating<usize>",
          "methods": [
            {
              "code": "pub fn shr_assign(&mut self, other: usize)",
              "text": "Performs the >>= operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Sub<&'_ Saturating<i128>> for &'_ Saturating<i128>",
          "methods": [
            {
              "code": "type Output = <Saturating<i128> as Sub<Saturating<i128>>>::Output",
              "text": "The resulting type after applying the - operator."
            },
            {
              "code": "pub fn sub( self, other: &Saturating<i128>) -> <Saturating<i128> as Sub<Saturating<i128>>>::Output",
              "text": "Performs the - operation."
            }
          ]
        },
        {
          "title": "impl<'_> Sub<&'_ Saturating<i128>> for Saturating<i128>",
          "methods": [
            {
              "code": "type Output = <Saturating<i128> as Sub<Saturating<i128>>>::Output",
              "text": "The resulting type after applying the - operator."
            },
            {
              "code": "pub fn sub( self, other: &Saturating<i128>) -> <Saturating<i128> as Sub<Saturating<i128>>>::Output",
              "text": "Performs the - operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Sub<&'_ Saturating<i16>> for &'_ Saturating<i16>",
          "methods": [
            {
              "code": "type Output = <Saturating<i16> as Sub<Saturating<i16>>>::Output",
              "text": "The resulting type after applying the - operator."
            },
            {
              "code": "pub fn sub( self, other: &Saturating<i16>) -> <Saturating<i16> as Sub<Saturating<i16>>>::Output",
              "text": "Performs the - operation."
            }
          ]
        },
        {
          "title": "impl<'_> Sub<&'_ Saturating<i16>> for Saturating<i16>",
          "methods": [
            {
              "code": "type Output = <Saturating<i16> as Sub<Saturating<i16>>>::Output",
              "text": "The resulting type after applying the - operator."
            },
            {
              "code": "pub fn sub( self, other: &Saturating<i16>) -> <Saturating<i16> as Sub<Saturating<i16>>>::Output",
              "text": "Performs the - operation."
            }
          ]
        },
        {
          "title": "impl<'_> Sub<&'_ Saturating<i32>> for Saturating<i32>",
          "methods": [
            {
              "code": "type Output = <Saturating<i32> as Sub<Saturating<i32>>>::Output",
              "text": "The resulting type after applying the - operator."
            },
            {
              "code": "pub fn sub( self, other: &Saturating<i32>) -> <Saturating<i32> as Sub<Saturating<i32>>>::Output",
              "text": "Performs the - operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Sub<&'_ Saturating<i32>> for &'_ Saturating<i32>",
          "methods": [
            {
              "code": "type Output = <Saturating<i32> as Sub<Saturating<i32>>>::Output",
              "text": "The resulting type after applying the - operator."
            },
            {
              "code": "pub fn sub( self, other: &Saturating<i32>) -> <Saturating<i32> as Sub<Saturating<i32>>>::Output",
              "text": "Performs the - operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Sub<&'_ Saturating<i64>> for &'_ Saturating<i64>",
          "methods": [
            {
              "code": "type Output = <Saturating<i64> as Sub<Saturating<i64>>>::Output",
              "text": "The resulting type after applying the - operator."
            },
            {
              "code": "pub fn sub( self, other: &Saturating<i64>) -> <Saturating<i64> as Sub<Saturating<i64>>>::Output",
              "text": "Performs the - operation."
            }
          ]
        },
        {
          "title": "impl<'_> Sub<&'_ Saturating<i64>> for Saturating<i64>",
          "methods": [
            {
              "code": "type Output = <Saturating<i64> as Sub<Saturating<i64>>>::Output",
              "text": "The resulting type after applying the - operator."
            },
            {
              "code": "pub fn sub( self, other: &Saturating<i64>) -> <Saturating<i64> as Sub<Saturating<i64>>>::Output",
              "text": "Performs the - operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Sub<&'_ Saturating<i8>> for &'_ Saturating<i8>",
          "methods": [
            {
              "code": "type Output = <Saturating<i8> as Sub<Saturating<i8>>>::Output",
              "text": "The resulting type after applying the - operator."
            },
            {
              "code": "pub fn sub( self, other: &Saturating<i8>) -> <Saturating<i8> as Sub<Saturating<i8>>>::Output",
              "text": "Performs the - operation."
            }
          ]
        },
        {
          "title": "impl<'_> Sub<&'_ Saturating<i8>> for Saturating<i8>",
          "methods": [
            {
              "code": "type Output = <Saturating<i8> as Sub<Saturating<i8>>>::Output",
              "text": "The resulting type after applying the - operator."
            },
            {
              "code": "pub fn sub( self, other: &Saturating<i8>) -> <Saturating<i8> as Sub<Saturating<i8>>>::Output",
              "text": "Performs the - operation."
            }
          ]
        },
        {
          "title": "impl<'_> Sub<&'_ Saturating<isize>> for Saturating<isize>",
          "methods": [
            {
              "code": "type Output = <Saturating<isize> as Sub<Saturating<isize>>>::Output",
              "text": "The resulting type after applying the - operator."
            },
            {
              "code": "pub fn sub( self, other: &Saturating<isize>) -> <Saturating<isize> as Sub<Saturating<isize>>>::Output",
              "text": "Performs the - operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Sub<&'_ Saturating<isize>> for &'_ Saturating<isize>",
          "methods": [
            {
              "code": "type Output = <Saturating<isize> as Sub<Saturating<isize>>>::Output",
              "text": "The resulting type after applying the - operator."
            },
            {
              "code": "pub fn sub( self, other: &Saturating<isize>) -> <Saturating<isize> as Sub<Saturating<isize>>>::Output",
              "text": "Performs the - operation."
            }
          ]
        },
        {
          "title": "impl<'_> Sub<&'_ Saturating<u128>> for Saturating<u128>",
          "methods": [
            {
              "code": "type Output = <Saturating<u128> as Sub<Saturating<u128>>>::Output",
              "text": "The resulting type after applying the - operator."
            },
            {
              "code": "pub fn sub( self, other: &Saturating<u128>) -> <Saturating<u128> as Sub<Saturating<u128>>>::Output",
              "text": "Performs the - operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Sub<&'_ Saturating<u128>> for &'_ Saturating<u128>",
          "methods": [
            {
              "code": "type Output = <Saturating<u128> as Sub<Saturating<u128>>>::Output",
              "text": "The resulting type after applying the - operator."
            },
            {
              "code": "pub fn sub( self, other: &Saturating<u128>) -> <Saturating<u128> as Sub<Saturating<u128>>>::Output",
              "text": "Performs the - operation."
            }
          ]
        },
        {
          "title": "impl<'_> Sub<&'_ Saturating<u16>> for Saturating<u16>",
          "methods": [
            {
              "code": "type Output = <Saturating<u16> as Sub<Saturating<u16>>>::Output",
              "text": "The resulting type after applying the - operator."
            },
            {
              "code": "pub fn sub( self, other: &Saturating<u16>) -> <Saturating<u16> as Sub<Saturating<u16>>>::Output",
              "text": "Performs the - operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Sub<&'_ Saturating<u16>> for &'_ Saturating<u16>",
          "methods": [
            {
              "code": "type Output = <Saturating<u16> as Sub<Saturating<u16>>>::Output",
              "text": "The resulting type after applying the - operator."
            },
            {
              "code": "pub fn sub( self, other: &Saturating<u16>) -> <Saturating<u16> as Sub<Saturating<u16>>>::Output",
              "text": "Performs the - operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Sub<&'_ Saturating<u32>> for &'_ Saturating<u32>",
          "methods": [
            {
              "code": "type Output = <Saturating<u32> as Sub<Saturating<u32>>>::Output",
              "text": "The resulting type after applying the - operator."
            },
            {
              "code": "pub fn sub( self, other: &Saturating<u32>) -> <Saturating<u32> as Sub<Saturating<u32>>>::Output",
              "text": "Performs the - operation."
            }
          ]
        },
        {
          "title": "impl<'_> Sub<&'_ Saturating<u32>> for Saturating<u32>",
          "methods": [
            {
              "code": "type Output = <Saturating<u32> as Sub<Saturating<u32>>>::Output",
              "text": "The resulting type after applying the - operator."
            },
            {
              "code": "pub fn sub( self, other: &Saturating<u32>) -> <Saturating<u32> as Sub<Saturating<u32>>>::Output",
              "text": "Performs the - operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Sub<&'_ Saturating<u64>> for &'_ Saturating<u64>",
          "methods": [
            {
              "code": "type Output = <Saturating<u64> as Sub<Saturating<u64>>>::Output",
              "text": "The resulting type after applying the - operator."
            },
            {
              "code": "pub fn sub( self, other: &Saturating<u64>) -> <Saturating<u64> as Sub<Saturating<u64>>>::Output",
              "text": "Performs the - operation."
            }
          ]
        },
        {
          "title": "impl<'_> Sub<&'_ Saturating<u64>> for Saturating<u64>",
          "methods": [
            {
              "code": "type Output = <Saturating<u64> as Sub<Saturating<u64>>>::Output",
              "text": "The resulting type after applying the - operator."
            },
            {
              "code": "pub fn sub( self, other: &Saturating<u64>) -> <Saturating<u64> as Sub<Saturating<u64>>>::Output",
              "text": "Performs the - operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Sub<&'_ Saturating<u8>> for &'_ Saturating<u8>",
          "methods": [
            {
              "code": "type Output = <Saturating<u8> as Sub<Saturating<u8>>>::Output",
              "text": "The resulting type after applying the - operator."
            },
            {
              "code": "pub fn sub( self, other: &Saturating<u8>) -> <Saturating<u8> as Sub<Saturating<u8>>>::Output",
              "text": "Performs the - operation."
            }
          ]
        },
        {
          "title": "impl<'_> Sub<&'_ Saturating<u8>> for Saturating<u8>",
          "methods": [
            {
              "code": "type Output = <Saturating<u8> as Sub<Saturating<u8>>>::Output",
              "text": "The resulting type after applying the - operator."
            },
            {
              "code": "pub fn sub( self, other: &Saturating<u8>) -> <Saturating<u8> as Sub<Saturating<u8>>>::Output",
              "text": "Performs the - operation."
            }
          ]
        },
        {
          "title": "impl<'_, '_> Sub<&'_ Saturating<usize>> for &'_ Saturating<usize>",
          "methods": [
            {
              "code": "type Output = <Saturating<usize> as Sub<Saturating<usize>>>::Output",
              "text": "The resulting type after applying the - operator."
            },
            {
              "code": "pub fn sub( self, other: &Saturating<usize>) -> <Saturating<usize> as Sub<Saturating<usize>>>::Output",
              "text": "Performs the - operation."
            }
          ]
        },
        {
          "title": "impl<'_> Sub<&'_ Saturating<usize>> for Saturating<usize>",
          "methods": [
            {
              "code": "type Output = <Saturating<usize> as Sub<Saturating<usize>>>::Output",
              "text": "The resulting type after applying the - operator."
            },
            {
              "code": "pub fn sub( self, other: &Saturating<usize>) -> <Saturating<usize> as Sub<Saturating<usize>>>::Output",
              "text": "Performs the - operation."
            }
          ]
        },
        {
          "title": "impl Sub<Saturating<i128>> for Saturating<i128>",
          "methods": [
            {
              "code": "type Output = Saturating<i128>",
              "text": "The resulting type after applying the - operator."
            },
            {
              "code": "pub fn sub(self, other: Saturating<i128>) -> Saturating<i128>",
              "text": "Performs the - operation."
            }
          ]
        },
        {
          "title": "impl<'a> Sub<Saturating<i128>> for &'a Saturating<i128>",
          "methods": [
            {
              "code": "type Output = <Saturating<i128> as Sub<Saturating<i128>>>::Output",
              "text": "The resulting type after applying the - operator."
            },
            {
              "code": "pub fn sub( self, other: Saturating<i128>) -> <Saturating<i128> as Sub<Saturating<i128>>>::Output",
              "text": "Performs the - operation."
            }
          ]
        },
        {
          "title": "impl Sub<Saturating<i16>> for Saturating<i16>",
          "methods": [
            {
              "code": "type Output = Saturating<i16>",
              "text": "The resulting type after applying the - operator."
            },
            {
              "code": "pub fn sub(self, other: Saturating<i16>) -> Saturating<i16>",
              "text": "Performs the - operation."
            }
          ]
        },
        {
          "title": "impl<'a> Sub<Saturating<i16>> for &'a Saturating<i16>",
          "methods": [
            {
              "code": "type Output = <Saturating<i16> as Sub<Saturating<i16>>>::Output",
              "text": "The resulting type after applying the - operator."
            },
            {
              "code": "pub fn sub( self, other: Saturating<i16>) -> <Saturating<i16> as Sub<Saturating<i16>>>::Output",
              "text": "Performs the - operation."
            }
          ]
        },
        {
          "title": "impl<'a> Sub<Saturating<i32>> for &'a Saturating<i32>",
          "methods": [
            {
              "code": "type Output = <Saturating<i32> as Sub<Saturating<i32>>>::Output",
              "text": "The resulting type after applying the - operator."
            },
            {
              "code": "pub fn sub( self, other: Saturating<i32>) -> <Saturating<i32> as Sub<Saturating<i32>>>::Output",
              "text": "Performs the - operation."
            }
          ]
        },
        {
          "title": "impl Sub<Saturating<i32>> for Saturating<i32>",
          "methods": [
            {
              "code": "type Output = Saturating<i32>",
              "text": "The resulting type after applying the - operator."
            },
            {
              "code": "pub fn sub(self, other: Saturating<i32>) -> Saturating<i32>",
              "text": "Performs the - operation."
            }
          ]
        },
        {
          "title": "impl Sub<Saturating<i64>> for Saturating<i64>",
          "methods": [
            {
              "code": "type Output = Saturating<i64>",
              "text": "The resulting type after applying the - operator."
            },
            {
              "code": "pub fn sub(self, other: Saturating<i64>) -> Saturating<i64>",
              "text": "Performs the - operation."
            }
          ]
        },
        {
          "title": "impl<'a> Sub<Saturating<i64>> for &'a Saturating<i64>",
          "methods": [
            {
              "code": "type Output = <Saturating<i64> as Sub<Saturating<i64>>>::Output",
              "text": "The resulting type after applying the - operator."
            },
            {
              "code": "pub fn sub( self, other: Saturating<i64>) -> <Saturating<i64> as Sub<Saturating<i64>>>::Output",
              "text": "Performs the - operation."
            }
          ]
        },
        {
          "title": "impl<'a> Sub<Saturating<i8>> for &'a Saturating<i8>",
          "methods": [
            {
              "code": "type Output = <Saturating<i8> as Sub<Saturating<i8>>>::Output",
              "text": "The resulting type after applying the - operator."
            },
            {
              "code": "pub fn sub( self, other: Saturating<i8>) -> <Saturating<i8> as Sub<Saturating<i8>>>::Output",
              "text": "Performs the - operation."
            }
          ]
        },
        {
          "title": "impl Sub<Saturating<i8>> for Saturating<i8>",
          "methods": [
            {
              "code": "type Output = Saturating<i8>",
              "text": "The resulting type after applying the - operator."
            },
            {
              "code": "pub fn sub(self, other: Saturating<i8>) -> Saturating<i8>",
              "text": "Performs the - operation."
            }
          ]
        },
        {
          "title": "impl Sub<Saturating<isize>> for Saturating<isize>",
          "methods": [
            {
              "code": "type Output = Saturating<isize>",
              "text": "The resulting type after applying the - operator."
            },
            {
              "code": "pub fn sub(self, other: Saturating<isize>) -> Saturating<isize>",
              "text": "Performs the - operation."
            }
          ]
        },
        {
          "title": "impl<'a> Sub<Saturating<isize>> for &'a Saturating<isize>",
          "methods": [
            {
              "code": "type Output = <Saturating<isize> as Sub<Saturating<isize>>>::Output",
              "text": "The resulting type after applying the - operator."
            },
            {
              "code": "pub fn sub( self, other: Saturating<isize>) -> <Saturating<isize> as Sub<Saturating<isize>>>::Output",
              "text": "Performs the - operation."
            }
          ]
        },
        {
          "title": "impl Sub<Saturating<u128>> for Saturating<u128>",
          "methods": [
            {
              "code": "type Output = Saturating<u128>",
              "text": "The resulting type after applying the - operator."
            },
            {
              "code": "pub fn sub(self, other: Saturating<u128>) -> Saturating<u128>",
              "text": "Performs the - operation."
            }
          ]
        },
        {
          "title": "impl<'a> Sub<Saturating<u128>> for &'a Saturating<u128>",
          "methods": [
            {
              "code": "type Output = <Saturating<u128> as Sub<Saturating<u128>>>::Output",
              "text": "The resulting type after applying the - operator."
            },
            {
              "code": "pub fn sub( self, other: Saturating<u128>) -> <Saturating<u128> as Sub<Saturating<u128>>>::Output",
              "text": "Performs the - operation."
            }
          ]
        },
        {
          "title": "impl<'a> Sub<Saturating<u16>> for &'a Saturating<u16>",
          "methods": [
            {
              "code": "type Output = <Saturating<u16> as Sub<Saturating<u16>>>::Output",
              "text": "The resulting type after applying the - operator."
            },
            {
              "code": "pub fn sub( self, other: Saturating<u16>) -> <Saturating<u16> as Sub<Saturating<u16>>>::Output",
              "text": "Performs the - operation."
            }
          ]
        },
        {
          "title": "impl Sub<Saturating<u16>> for Saturating<u16>",
          "methods": [
            {
              "code": "type Output = Saturating<u16>",
              "text": "The resulting type after applying the - operator."
            },
            {
              "code": "pub fn sub(self, other: Saturating<u16>) -> Saturating<u16>",
              "text": "Performs the - operation."
            }
          ]
        },
        {
          "title": "impl Sub<Saturating<u32>> for Saturating<u32>",
          "methods": [
            {
              "code": "type Output = Saturating<u32>",
              "text": "The resulting type after applying the - operator."
            },
            {
              "code": "pub fn sub(self, other: Saturating<u32>) -> Saturating<u32>",
              "text": "Performs the - operation."
            }
          ]
        },
        {
          "title": "impl<'a> Sub<Saturating<u32>> for &'a Saturating<u32>",
          "methods": [
            {
              "code": "type Output = <Saturating<u32> as Sub<Saturating<u32>>>::Output",
              "text": "The resulting type after applying the - operator."
            },
            {
              "code": "pub fn sub( self, other: Saturating<u32>) -> <Saturating<u32> as Sub<Saturating<u32>>>::Output",
              "text": "Performs the - operation."
            }
          ]
        },
        {
          "title": "impl Sub<Saturating<u64>> for Saturating<u64>",
          "methods": [
            {
              "code": "type Output = Saturating<u64>",
              "text": "The resulting type after applying the - operator."
            },
            {
              "code": "pub fn sub(self, other: Saturating<u64>) -> Saturating<u64>",
              "text": "Performs the - operation."
            }
          ]
        },
        {
          "title": "impl<'a> Sub<Saturating<u64>> for &'a Saturating<u64>",
          "methods": [
            {
              "code": "type Output = <Saturating<u64> as Sub<Saturating<u64>>>::Output",
              "text": "The resulting type after applying the - operator."
            },
            {
              "code": "pub fn sub( self, other: Saturating<u64>) -> <Saturating<u64> as Sub<Saturating<u64>>>::Output",
              "text": "Performs the - operation."
            }
          ]
        },
        {
          "title": "impl Sub<Saturating<u8>> for Saturating<u8>",
          "methods": [
            {
              "code": "type Output = Saturating<u8>",
              "text": "The resulting type after applying the - operator."
            },
            {
              "code": "pub fn sub(self, other: Saturating<u8>) -> Saturating<u8>",
              "text": "Performs the - operation."
            }
          ]
        },
        {
          "title": "impl<'a> Sub<Saturating<u8>> for &'a Saturating<u8>",
          "methods": [
            {
              "code": "type Output = <Saturating<u8> as Sub<Saturating<u8>>>::Output",
              "text": "The resulting type after applying the - operator."
            },
            {
              "code": "pub fn sub( self, other: Saturating<u8>) -> <Saturating<u8> as Sub<Saturating<u8>>>::Output",
              "text": "Performs the - operation."
            }
          ]
        },
        {
          "title": "impl Sub<Saturating<usize>> for Saturating<usize>",
          "methods": [
            {
              "code": "type Output = Saturating<usize>",
              "text": "The resulting type after applying the - operator."
            },
            {
              "code": "pub fn sub(self, other: Saturating<usize>) -> Saturating<usize>",
              "text": "Performs the - operation."
            }
          ]
        },
        {
          "title": "impl<'a> Sub<Saturating<usize>> for &'a Saturating<usize>",
          "methods": [
            {
              "code": "type Output = <Saturating<usize> as Sub<Saturating<usize>>>::Output",
              "text": "The resulting type after applying the - operator."
            },
            {
              "code": "pub fn sub( self, other: Saturating<usize>) -> <Saturating<usize> as Sub<Saturating<usize>>>::Output",
              "text": "Performs the - operation."
            }
          ]
        },
        {
          "title": "impl<'_> SubAssign<&'_ Saturating<i128>> for Saturating<i128>",
          "methods": [
            {
              "code": "pub fn sub_assign(&mut self, other: &Saturating<i128>)",
              "text": "Performs the -= operation."
            }
          ]
        },
        {
          "title": "impl<'_> SubAssign<&'_ Saturating<i16>> for Saturating<i16>",
          "methods": [
            {
              "code": "pub fn sub_assign(&mut self, other: &Saturating<i16>)",
              "text": "Performs the -= operation."
            }
          ]
        },
        {
          "title": "impl<'_> SubAssign<&'_ Saturating<i32>> for Saturating<i32>",
          "methods": [
            {
              "code": "pub fn sub_assign(&mut self, other: &Saturating<i32>)",
              "text": "Performs the -= operation."
            }
          ]
        },
        {
          "title": "impl<'_> SubAssign<&'_ Saturating<i64>> for Saturating<i64>",
          "methods": [
            {
              "code": "pub fn sub_assign(&mut self, other: &Saturating<i64>)",
              "text": "Performs the -= operation."
            }
          ]
        },
        {
          "title": "impl<'_> SubAssign<&'_ Saturating<i8>> for Saturating<i8>",
          "methods": [
            {
              "code": "pub fn sub_assign(&mut self, other: &Saturating<i8>)",
              "text": "Performs the -= operation."
            }
          ]
        },
        {
          "title": "impl<'_> SubAssign<&'_ Saturating<isize>> for Saturating<isize>",
          "methods": [
            {
              "code": "pub fn sub_assign(&mut self, other: &Saturating<isize>)",
              "text": "Performs the -= operation."
            }
          ]
        },
        {
          "title": "impl<'_> SubAssign<&'_ Saturating<u128>> for Saturating<u128>",
          "methods": [
            {
              "code": "pub fn sub_assign(&mut self, other: &Saturating<u128>)",
              "text": "Performs the -= operation."
            }
          ]
        },
        {
          "title": "impl<'_> SubAssign<&'_ Saturating<u16>> for Saturating<u16>",
          "methods": [
            {
              "code": "pub fn sub_assign(&mut self, other: &Saturating<u16>)",
              "text": "Performs the -= operation."
            }
          ]
        },
        {
          "title": "impl<'_> SubAssign<&'_ Saturating<u32>> for Saturating<u32>",
          "methods": [
            {
              "code": "pub fn sub_assign(&mut self, other: &Saturating<u32>)",
              "text": "Performs the -= operation."
            }
          ]
        },
        {
          "title": "impl<'_> SubAssign<&'_ Saturating<u64>> for Saturating<u64>",
          "methods": [
            {
              "code": "pub fn sub_assign(&mut self, other: &Saturating<u64>)",
              "text": "Performs the -= operation."
            }
          ]
        },
        {
          "title": "impl<'_> SubAssign<&'_ Saturating<u8>> for Saturating<u8>",
          "methods": [
            {
              "code": "pub fn sub_assign(&mut self, other: &Saturating<u8>)",
              "text": "Performs the -= operation."
            }
          ]
        },
        {
          "title": "impl<'_> SubAssign<&'_ Saturating<usize>> for Saturating<usize>",
          "methods": [
            {
              "code": "pub fn sub_assign(&mut self, other: &Saturating<usize>)",
              "text": "Performs the -= operation."
            }
          ]
        },
        {
          "title": "impl SubAssign<Saturating<i128>> for Saturating<i128>",
          "methods": [
            {
              "code": "pub fn sub_assign(&mut self, other: Saturating<i128>)",
              "text": "Performs the -= operation."
            }
          ]
        },
        {
          "title": "impl SubAssign<Saturating<i16>> for Saturating<i16>",
          "methods": [
            {
              "code": "pub fn sub_assign(&mut self, other: Saturating<i16>)",
              "text": "Performs the -= operation."
            }
          ]
        },
        {
          "title": "impl SubAssign<Saturating<i32>> for Saturating<i32>",
          "methods": [
            {
              "code": "pub fn sub_assign(&mut self, other: Saturating<i32>)",
              "text": "Performs the -= operation."
            }
          ]
        },
        {
          "title": "impl SubAssign<Saturating<i64>> for Saturating<i64>",
          "methods": [
            {
              "code": "pub fn sub_assign(&mut self, other: Saturating<i64>)",
              "text": "Performs the -= operation."
            }
          ]
        },
        {
          "title": "impl SubAssign<Saturating<i8>> for Saturating<i8>",
          "methods": [
            {
              "code": "pub fn sub_assign(&mut self, other: Saturating<i8>)",
              "text": "Performs the -= operation."
            }
          ]
        },
        {
          "title": "impl SubAssign<Saturating<isize>> for Saturating<isize>",
          "methods": [
            {
              "code": "pub fn sub_assign(&mut self, other: Saturating<isize>)",
              "text": "Performs the -= operation."
            }
          ]
        },
        {
          "title": "impl SubAssign<Saturating<u128>> for Saturating<u128>",
          "methods": [
            {
              "code": "pub fn sub_assign(&mut self, other: Saturating<u128>)",
              "text": "Performs the -= operation."
            }
          ]
        },
        {
          "title": "impl SubAssign<Saturating<u16>> for Saturating<u16>",
          "methods": [
            {
              "code": "pub fn sub_assign(&mut self, other: Saturating<u16>)",
              "text": "Performs the -= operation."
            }
          ]
        },
        {
          "title": "impl SubAssign<Saturating<u32>> for Saturating<u32>",
          "methods": [
            {
              "code": "pub fn sub_assign(&mut self, other: Saturating<u32>)",
              "text": "Performs the -= operation."
            }
          ]
        },
        {
          "title": "impl SubAssign<Saturating<u64>> for Saturating<u64>",
          "methods": [
            {
              "code": "pub fn sub_assign(&mut self, other: Saturating<u64>)",
              "text": "Performs the -= operation."
            }
          ]
        },
        {
          "title": "impl SubAssign<Saturating<u8>> for Saturating<u8>",
          "methods": [
            {
              "code": "pub fn sub_assign(&mut self, other: Saturating<u8>)",
              "text": "Performs the -= operation."
            }
          ]
        },
        {
          "title": "impl SubAssign<Saturating<usize>> for Saturating<usize>",
          "methods": [
            {
              "code": "pub fn sub_assign(&mut self, other: Saturating<usize>)",
              "text": "Performs the -= operation."
            }
          ]
        },
        {
          "title": "impl<T> UpperHex for Saturating<T> where T: UpperHex,",
          "methods": [
            {
              "code": "pub fn fmt(&self, f: &mut Formatter<'_>) -> Result<(), Error>",
              "text": "Formats the value using the given formatter."
            }
          ]
        }
      ]
    }
  ]
}