{
  "title": "Struct std::cell::Ref",
  "sections": [
    {
      "name": "implementations",
      "methods": [
        {
          "code": "pub fn clone(orig: &Ref<'b, T>) -> Ref<'b, T>",
          "text": "Copies a Ref."
        },
        {
          "code": "pub fn map<U, F>(orig: Ref<'b, T>, f: F) -> Ref<'b, U> where F: FnOnce(&T) -> &U, U: ?Sized,",
          "text": "Makes a new Ref for a component of the borrowed data."
        },
        {
          "code": "pub fn filter_map<U, F>( orig: Ref<'b, T>, f: F) -> Result<Ref<'b, U>, Ref<'b, T>> where F: FnOnce(&T) -> Option<&U>, U: ?Sized,",
          "text": "Makes a new Ref for an optional component of the borrowed data. The original guard is returned as an Err(..) if the closure returns None."
        },
        {
          "code": "pub fn map_split<U, V, F>(orig: Ref<'b, T>, f: F) -> (Ref<'b, U>, Ref<'b, V>) where F: FnOnce(&T) -> (&U, &V), U: ?Sized, V: ?Sized,",
          "text": "Splits a Ref into multiple Refs for different components of the borrowed data."
        },
        {
          "code": "pub fn leak(orig: Ref<'b, T>) -> &'b T",
          "text": "Convert into a reference to the underlying data."
        }
      ]
    },
    {
      "name": "derefMethods",
      "methods": []
    },
    {
      "name": "traitImpl",
      "traits": [
        {
          "title": "impl<'_, T> Debug for Ref<'_, T> where T: Debug + ?Sized,",
          "methods": [
            {
              "code": "pub fn fmt(&self, f: &mut Formatter<'_>) -> Result<(), Error>",
              "text": "Formats the value using the given formatter."
            }
          ]
        },
        {
          "title": "impl<'_, T> Deref for Ref<'_, T> where T: ?Sized,",
          "methods": [
            {
              "code": "type Target = T",
              "text": "The resulting type after dereferencing."
            },
            {
              "code": "pub fn deref(&self) -> &T",
              "text": "Dereferences the value."
            }
          ]
        },
        {
          "title": "impl<'_, T> Display for Ref<'_, T> where T: Display + ?Sized,",
          "methods": [
            {
              "code": "pub fn fmt(&self, f: &mut Formatter<'_>) -> Result<(), Error>",
              "text": "Formats the value using the given formatter."
            }
          ]
        }
      ]
    }
  ]
}