{
  "title": "Struct std::sync::Mutex",
  "sections": [
    {
      "name": "implementations",
      "methods": [
        {
          "code": "pub fn new(t: T) -> Mutex<T>",
          "text": "Creates a new mutex in an unlocked state ready for use."
        },
        {
          "code": "pub fn lock(&self) -> LockResult<MutexGuard<'_, T>>",
          "text": "Acquires a mutex, blocking the current thread until it is able to do so."
        },
        {
          "code": "pub fn try_lock(&self) -> TryLockResult<MutexGuard<'_, T>>",
          "text": "Attempts to acquire this lock."
        },
        {
          "code": "pub fn unlock(guard: MutexGuard<'_, T>)",
          "text": "Immediately drops the guard, and consequently unlocks the mutex."
        },
        {
          "code": "pub fn is_poisoned(&self) -> bool",
          "text": "Determines whether the mutex is poisoned."
        },
        {
          "code": "pub fn into_inner(self) -> LockResult<T> where T: Sized,",
          "text": "Consumes this mutex, returning the underlying data."
        },
        {
          "code": "pub fn get_mut(&mut self) -> LockResult<&mut T>",
          "text": "Returns a mutable reference to the underlying data."
        }
      ]
    },
    {
      "name": "derefMethods",
      "methods": []
    },
    {
      "name": "traitImpl",
      "traits": [
        {
          "title": "impl<T: ?Sized + Debug> Debug for Mutex<T>",
          "methods": [
            {
              "code": "fn fmt(&self, f: &mut Formatter<'_>) -> Result",
              "text": "Formats the value using the given formatter."
            }
          ]
        },
        {
          "title": "impl<T: ?Sized + Default> Default for Mutex<T>",
          "methods": [
            {
              "code": "fn default() -> Mutex<T>",
              "text": "Creates a Mutex<T>, with the Default value for T."
            }
          ]
        },
        {
          "title": "impl<T> From<T> for Mutex<T>",
          "methods": [
            {
              "code": "fn from(t: T) -> Self",
              "text": "Creates a new mutex in an unlocked state ready for use. This is equivalent to Mutex::new."
            }
          ]
        }
      ]
    }
  ]
}