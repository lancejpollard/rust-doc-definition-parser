{
  "title": "Struct tokio::sync::watch::Receiver",
  "sections": [
    {
      "name": "implementations",
      "methods": [
        {
          "code": "pub fn borrow(&self) -> Ref<'_, T>",
          "text": "Returns a reference to the most recently sent value."
        },
        {
          "code": "pub fn borrow_and_update(&mut self) -> Ref<'_, T>",
          "text": "Returns a reference to the most recently sent value and mark that value as seen."
        },
        {
          "code": "pub fn has_changed(&self) -> Result<bool, RecvError>",
          "text": "Checks if this channel contains a message that this receiver has not yet seen. The new value is not marked as seen."
        },
        {
          "code": "pub async fn changed(&mut self) -> Result<(), RecvError>",
          "text": "Waits for a change notification, then marks the newest value as seen."
        }
      ]
    },
    {
      "name": "derefMethods",
      "methods": []
    },
    {
      "name": "traitImpl",
      "traits": [
        {
          "title": "impl<T> Clone for Receiver<T>",
          "methods": [
            {
              "code": "fn clone(&self) -> Self",
              "text": "Returns a copy of the value."
            },
            {
              "code": "fn clone_from(&mut self, source: &Self)",
              "text": "Performs copy-assignment from source."
            }
          ]
        },
        {
          "title": "impl<T: Debug> Debug for Receiver<T>",
          "methods": [
            {
              "code": "fn fmt(&self, f: &mut Formatter<'_>) -> Result",
              "text": "Formats the value using the given formatter."
            }
          ]
        },
        {
          "title": "impl<T> Drop for Receiver<T>",
          "methods": [
            {
              "code": "fn drop(&mut self)",
              "text": "Executes the destructor for this type."
            }
          ]
        }
      ]
    }
  ]
}