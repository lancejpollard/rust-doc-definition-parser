{
  "title": "Struct tokio::sync::oneshot::Sender",
  "sections": [
    {
      "name": "implementations",
      "methods": [
        {
          "code": "pub fn send(self, t: T) -> Result<(), T>",
          "text": "Attempts to send a value on this channel, returning it back if it could not be sent."
        },
        {
          "code": "pub async fn closed(&mut self)",
          "text": "Waits for the associated Receiver handle to close."
        },
        {
          "code": "pub fn is_closed(&self) -> bool",
          "text": "Returns true if the associated Receiver handle has been dropped."
        },
        {
          "code": "pub fn poll_closed(&mut self, cx: &mut Context<'_>) -> Poll<()>",
          "text": "Checks whether the oneshot channel has been closed, and if not, schedules the Waker in the provided Context to receive a notification when the channel is closed."
        }
      ]
    },
    {
      "name": "derefMethods",
      "methods": []
    },
    {
      "name": "traitImpl",
      "traits": [
        {
          "title": "impl<T: Debug> Debug for Sender<T>",
          "methods": [
            {
              "code": "fn fmt(&self, f: &mut Formatter<'_>) -> Result",
              "text": "Formats the value using the given formatter."
            }
          ]
        },
        {
          "title": "impl<T> Drop for Sender<T>",
          "methods": [
            {
              "code": "fn drop(&mut self)",
              "text": "Executes the destructor for this type."
            }
          ]
        }
      ]
    }
  ]
}